/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../../common";
import type { Bank, BankInterface } from "../../../contracts/Bank.sol/Bank";

const _abi = [
  {
    inputs: [],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint8",
        name: "version",
        type: "uint8",
      },
    ],
    name: "Initialized",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "targetAddress",
        type: "address",
      },
    ],
    name: "authorize",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "authorized",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "balances",
    outputs: [
      {
        internalType: "uint128",
        name: "",
        type: "uint128",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "strategyIndex",
        type: "uint256",
      },
      {
        internalType: "uint128[]",
        name: "commissionList",
        type: "uint128[]",
      },
    ],
    name: "changeCommission",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "strategyIndex",
        type: "uint256",
      },
    ],
    name: "commission",
    outputs: [
      {
        internalType: "uint128[]",
        name: "commissionList",
        type: "uint128[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "token",
        type: "address",
      },
      {
        internalType: "uint128",
        name: "amount",
        type: "uint128",
      },
    ],
    name: "deposit",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "initialize",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "token",
        type: "address",
      },
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint128",
        name: "amount",
        type: "uint128",
      },
    ],
    name: "transferToken",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "targetAddress",
        type: "address",
      },
    ],
    name: "unauthorize",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "token",
        type: "address",
      },
      {
        internalType: "uint128",
        name: "amount",
        type: "uint128",
      },
    ],
    name: "withdraw",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x608080604052346100c1576000549060ff8260081c1661006f575060ff80821603610034575b60405161107490816100c78239f35b60ff90811916176000557f7f26b83ff96e1f2b6a682f133852f6798a09c465da95921460cefb3847402498602060405160ff8152a138610025565b62461bcd60e51b815260206004820152602760248201527f496e697469616c697a61626c653a20636f6e747261637420697320696e697469604482015266616c697a696e6760c81b6064820152608490fd5b600080fdfe60806040908082526004918236101561001757600080fd5b600091823560e01c90816308fab16714610a78575080631065cf7314610973578063358ceb1214610808578063715018a61461079d5780638129fc1c1461049d5780638da5cb5b14610476578063b3fb6564146103f5578063b6a5d7de146103a4578063b918161114610369578063c23f001f14610318578063f0b37c04146102ca578063f2fde38b146102205763f538dd44146100b457600080fd5b3461021c578060031936011261021c57823592602480359267ffffffffffffffff9081851161021857366023860112156102185784840135918211610206578160051b9481519560209361010a85830189610b99565b8752848488019183010191368311610202578501905b8282106101df575050503386526099825260ff8187205416156101a057505060975491828610156101645750505061015b6101619293610c7e565b90610d3c565b80f35b909194506801000000000000000085101561018f57505061015b836001610161949501609755610c7e565b60418491634e487b7160e01b835252fd5b5162461bcd60e51b8152928301526019908201527f4e4f5f5045524d495353494f4e5f4348414e47455f434f4d4d000000000000006044820152606490fd5b81356001600160801b03811681036101fe578152908401908401610120565b8980fd5b8880fd5b8286604186634e487b7160e01b835252fd5b8580fd5b5080fd5b5082346102c65760203660031901126102c65761023b610b52565b91610244610bd1565b6001600160a01b0383161561025d578361016184610c29565b906020608492519162461bcd60e51b8352820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201527f64647265737300000000000000000000000000000000000000000000000000006064820152fd5b8280fd5b503461021c57602036600319011261021c576001600160a01b036102ec610b52565b338452609960205261030360ff8486205416610ebe565b16825260996020528120805460ff1916905580f35b503461021c578060031936011261021c576001600160801b038160209361033d610b52565b610345610b6d565b6001600160a01b039182168352609887528383209116825285522054915191168152f35b503461021c57602036600319011261021c5760ff816020936001600160a01b03610391610b52565b1681526099855220541690519015158152f35b503461021c57602036600319011261021c576001600160a01b036103c6610b52565b33845260996020526103dd60ff8486205416610ebe565b16825260996020528120805460ff1916600117905580f35b503461021c578060031936011261021c5761040e610b52565b906fffffffffffffffffffffffffffffffff19610429610b83565b916001600160801b0393610441858516303384610f6b565b5033865260986020526001600160a01b038287209116865260205284209261046d845493828516610f38565b16911617905580f35b503461021c578160031936011261021c576020906001600160a01b03606554169051908152f35b5082346102c657826003193601126102c65782549060ff91828160081c161590818092610791575b801561077b575b156107125760019260ff19918385848316178955610701575b5061051385885460081c166104f981610ccb565b61050281610ccb565b85805561050e81610ccb565b610ccb565b61051c33610c29565b85516060810181811067ffffffffffffffff8211176106ee57875260288152602095601e87830152601e88830152609754680100000000000000008110156106db57808761056d9201609755610c7e565b9290926106c9578254600384558060031061068d575b50918692908a52878a20918a5b84811061063657508a948b905b8a8683106105fd57505050505001553386526099845282858720918254161790556105c6578380f35b7f7f26b83ff96e1f2b6a682f133852f6798a09c465da95921460cefb38474024989261ff0019855416855551908152a18180808380f35b9092949591939661062990868951169086861b60031b916001600160801b03809116831b921b19161790565b960192018894939161059d565b8b949193948c5b8b60028210610656575050818601550191879392610590565b9094929391610680908785511690878b1b60031b916001600160801b03809116831b921b19161790565b920193019089929161063d565b876002818b8e888152209301821c83019282810180546001600160801b03169055015b8281106106be575050610583565b8c81550188906106b0565b60248a8086634e487b7160e01b825252fd5b60248a604186634e487b7160e01b835252fd5b602489604185634e487b7160e01b835252fd5b61ffff1916610101178755876104e5565b608483602087519162461bcd60e51b8352820152602e60248201527f496e697469616c697a61626c653a20636f6e747261637420697320616c72656160448201527f647920696e697469616c697a65640000000000000000000000000000000000006064820152fd5b50303b1580156104cc57506001848216146104cc565b506001848216106104c5565b82346108055780600319360112610805576107b6610bd1565b806001600160a01b0360655473ffffffffffffffffffffffffffffffffffffffff198116606555167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e08280a380f35b80fd5b508290346102c65760803660031901126102c657610824610b52565b61082c610b6d565b91604435916001600160a01b039384841680940361096f57606435946001600160801b03968787168088036101fe57338a526020936099855260ff878c2054161561092d57831692838b5260988552868b20951694858b52845288868b205416106108eb5750875260988152828720828852815282872093845494876108b488828916610f09565b166fffffffffffffffffffffffffffffffff198097161790558752609881528287209187525284209261046d845493828516610f38565b6064908386519162461bcd60e51b8352820152601360248201527f494e5355465f42414c414e43455f5452414e53000000000000000000000000006044820152fd5b6064838689519162461bcd60e51b8352820152601360248201527f4e4f5f5045524d495353494f4e5f5452414e53000000000000000000000000006044820152fd5b8680fd5b503461021c57602092836003193601126102c6576109919035610c7e565b5081519182858354948581520192839086528686209186945b6001908782880110156109dd57908560029286546001600160801b038116825260801c8c820152019401950194926109aa565b899150610a0d83838b938a8c8b9a549184828210610a5f575b5010610a51575b5090509695949293960382610b99565b83519485948186019282875251809352850193925b828110610a3157505050500390f35b83516001600160801b031685528695509381019392810192600101610a22565b60801c8152018490896109fd565b600191946001600160801b0385168152019301846109f6565b9184915034610b4e5780600319360112610b4e57610a94610b52565b906001600160a01b03610aa5610b83565b92169263a9059cbb60e01b855233908501526001600160801b0392838316602486015260208560448189855af1948515610b44576fffffffffffffffffffffffffffffffff19939495610b16575b50338652609860205281862090865260205284209261046d845493828516610f09565b610b369060203d8111610b3d575b610b2e8183610b99565b810190610f53565b5086610af3565b503d610b24565b82513d88823e3d90fd5b8380fd5b600435906001600160a01b0382168203610b6857565b600080fd5b602435906001600160a01b0382168203610b6857565b602435906001600160801b0382168203610b6857565b90601f8019910116810190811067ffffffffffffffff821117610bbb57604052565b634e487b7160e01b600052604160045260246000fd5b6001600160a01b03606554163303610be557565b606460405162461bcd60e51b815260206004820152602060248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e65726044820152fd5b606554906001600160a01b03809116918273ffffffffffffffffffffffffffffffffffffffff19821617606555167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0600080a3565b609754811015610cb55760976000527f354a83ed9988f79f6038d4c7a7dadbad8af32f4ad6df893e0e5807a1b1944ff90190600090565b634e487b7160e01b600052603260045260246000fd5b15610cd257565b608460405162461bcd60e51b815260206004820152602b60248201527f496e697469616c697a61626c653a20636f6e7472616374206973206e6f74206960448201527f6e697469616c697a696e670000000000000000000000000000000000000000006064820152fd5b9190610ea857805167ffffffffffffffff8111610bbb57680100000000000000008111610bbb578254818455808210610e4a575b5060208092019160009384528084209160019181831c94865b868110610e07575060011983169092039182610da9575b50505050505050565b929190865b828110610dc8575050505050015538808080808080610da0565b90919282610dfb86996001600160801b0384985116908560041b60031b916001600160801b03809116831b921b19161790565b98019493929101610dae565b849088895b8560028210610e215750508188015501610d89565b855195019488946001600160801b03918216600784901b90811b92901b19909316179101610e0c565b6000848152602081206001928301831c81019190848401841c01600485901b60101680610e8d575b505b828110610e8357505050610d70565b8181558301610e74565b600019908183019182549160200360031b1c16905538610e72565b634e487b7160e01b600052600060045260246000fd5b15610ec557565b606460405162461bcd60e51b815260206004820152601260248201527f4e4f5f5045524d495353494f4e5f4155544800000000000000000000000000006044820152fd5b6001600160801b039182169082160391908211610f2257565b634e487b7160e01b600052601160045260246000fd5b9190916001600160801b0380809416911601918211610f2257565b90816020910312610b6857518015158103610b685790565b6001600160a01b039391841691821561100057916000856064936020969560405198899788967f23b872dd00000000000000000000000000000000000000000000000000000000885260048801521660248601526044850152165af1908115610ff457600091610fd9575090565b610ff1915060203d8111610b3d57610b2e8183610b99565b90565b6040513d6000823e3d90fd5b939150602092600083604493604051978896879563a9059cbb60e01b87521660048601526024850152165af1908115610ff457600091610fd957509056fea2646970667358221220a954c4ea7e1223ebacfc60d1918d2d56ce915fe2dfdd6dba64b098789c45837f64736f6c63430008140033";

type BankConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: BankConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class Bank__factory extends ContractFactory {
  constructor(...args: BankConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<Bank> {
    return super.deploy(overrides || {}) as Promise<Bank>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): Bank {
    return super.attach(address) as Bank;
  }
  override connect(signer: Signer): Bank__factory {
    return super.connect(signer) as Bank__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): BankInterface {
    return new utils.Interface(_abi) as BankInterface;
  }
  static connect(address: string, signerOrProvider: Signer | Provider): Bank {
    return new Contract(address, _abi, signerOrProvider) as Bank;
  }
}
