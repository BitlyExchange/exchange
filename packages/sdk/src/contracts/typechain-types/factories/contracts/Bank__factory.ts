/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../common";
import type { Bank, BankInterface } from "../../contracts/Bank";

const _abi = [
  {
    inputs: [],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "targetAddress",
        type: "address",
      },
    ],
    name: "authorize",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "authorized",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "balances",
    outputs: [
      {
        internalType: "uint128",
        name: "",
        type: "uint128",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "strategyIndex",
        type: "uint256",
      },
      {
        internalType: "uint128[]",
        name: "commissionList",
        type: "uint128[]",
      },
    ],
    name: "changeCommission",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "strategyIndex",
        type: "uint256",
      },
    ],
    name: "commission",
    outputs: [
      {
        internalType: "uint128[]",
        name: "commissionList",
        type: "uint128[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "token",
        type: "address",
      },
      {
        internalType: "uint128",
        name: "amount",
        type: "uint128",
      },
    ],
    name: "deposit",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "token",
        type: "address",
      },
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint128",
        name: "amount",
        type: "uint128",
      },
    ],
    name: "transferToken",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "targetAddress",
        type: "address",
      },
    ],
    name: "unauthorize",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "token",
        type: "address",
      },
      {
        internalType: "uint128",
        name: "amount",
        type: "uint128",
      },
    ],
    name: "withdraw",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x6080346101f457600160008181558154336001600160a01b0319821681178455906001600160a01b03167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e08380a3606083016001600160401b038111848210176101e057604052602883526020601e81850152601e6040850152600293845494680100000000000000008610156101cc578486018082558610156101b857849581855283852001918254600384558060031061017c575b509491845282842090845b8381106101335750508394845b8381106100ff5750509360049291604095015533835252209060ff19825416179055604051610ce090816101fa8239f35b909284610129829860ff875116908560041b60031b9160018060801b03809116831b921b19161790565b97940191016100ce565b9280969386875b8785821061015157505081850155019592956100c1565b87519701968a946001600160801b03600784901b90811b1990941660ff90921690931b17910161013a565b83865284862080880180546001600160801b03169055908701871c810190879084015b8281106101ad5750506100b6565b87815501879061019f565b634e487b7160e01b84526032600452602484fd5b634e487b7160e01b84526041600452602484fd5b634e487b7160e01b82526041600452602482fd5b600080fdfe60806040908082526004918236101561001757600080fd5b600091823560e01c90816308fab167146107aa575080631065cf73146106a5578063358ceb121461053b578063715018a6146104d05780638da5cb5b146104a9578063b3fb656414610428578063b6a5d7de146103d9578063b91816111461039e578063c23f001f1461034d578063f0b37c0414610301578063f2fde38b146102145763f538dd44146100a957600080fd5b34610210578060031936011261021057823592602480359267ffffffffffffffff9081851161020c573660238601121561020c57848401359182116101fa578160051b948151956020936100ff858301896108cb565b87528484880191830101913683116101f6578501905b8282106101d35750505033865283825260ff81872054161561019457505060025491828610156101585750505061014f610155929361095b565b906109a8565b80f35b909194506801000000000000000085101561018357505061014f83600161015594950160025561095b565b60418491634e487b7160e01b835252fd5b5162461bcd60e51b8152928301526019908201527f4e4f5f5045524d495353494f4e5f4348414e47455f434f4d4d000000000000006044820152606490fd5b81356001600160801b03811681036101f2578152908401908401610115565b8980fd5b8880fd5b8286604186634e487b7160e01b835252fd5b8580fd5b5080fd5b5082346102fd5760203660031901126102fd5761022f610884565b90610238610903565b6001600160a01b038092169283156102945750506001548273ffffffffffffffffffffffffffffffffffffffff19821617600155167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e08380a380f35b906020608492519162461bcd60e51b8352820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201527f64647265737300000000000000000000000000000000000000000000000000006064820152fd5b8280fd5b5082346102fd5760203660031901126102fd576001600160a01b03610324610884565b3385528260205261033a60ff8587205416610b2a565b1683526020528120805460ff1916905580f35b50346102105780600319360112610210576001600160801b0381602093610372610884565b61037a61089f565b6001600160a01b039182168352600387528383209116825285522054915191168152f35b5082346102fd5760203660031901126102fd578160209360ff926001600160a01b036103c8610884565b168252855220541690519015158152f35b5082346102fd5760203660031901126102fd576001600160a01b036103fc610884565b3385528260205261041260ff8587205416610b2a565b1683526020528120805460ff1916600117905580f35b5034610210578060031936011261021057610441610884565b906fffffffffffffffffffffffffffffffff1961045c6108b5565b916001600160801b0393610474858516303384610bd7565b5033865260036020526001600160a01b03828720911686526020528420926104a0845493828516610ba4565b16911617905580f35b50346102105781600319360112610210576020906001600160a01b03600154169051908152f35b82346105385780600319360112610538576104e9610903565b806001600160a01b0360015473ffffffffffffffffffffffffffffffffffffffff198116600155167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e08280a380f35b80fd5b508290346102fd5760803660031901126102fd57610557610884565b61055f61089f565b91604435916001600160a01b03938484168094036106a157606435946001600160801b03968787168088036101f257338a5260209382855260ff878c2054161561065f57831692838b5260038552868b20951694858b52845288868b2054161061061d5750875260038152828720828852815282872093845494876105e688828916610b75565b166fffffffffffffffffffffffffffffffff19809716179055875260038152828720918752528420926104a0845493828516610ba4565b6064908386519162461bcd60e51b8352820152601360248201527f494e5355465f42414c414e43455f5452414e53000000000000000000000000006044820152fd5b6064838689519162461bcd60e51b8352820152601360248201527f4e4f5f5045524d495353494f4e5f5452414e53000000000000000000000000006044820152fd5b8680fd5b503461021057602092836003193601126102fd576106c3903561095b565b5081519182858354948581520192839086528686209186945b60019087828801101561070f57908560029286546001600160801b038116825260801c8c820152019401950194926106dc565b89915061073f83838b938a8c8b9a549184828210610791575b5010610783575b50905096959492939603826108cb565b83519485948186019282875251809352850193925b82811061076357505050500390f35b83516001600160801b031685528695509381019392810192600101610754565b60801c81520184908961072f565b600191946001600160801b038516815201930184610728565b91849150346108805780600319360112610880576107c6610884565b906001600160a01b036107d76108b5565b92169263a9059cbb60e01b855233908501526001600160801b0392838316602486015260208560448189855af1948515610876576fffffffffffffffffffffffffffffffff19939495610848575b5033865260036020528186209086526020528420926104a0845493828516610b75565b6108689060203d811161086f575b61086081836108cb565b810190610bbf565b5086610825565b503d610856565b82513d88823e3d90fd5b8380fd5b600435906001600160a01b038216820361089a57565b600080fd5b602435906001600160a01b038216820361089a57565b602435906001600160801b038216820361089a57565b90601f8019910116810190811067ffffffffffffffff8211176108ed57604052565b634e487b7160e01b600052604160045260246000fd5b6001600160a01b0360015416330361091757565b606460405162461bcd60e51b815260206004820152602060248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e65726044820152fd5b6002548110156109925760026000527f405787fa12a823e0f2b7631cc41b3ba8828b3321ca811111fa75cd3aa3bb5ace0190600090565b634e487b7160e01b600052603260045260246000fd5b9190610b1457805167ffffffffffffffff81116108ed576801000000000000000081116108ed578254818455808210610ab6575b5060208092019160009384528084209160019181831c94865b868110610a73575060011983169092039182610a15575b50505050505050565b929190865b828110610a34575050505050015538808080808080610a0c565b90919282610a6786996001600160801b0384985116908560041b60031b916001600160801b03809116831b921b19161790565b98019493929101610a1a565b849088895b8560028210610a8d57505081880155016109f5565b855195019488946001600160801b03918216600784901b90811b92901b19909316179101610a78565b6000848152602081206001928301831c81019190848401841c01600485901b60101680610af9575b505b828110610aef575050506109dc565b8181558301610ae0565b600019908183019182549160200360031b1c16905538610ade565b634e487b7160e01b600052600060045260246000fd5b15610b3157565b606460405162461bcd60e51b815260206004820152601260248201527f4e4f5f5045524d495353494f4e5f4155544800000000000000000000000000006044820152fd5b6001600160801b039182169082160391908211610b8e57565b634e487b7160e01b600052601160045260246000fd5b9190916001600160801b0380809416911601918211610b8e57565b9081602091031261089a5751801515810361089a5790565b6001600160a01b0393918416918215610c6c57916000856064936020969560405198899788967f23b872dd00000000000000000000000000000000000000000000000000000000885260048801521660248601526044850152165af1908115610c6057600091610c45575090565b610c5d915060203d811161086f5761086081836108cb565b90565b6040513d6000823e3d90fd5b939150602092600083604493604051978896879563a9059cbb60e01b87521660048601526024850152165af1908115610c6057600091610c4557509056fea26469706673582212200dd1b2aa954fac99d740ba6e7f0ccc4334447c02bdea122248c7f0f2e58b030364736f6c63430008140033";

type BankConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: BankConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class Bank__factory extends ContractFactory {
  constructor(...args: BankConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<Bank> {
    return super.deploy(overrides || {}) as Promise<Bank>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): Bank {
    return super.attach(address) as Bank;
  }
  override connect(signer: Signer): Bank__factory {
    return super.connect(signer) as Bank__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): BankInterface {
    return new utils.Interface(_abi) as BankInterface;
  }
  static connect(address: string, signerOrProvider: Signer | Provider): Bank {
    return new Contract(address, _abi, signerOrProvider) as Bank;
  }
}
