/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../../../common";
import type {
  ERC20Token,
  ERC20TokenInterface,
} from "../../../../contracts/tests/ERC20.sol/ERC20Token";

const _abi = [
  {
    inputs: [
      {
        internalType: "string",
        name: "name",
        type: "string",
      },
      {
        internalType: "string",
        name: "symbol",
        type: "string",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "Approval",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "Transfer",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
    ],
    name: "allowance",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "approve",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "balanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "decimals",
    outputs: [
      {
        internalType: "uint8",
        name: "",
        type: "uint8",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "subtractedValue",
        type: "uint256",
      },
    ],
    name: "decreaseAllowance",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "addedValue",
        type: "uint256",
      },
    ],
    name: "increaseAllowance",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "mint",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "name",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "symbol",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "totalSupply",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "transfer",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "transferFrom",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x60806040523462000362576200101c803803806200001d8162000367565b928339810190604081830312620003625780516001600160401b03908181116200036257836200004f9184016200038d565b916020938482015183811162000362576200006b92016200038d565b825182811162000262576003918254916001958684811c9416801562000357575b8885101462000341578190601f94858111620002eb575b508890858311600114620002845760009262000278575b505060001982861b1c191690861b1783555b8051938411620002625760049586548681811c9116801562000257575b828210146200024257838111620001f7575b50809285116001146200018957509383949184926000956200017d575b50501b92600019911b1c19161790555b60058054336001600160a01b03198216811790925560405191906001600160a01b03167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0600080a3610c1c9081620004008239f35b01519350388062000118565b92919084601f1981168860005285600020956000905b89838310620001dc5750505010620001c1575b50505050811b01905562000128565b01519060f884600019921b161c1916905538808080620001b2565b8587015189559097019694850194889350908101906200019f565b87600052816000208480880160051c82019284891062000238575b0160051c019087905b8281106200022b575050620000fb565b600081550187906200021b565b9250819262000212565b602288634e487b7160e01b6000525260246000fd5b90607f1690620000e9565b634e487b7160e01b600052604160045260246000fd5b015190503880620000ba565b90889350601f19831691876000528a6000209260005b8c828210620002d45750508411620002bb575b505050811b018355620000cc565b015160001983881b60f8161c19169055388080620002ad565b8385015186558c979095019493840193016200029a565b90915085600052886000208580850160051c8201928b861062000337575b918a91869594930160051c01915b82811062000327575050620000a3565b600081558594508a910162000317565b9250819262000309565b634e487b7160e01b600052602260045260246000fd5b93607f16936200008c565b600080fd5b6040519190601f01601f191682016001600160401b038111838210176200026257604052565b919080601f84011215620003625782516001600160401b0381116200026257602090620003c3601f8201601f1916830162000367565b92818452828287010111620003625760005b818110620003eb57508260009394955001015290565b8581018301518482018401528201620003d556fe6080604081815260048036101561001557600080fd5b600092833560e01c90816306fdde031461071457508063095ea7b3146106ea57806318160ddd146106cb57806323b872dd14610600578063313ce567146105e4578063395093511461059557806340c10f19146104d757806370a08231146104a1578063715018a6146104395780638da5cb5b1461041157806395d89b41146102f1578063a457c2d714610231578063a9059cbb14610200578063dd62ed3e146101b35763f2fde38b146100c857600080fd5b346101af5760203660031901126101af576100e1610852565b906100ea610883565b6001600160a01b038092169283156101465750506005548273ffffffffffffffffffffffffffffffffffffffff19821617600555167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e08380a380f35b906020608492519162461bcd60e51b8352820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201527f64647265737300000000000000000000000000000000000000000000000000006064820152fd5b8280fd5b5050346101fc57806003193601126101fc57806020926101d1610852565b6101d961086d565b6001600160a01b0391821683526001865283832091168252845220549051908152f35b5080fd5b5050346101fc57806003193601126101fc5760209061022a610220610852565b60243590336108fe565b5160018152f35b5082346102ee57826003193601126102ee5761024b610852565b91836024359233815260016020528181206001600160a01b03861682526020522054908282106102855760208561022a8585038733610ab2565b608490602086519162461bcd60e51b8352820152602560248201527f45524332303a2064656372656173656420616c6c6f77616e63652062656c6f7760448201527f207a65726f0000000000000000000000000000000000000000000000000000006064820152fd5b80fd5b509190346101fc57816003193601126101fc57805190828454600181811c90808316928315610407575b60209384841081146103f4578388529081156103d85750600114610383575b505050829003601f01601f191682019267ffffffffffffffff841183851017610370575082918261036c925282610809565b0390f35b80604186634e487b7160e01b6024945252fd5b8787529192508591837f8a35acfbc15ff81a39ae7d344fd709f28e8600b4aa8c65c6b64bfe7fe36bd19b5b8385106103c4575050505083010138808061033a565b8054888601830152930192849082016103ae565b60ff1916878501525050151560051b840101905038808061033a565b60248960228c634e487b7160e01b835252fd5b91607f169161031b565b5050346101fc57816003193601126101fc576020906001600160a01b03600554169051908152f35b83346102ee57806003193601126102ee57610452610883565b806001600160a01b0360055473ffffffffffffffffffffffffffffffffffffffff198116600555167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e08280a380f35b5050346101fc5760203660031901126101fc57806020926001600160a01b036104c8610852565b16815280845220549051908152f35b5090346101af57806003193601126101af576104f1610852565b906001600160a01b03602435921692831561055357506020827fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef9261053987956002546108db565b60025585855284835280852082815401905551908152a380f35b6020606492519162461bcd60e51b8352820152601f60248201527f45524332303a206d696e7420746f20746865207a65726f2061646472657373006044820152fd5b5050346101fc57806003193601126101fc5761022a6020926105dd6105b8610852565b91338152600186528481206001600160a01b03841682528652846024359120546108db565b9033610ab2565b5050346101fc57816003193601126101fc576020905160128152f35b508290346101fc5760603660031901126101fc5761061c610852565b61062461086d565b9184604435946001600160a01b03841681526001602052818120338252602052205490600019820361065f575b60208661022a8787876108fe565b848210610688575091839161067d6020969561022a95033383610ab2565b919394819350610651565b606490602087519162461bcd60e51b8352820152601d60248201527f45524332303a20696e73756666696369656e7420616c6c6f77616e63650000006044820152fd5b5050346101fc57816003193601126101fc576020906002549051908152f35b5050346101fc57806003193601126101fc5760209061022a61070a610852565b6024359033610ab2565b84915083346101af57826003193601126101af5782600354600181811c908083169283156107ff575b60209384841081146103f4578388529081156107e3575060011461078d57505050829003601f01601f191682019267ffffffffffffffff841183851017610370575082918261036c925282610809565b600387529192508591837fc2575a0e9e593c00f959f8c92f12db2869c3395a3b0502d05e2516446f71f85b5b8385106107cf575050505083010185808061033a565b8054888601830152930192849082016107b9565b60ff1916878501525050151560051b840101905085808061033a565b91607f169161073d565b6020808252825181830181905290939260005b82811061083e57505060409293506000838284010152601f8019910116010190565b81810186015184820160400152850161081c565b600435906001600160a01b038216820361086857565b600080fd5b602435906001600160a01b038216820361086857565b6001600160a01b0360055416330361089757565b606460405162461bcd60e51b815260206004820152602060248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e65726044820152fd5b919082018092116108e857565b634e487b7160e01b600052601160045260246000fd5b6001600160a01b03809116918215610a4857169182156109de5760008281528060205260408120549180831061097457604082827fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef958760209652828652038282205586815220818154019055604051908152a3565b608460405162461bcd60e51b815260206004820152602660248201527f45524332303a207472616e7366657220616d6f756e742065786365656473206260448201527f616c616e636500000000000000000000000000000000000000000000000000006064820152fd5b608460405162461bcd60e51b815260206004820152602360248201527f45524332303a207472616e7366657220746f20746865207a65726f206164647260448201527f65737300000000000000000000000000000000000000000000000000000000006064820152fd5b608460405162461bcd60e51b815260206004820152602560248201527f45524332303a207472616e736665722066726f6d20746865207a65726f20616460448201527f64726573730000000000000000000000000000000000000000000000000000006064820152fd5b6001600160a01b03809116918215610b7d5716918215610b135760207f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925918360005260018252604060002085600052825280604060002055604051908152a3565b608460405162461bcd60e51b815260206004820152602260248201527f45524332303a20617070726f766520746f20746865207a65726f20616464726560448201527f73730000000000000000000000000000000000000000000000000000000000006064820152fd5b608460405162461bcd60e51b8152602060048201526024808201527f45524332303a20617070726f76652066726f6d20746865207a65726f2061646460448201527f72657373000000000000000000000000000000000000000000000000000000006064820152fdfea26469706673582212201dc5a5f923d3d23ef8635bf4fdf83bd341b7ff3a9199d37e3adfcdec4ef8e08364736f6c63430008140033";

type ERC20TokenConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: ERC20TokenConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class ERC20Token__factory extends ContractFactory {
  constructor(...args: ERC20TokenConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    name: PromiseOrValue<string>,
    symbol: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<ERC20Token> {
    return super.deploy(name, symbol, overrides || {}) as Promise<ERC20Token>;
  }
  override getDeployTransaction(
    name: PromiseOrValue<string>,
    symbol: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(name, symbol, overrides || {});
  }
  override attach(address: string): ERC20Token {
    return super.attach(address) as ERC20Token;
  }
  override connect(signer: Signer): ERC20Token__factory {
    return super.connect(signer) as ERC20Token__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): ERC20TokenInterface {
    return new utils.Interface(_abi) as ERC20TokenInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): ERC20Token {
    return new Contract(address, _abi, signerOrProvider) as ERC20Token;
  }
}
