/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../../common";
import type { E1155, E1155Interface } from "../../../contracts/tests/E1155";

const _abi = [
  {
    inputs: [],
    name: "ERC1155Base__ArrayLengthMismatch",
    type: "error",
  },
  {
    inputs: [],
    name: "ERC1155Base__BalanceQueryZeroAddress",
    type: "error",
  },
  {
    inputs: [],
    name: "ERC1155Base__BurnExceedsBalance",
    type: "error",
  },
  {
    inputs: [],
    name: "ERC1155Base__BurnFromZeroAddress",
    type: "error",
  },
  {
    inputs: [],
    name: "ERC1155Base__ERC1155ReceiverNotImplemented",
    type: "error",
  },
  {
    inputs: [],
    name: "ERC1155Base__ERC1155ReceiverRejected",
    type: "error",
  },
  {
    inputs: [],
    name: "ERC1155Base__MintToZeroAddress",
    type: "error",
  },
  {
    inputs: [],
    name: "ERC1155Base__NotOwnerOrApproved",
    type: "error",
  },
  {
    inputs: [],
    name: "ERC1155Base__SelfApproval",
    type: "error",
  },
  {
    inputs: [],
    name: "ERC1155Base__TransferExceedsBalance",
    type: "error",
  },
  {
    inputs: [],
    name: "ERC1155Base__TransferToZeroAddress",
    type: "error",
  },
  {
    inputs: [],
    name: "ERC165Base__InvalidInterfaceId",
    type: "error",
  },
  {
    inputs: [],
    name: "EnumerableSet__IndexOutOfBounds",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "account",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        indexed: false,
        internalType: "bool",
        name: "approved",
        type: "bool",
      },
    ],
    name: "ApprovalForAll",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256[]",
        name: "ids",
        type: "uint256[]",
      },
      {
        indexed: false,
        internalType: "uint256[]",
        name: "values",
        type: "uint256[]",
      },
    ],
    name: "TransferBatch",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "TransferSingle",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "string",
        name: "value",
        type: "string",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "URI",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
    ],
    name: "accountsByToken",
    outputs: [
      {
        internalType: "address[]",
        name: "",
        type: "address[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
    ],
    name: "balanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address[]",
        name: "accounts",
        type: "address[]",
      },
      {
        internalType: "uint256[]",
        name: "ids",
        type: "uint256[]",
      },
    ],
    name: "balanceOfBatch",
    outputs: [
      {
        internalType: "uint256[]",
        name: "",
        type: "uint256[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "faucet",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
      {
        internalType: "address",
        name: "operator",
        type: "address",
      },
    ],
    name: "isApprovedForAll",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256[]",
        name: "ids",
        type: "uint256[]",
      },
      {
        internalType: "uint256[]",
        name: "amounts",
        type: "uint256[]",
      },
      {
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
    ],
    name: "safeBatchTransferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
    ],
    name: "safeTransferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        internalType: "bool",
        name: "status",
        type: "bool",
      },
    ],
    name: "setApprovalForAll",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes4",
        name: "interfaceId",
        type: "bytes4",
      },
    ],
    name: "supportsInterface",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "tokensByAccount",
    outputs: [
      {
        internalType: "uint256[]",
        name: "",
        type: "uint256[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
    ],
    name: "totalHolders",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "totalSupply",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
    ],
    name: "totalSupply",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "uri",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
] as const;

const _bytecode =
  "0x60808060405234610016576119e6908161001c8239f35b600080fdfe6080604052600436101561001257600080fd5b60003560e01c8062fdd58e1461149857806301ffc9a7146114365780630e89341c1461135357806313ba55df1461130857806318160ddd146112ea5780632eb2c2d614610db65780634e1273f414610c055780636dcfd84114610b1657806385bff2e714610a74578063a22cb4651461099d578063bd85b03914610952578063de5f72fd146106d0578063e985e9c51461064e5763f242432a146100b557600080fd5b346106495760a0366003190112610649576100ce6114c7565b6100d66114dd565b9060843567ffffffffffffffff8111610649576100f79036906004016115e7565b916001600160a01b0390338284161415806105f6575b6105cc57818116156105a257610124604435611734565b61012f606435611734565b83831684861603610381575b50506044356000527f1799cf914cb0cb442ca7c7ac709ee40d0cb89e87351dc08d517fbda27d50c68b936020948086526040600020848616600052865260406000205480606435116103575760443560005281875260406000208587166000528752606435900360406000205560443560005285526040600020838316600052855260406000206101cf6064358254611727565b905560405160443581526064358682015283831690848616907fc3d58168c5ae7397731d063d5bbf3d657854427343f4c083240f7aacaa2d0f6260403392a4813b61021657005b849161027a916000604051958680958194837ff23a6e61000000000000000000000000000000000000000000000000000000009b8c85523360048601521660248401526044356044840152606435606484015260a0608484015260a48301906114f3565b0393165af160009181610328575b506102eb5782610296611779565b6308c379a0146102b2575b600460405163380147a960e01b8152fd5b6102ba611797565b90816102c657506102a1565b6102e760405192839262461bcd60e51b8452600484015260248301906114f3565b0390fd5b6001600160e01b0319160390506102fe57005b60046040517f3744db29000000000000000000000000000000000000000000000000000000008152fd5b610349919250843d8611610350575b610341818361154f565b810190611759565b9038610288565b503d610337565b60046040517f8cd635d8000000000000000000000000000000000000000000000000000000008152fd5b90949392916103c2846001600160a01b03166000527fb31c2c74f86ca3ce94d901f5f5bbe66f7161eec2f7b5aa0b75a86371436424ec602052604060002090565b936103ff826001600160a01b03166000527fb31c2c74f86ca3ce94d901f5f5bbe66f7161eec2f7b5aa0b75a86371436424ec602052604060002090565b9260005b88518110156105925761041681836116c7565b519081610428575b6001915001610403565b610432818b6116c7565b5184881661053957806000527fb31c2c74f86ca3ce94d901f5f5bbe66f7161eec2f7b5aa0b75a86371436424ea6020526040600020610472848254611727565b90555b8588166104d5576000527fb31c2c74f86ca3ce94d901f5f5bbe66f7161eec2f7b5aa0b75a86371436424ea602052604060002080549283818103116104bf5760019303905561041e565b634e487b7160e01b600052601160045260246000fd5b600192506104e381876116db565b156104ef575b5061041e565b80610532916000527fb31c2c74f86ca3ce94d901f5f5bbe66f7161eec2f7b5aa0b75a86371436424eb60205261052b8988166040600020611868565b5087611868565b50386104e9565b8261054482876116db565b0361047557806000527fb31c2c74f86ca3ce94d901f5f5bbe66f7161eec2f7b5aa0b75a86371436424eb60205261058188861660406000206118ff565b5061058c818a6118ff565b50610475565b505094955091925050388061013b565b60046040517ff5cadad5000000000000000000000000000000000000000000000000000000008152fd5b60046040517f25dfda00000000000000000000000000000000000000000000000000000000008152fd5b50610633836001600160a01b03166000527f1799cf914cb0cb442ca7c7ac709ee40d0cb89e87351dc08d517fbda27d50c68c602052604060002090565b3360005260205260ff604060002054161561010d565b600080fd5b34610649576040366003190112610649576106676114c7565b6001600160a01b036106b361067a6114dd565b926001600160a01b03166000527f1799cf914cb0cb442ca7c7ac709ee40d0cb89e87351dc08d517fbda27d50c68c602052604060002090565b9116600052602052602060ff604060002054166040519015158152f35b346106495760003660031901126106495760005460001981146104bf5760018091019081600055604051906020918281019080821067ffffffffffffffff83111761093c576000916040525233158061091257819061072e85611734565b9060405161073b81611533565b838152853681830137600a61074f826116a4565b527fb31c2c74f86ca3ce94d901f5f5bbe66f7161eec2f7b5aa0b75a86371436424ec80875233600090815260209190915260409020906000945b610812575b505050505050816000527f1799cf914cb0cb442ca7c7ac709ee40d0cb89e87351dc08d517fbda27d50c68b815260406000203360005281526040600020908154600a81018091116104bf57600a9255604051928352820152600033917fc3d58168c5ae7397731d063d5bbf3d657854427343f4c083240f7aacaa2d0f6260403392a4005b835185101561090d57846108278796836116c7565b5180610837575b50850194610789565b955061084381866116c7565b51806000527fb31c2c74f86ca3ce94d901f5f5bbe66f7161eec2f7b5aa0b75a86371436424ea90818a52604060002061087d898254611727565b90558886156108aa5750600052885260406000209081549687039687116104bf5787968792555b9061082e565b9750879291506108ba81336116db565b156108c6575b506108a4565b80610906916000527fb31c2c74f86ca3ce94d901f5f5bbe66f7161eec2f7b5aa0b75a86371436424eb8b526108ff336040600020611868565b5085611868565b508a6108c0565b61078e565b60046040517f0391df7e000000000000000000000000000000000000000000000000000000008152fd5b634e487b7160e01b600052604160045260246000fd5b34610649576020366003190112610649576004356000527fb31c2c74f86ca3ce94d901f5f5bbe66f7161eec2f7b5aa0b75a86371436424ea6020526020604060002054604051908152f35b34610649576040366003190112610649576109b66114c7565b60243590811515809203610649576001600160a01b031690813314610a4a573360009081527f1799cf914cb0cb442ca7c7ac709ee40d0cb89e87351dc08d517fbda27d50c68c6020526040902082600052602052604060002060ff1981541660ff83161790556040519081527f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c3160203392a3005b60046040517ff6615266000000000000000000000000000000000000000000000000000000008152fd5b3461064957602036600319011261064957610ac8610a906114c7565b6001600160a01b03166000527fb31c2c74f86ca3ce94d901f5f5bbe66f7161eec2f7b5aa0b75a86371436424ec602052604060002090565b8054610ad381611672565b9160005b828110610af85760405160208082528190610af49082018761163e565b0390f35b80610b0560019284611821565b610b0f82876116c7565b5201610ad7565b3461064957602080600319360112610649576004356000527fb31c2c74f86ca3ce94d901f5f5bbe66f7161eec2f7b5aa0b75a86371436424eb815260406000208054610b6181611571565b90610b6f604051928361154f565b808252610b7b81611571565b8285019390601f190136853760005b828110610bde5750505090604051928392818401908285525180915260408401929160005b828110610bbe57505050500390f35b83516001600160a01b031685528695509381019392810192600101610baf565b806001600160a01b03610bf360019385611821565b16610bfe82876116c7565b5201610b8a565b346106495760403660031901126106495760043567ffffffffffffffff808211610649573660238301121561064957816004013590610c4382611571565b92610c51604051948561154f565b82845260209260248486019160051b8301019136831161064957602401905b828210610d975750505060243590811161064957610c92903690600401611589565b918051835103610d6d57610ca68151611672565b9060005b8151811015610d5a576001600160a01b039081610cc782856116c7565b511615610d3057600191610cdb82886116c7565b516000527f1799cf914cb0cb442ca7c7ac709ee40d0cb89e87351dc08d517fbda27d50c68b8652604060002090610d1283866116c7565b51166000528552604060002054610d2982866116c7565b5201610caa565b60046040517fdb5d8797000000000000000000000000000000000000000000000000000000008152fd5b60405184815280610af48187018661163e565b60046040517f7cfc16da000000000000000000000000000000000000000000000000000000008152fd5b81356001600160a01b0381168103610649578152908401908401610c70565b346106495760a036600319011261064957610dcf6114c7565b610dd76114dd565b67ffffffffffffffff9160443583811161064957610df9903690600401611589565b60643584811161064957610e11903690600401611589565b9360843590811161064957610e2a9036906004016115e7565b916001600160a01b039133838316141580611297575b6105cc57828516156105a2578051865103610d6d5782851683831603611097575b6000935b8151851015610f1657610e7885836116c7565b5194610e8481896116c7565b5190866000527f1799cf914cb0cb442ca7c7ac709ee40d0cb89e87351dc08d517fbda27d50c68b602091818352604060002088881660005283526040600020549081851161035757846001928b60005284865260406000208b8b166000528652036040600020550197600052815260406000209086891660005252610f0f6040600020918254611727565b9055610e65565b908684879260405160408152610f2f604082018361163e565b908082036020820152838616917f4a39dc06d4c0dbc64b70af90fd698a233a518aa5d07e595d983b8c0526c8f7fb858a169280610f6d33948a61163e565b0390a4833b610f7857005b6040519485938492847fbc197c8100000000000000000000000000000000000000000000000000000000998a86523360048701521660248501526044840160a0905260a48401610fc79161163e565b838103600319016064850152610fdc9161163e565b828103600319016084840152610ff1916114f3565b03921691815a602094600091f160009181611077575b5061106657611014611779565b6308c379a01461102f57600460405163380147a960e01b8152fd5b611037611797565b8061104257506102a1565b6102e79060405191829162461bcd60e51b83526020600484015260248301906114f3565b6001600160e01b031916036102fe57005b61109091925060203d811161035057610341818361154f565b9083611007565b949092936110d7846001600160a01b03166000527fb31c2c74f86ca3ce94d901f5f5bbe66f7161eec2f7b5aa0b75a86371436424ec602052604060002090565b93611114826001600160a01b03166000527fb31c2c74f86ca3ce94d901f5f5bbe66f7161eec2f7b5aa0b75a86371436424ec602052604060002090565b9260005b885181101561128a5761112b81836116c7565b51908161113d575b6001915001611118565b611147818b6116c7565b5184881661123157806000527fb31c2c74f86ca3ce94d901f5f5bbe66f7161eec2f7b5aa0b75a86371436424ea6020526040600020611187848254611727565b90555b8588166111d4576000527fb31c2c74f86ca3ce94d901f5f5bbe66f7161eec2f7b5aa0b75a86371436424ea602052604060002080549283818103116104bf57600193039055611133565b600192506111e281876116db565b156111ee575b50611133565b8061122a916000527fb31c2c74f86ca3ce94d901f5f5bbe66f7161eec2f7b5aa0b75a86371436424eb60205261052b8988166040600020611868565b508a6111e8565b8261123c82876116db565b0361118a57806000527fb31c2c74f86ca3ce94d901f5f5bbe66f7161eec2f7b5aa0b75a86371436424eb60205261127988861660406000206118ff565b50611284818a6118ff565b5061118a565b5096919594509150610e61565b506112d4826001600160a01b03166000527f1799cf914cb0cb442ca7c7ac709ee40d0cb89e87351dc08d517fbda27d50c68c602052604060002090565b3360005260205260ff6040600020541615610e40565b34610649576000366003190112610649576020600054604051908152f35b34610649576020366003190112610649576004356000527fb31c2c74f86ca3ce94d901f5f5bbe66f7161eec2f7b5aa0b75a86371436424eb6020526020604060002054604051908152f35b346106495760203660031901126106495760405160a081019080821067ffffffffffffffff83111761093c57610af491604052607481527f68747470733a2f2f763263347837706a6c697a3678366563687432733577617360208201527f7864796b77757a656871796b6d7679686667716d72666b6d796b66612e61727760408201527f656176652e6e65742f726f584c5f656c614d2d7634676a7a314c74675375504360608201527f72557951384d4b5a5842796d67794a564d776f6f00000000000000000000000060808201526040519182916020835260208301906114f3565b34610649576020366003190112610649576004356001600160e01b03198116809103610649576000527ffc606c433378e3a7e0a6a531deac289b66caa1b4aa8554fd4ab2c6f1570f92d8602052602060ff604060002054166040519015158152f35b346106495760403660031901126106495760206114bf6114b66114c7565b602435906116db565b604051908152f35b600435906001600160a01b038216820361064957565b602435906001600160a01b038216820361064957565b919082519283825260005b84811061151f575050826000602080949584010152601f8019910116010190565b6020818301810151848301820152016114fe565b6040810190811067ffffffffffffffff82111761093c57604052565b90601f8019910116810190811067ffffffffffffffff82111761093c57604052565b67ffffffffffffffff811161093c5760051b60200190565b81601f82011215610649578035916115a083611571565b926115ae604051948561154f565b808452602092838086019260051b820101928311610649578301905b8282106115d8575050505090565b813581529083019083016115ca565b81601f820112156106495780359067ffffffffffffffff821161093c576040519261161c601f8401601f19166020018561154f565b8284526020838301011161064957816000926020809301838601378301015290565b90815180825260208080930193019160005b82811061165e575050505090565b835185529381019392810192600101611650565b9061167c82611571565b611689604051918261154f565b828152809261169a601f1991611571565b0190602036910137565b8051156116b15760200190565b634e487b7160e01b600052603260045260246000fd5b80518210156116b15760209160051b010190565b6001600160a01b0316908115610d30576000527f1799cf914cb0cb442ca7c7ac709ee40d0cb89e87351dc08d517fbda27d50c68b60205260406000209060005260205260406000205490565b919082018092116104bf57565b6040519061174182611533565b6001825260203681840137611755826116a4565b5290565b9081602091031261064957516001600160e01b0319811681036106495790565b60009060033d1161178657565b905060046000803e60005160e01c90565b600060443d106117f557604051600319913d83016004833e815167ffffffffffffffff918282113d6024840111176117f857818401948551938411611800573d850101602084870101116117f857506117f59291016020019061154f565b90565b949350505050565b50949350505050565b80548210156116b15760005260206000200190600090565b90815481101561183e5761183491611809565b90549060031b1c90565b60046040517fe637bf3b000000000000000000000000000000000000000000000000000000008152fd5b9190916000926000600183018282528060205260408220541561188c575b50505050565b9091928095505494680100000000000000008610156118eb57836118d46118bd886001604098999a01855584611809565b819391549060031b91821b91600019901b19161790565b905554938252602052205560019038808080611886565b602483634e487b7160e01b81526041600452fd5b919060009260009160018201918184528260205260408420549081611926575b5050505050565b909192939495506000199161193e8383540183611809565b90549060031b1c806119556118bd86850186611809565b905586528460205260408620558054801561199c578201916119778383611809565b909182549160031b1b191690555582526020526040812055600190388080808061191f565b602486634e487b7160e01b81526031600452fdfea26469706673582212209c871ceb92aca49e4546eac74c426a936c2f9433f0fa6effb4ac428f8f37ed2064736f6c63430008140033";

type E1155ConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: E1155ConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class E1155__factory extends ContractFactory {
  constructor(...args: E1155ConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<E1155> {
    return super.deploy(overrides || {}) as Promise<E1155>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): E1155 {
    return super.attach(address) as E1155;
  }
  override connect(signer: Signer): E1155__factory {
    return super.connect(signer) as E1155__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): E1155Interface {
    return new utils.Interface(_abi) as E1155Interface;
  }
  static connect(address: string, signerOrProvider: Signer | Provider): E1155 {
    return new Contract(address, _abi, signerOrProvider) as E1155;
  }
}
