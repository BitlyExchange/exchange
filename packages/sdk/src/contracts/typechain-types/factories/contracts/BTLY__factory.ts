/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Signer,
  utils,
  Contract,
  ContractFactory,
  BigNumberish,
  Overrides,
} from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../common";
import type { BTLY, BTLYInterface } from "../../contracts/BTLY";

const _abi = [
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_initSupply",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_maxSupply",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_rewardsPerSec",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_compoundFreq",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "Approval",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "Transfer",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
    ],
    name: "allowance",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "approve",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "balanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "claimRewards",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "compoundFreq",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_user",
        type: "address",
      },
    ],
    name: "compoundRewardsTimer",
    outputs: [
      {
        internalType: "uint256",
        name: "_timer",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "decimals",
    outputs: [
      {
        internalType: "uint8",
        name: "",
        type: "uint8",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "subtractedValue",
        type: "uint256",
      },
    ],
    name: "decreaseAllowance",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_amount",
        type: "uint256",
      },
    ],
    name: "deposit",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_user",
        type: "address",
      },
    ],
    name: "getDepositInfo",
    outputs: [
      {
        internalType: "uint256",
        name: "_stake",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_rewards",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "salt",
        type: "uint256",
      },
    ],
    name: "getWalletByShare",
    outputs: [
      {
        internalType: "address",
        name: "wallet",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "addedValue",
        type: "uint256",
      },
    ],
    name: "increaseAllowance",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "maxSupply",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "name",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "rewardsPerSec",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "stakeRewards",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "symbol",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "totalShares",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "totalSupply",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "transfer",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "transferFrom",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_amount",
        type: "uint256",
      },
    ],
    name: "withdraw",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "withdrawAll",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x608034620005d657601f1990601f62001db738819003828101851684019392916001600160401b03919082861185871017620005db578160809286926040988952833981010312620005d657825192602091828201516060878401519301519062000069620005f1565b93601a85527f4269746c792050726f6669742053686172696e6720546f6b656e000000000000868601526200009d620005f1565b9360049a8b86526342544c5960e01b88870152865195828711620004d6576003968754986001998a81811c91168015620005cb575b8c821014620005b557908b828e8594116200055c575b50508b908d8311600114620004f757600092620004eb575b5050600019828a1b1c191690891b1787555b8051928311620004d6578c548881811c91168015620004cb575b8a821014620004b65790818b859493116200045e575b5089918b8411600114620003fa5750600092620003ee575b505060001982871b1c191690861b178a555b846005556000600a556103e861ffff19600e541617600e55600755600655600855600c549368010000000000000000948581101562000398578084620001b69201600c5562000611565b81546001600160a01b0391851b82901b19169091556000808052600d865288812055903315620003ad5750620001ef8660025462000643565b600255336000526000845286600020868154019055865186815260007fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef863393a333600052600d845286600020541562000330575b505084600020549061ffff600e541680156200031b57820493600b5480931015620002c6575b505050600b54821015620002b157620002a0939450600b600052600020016200029582825462000643565b9055600a5462000643565b600a555161174f9081620006688239f35b603285634e487b7160e01b6000525260246000fd5b8210156200030657810180600b55811015620002f157600090600b825282822001553880806200026a565b603286634e487b7160e01b6000525260246000fd5b604187634e487b7160e01b6000525260246000fd5b601288634e487b7160e01b6000525260246000fd5b600c5485811015620003985780846200034d9201600c5562000611565b81939154911b9133831b921b1916179055600c546000198101908111620003835733600052600d83528560002055388062000244565b601187634e487b7160e01b6000525260246000fd5b604189634e487b7160e01b6000525260246000fd5b88606491868a519262461bcd60e51b845283015260248201527f45524332303a206d696e7420746f20746865207a65726f2061646472657373006044820152fd5b0151905038806200015a565b908e92918a9516926000528a6000209260005b8c8282106200044757505084116200042e575b505050811b018a556200016c565b015160001983891b60f8161c1916905538808062000420565b8385015186558c979095019493840193016200040d565b909192508d600052896000208b80860160051c8201928c8710620004ac575b918b9187969594930160051c01915b8281106200049c57505062000142565b600081558695508b91016200048c565b925081926200047d565b60228e634e487b7160e01b6000525260246000fd5b90607f16906200012c565b60418d634e487b7160e01b6000525260246000fd5b01519050388062000100565b908c91868d95168c60005283600020936000905b8282106200054457505084116200052b575b505050811b01875562000112565b0151600019838c1b60f8161c191690553880806200051d565b8385015186558f979095019493840193018f6200050b565b909192508a6000528d826000209181860160051c8301938610620005ab575b918d91869594930160051c01915b8281106200059b57508d9150620000e8565b600081558594508d910162000589565b925081926200057b565b5060228f634e487b7160e01b6000525260246000fd5b90607f1690620000d2565b600080fd5b634e487b7160e01b600052604160045260246000fd5b60408051919082016001600160401b03811183821017620005db57604052565b600c548110156200062d57600c60005260206000200190600090565b634e487b7160e01b600052603260045260246000fd5b919082018092116200065157565b634e487b7160e01b600052601160045260246000fdfe608060408181526004918236101561001657600080fd5b600092833560e01c91826289345214610e535750816306fdde0314610d5e578163095ea7b314610d3457816312e0a05314610d0757816318160ddd14610ce85781631a121d5414610cc957816323b872dd14610bfe5781632e1a7d4d14610b1a578163313ce56714610afe578163372500ab14610a525781633950935114610a035781633a98ef39146109e45781635287ce121461098557816370a082311461094f578163853828b6146108c857816395d89b41146107c5578163a457c2d714610707578163a9059cbb146106d6578163b1a91613146104c2578163b6b55f25146102a5578163cf9d0b5f1461018a57508063d5abeb011461016c5763dd62ed3e1461012157600080fd5b346101685780600319360112610168578060209261013d610eb8565b610145610ed3565b6001600160a01b0391821683526001865283832091168252845220549051908152f35b5080fd5b50346101685781600319360112610168576020906006549051908152f35b9050346102a157826003193601126102a1576101a461138a565b33835260096020526101ba8284205415156113df565b6101c3336114cc565b610239575061022e906101ed6101d833611532565b33855260096020526002838620015490610f21565b90338452600960205280842084600282015561020a838254610f21565b905533845260096020526001429185200155610226813361166f565b600a54610f21565b600a55600160055580f35b6020608492519162461bcd60e51b8352820152602160248201527f547269656420746f20636f6d706f756e642072657761727320746f6f20736f6f60448201527f6e000000000000000000000000000000000000000000000000000000000000006064820152fd5b8280fd5b919050346102a157602090816003193601126104be578235926102c661138a565b33855284835283828620541061047d57338552600983528185205461042f573385526009835284600283822086815542600182015501555b33156103c85733855284835281852054908482106103605750917fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef918486959433875286845203818620558360025403600255519283523392a3600160055580f35b6084908484519162461bcd60e51b8352820152602260248201527f45524332303a206275726e20616d6f756e7420657863656564732062616c616e60448201527f63650000000000000000000000000000000000000000000000000000000000006064820152fd5b82608492519162461bcd60e51b8352820152602160248201527f45524332303a206275726e2066726f6d20746865207a65726f2061646472657360448201527f73000000000000000000000000000000000000000000000000000000000000006064820152fd5b61043833611532565b33865260098452610450600284882001918254610f21565b905533855260098352818520610467858254610f21565b90553385526009835242600183872001556102fe565b82606492519162461bcd60e51b8352820152601d60248201527f43616e2774207374616b65206d6f7265207468616e20796f75206f776e0000006044820152fd5b8380fd5b905082346106d3576020928360031936011261016857816000194301934385116106c057825194868601904282523360601b91828689015281605489015260548852608088019767ffffffffffffffff988181108a8211176106ad578752519020600a5461052f916112fb565b9684978590600b54915b828b10610670575b50505085519189830193428552878401526054830152833560748301526074825260a08201908282109082111761065d578552519020610591906105848761132a565b90549060031b1c906112fb565b906105a4839661ffff600e541690611377565b906001820180921161064a5750949190600c54955b8681106105d3575b87866001600160a01b03875191168152f35b909192945061062a6001600160a01b03827fdf6966c971051c3d54ec59162606531493a51404a002842f56009d7e5cf4a8c7015416958685528489526106248686205460098b528787205490610f21565b90610f21565b90828210156106455761063c9061131b565b929190926105b9565b6105c1565b836011602492634e487b7160e01b835252fd5b602485604186634e487b7160e01b835252fd5b61068d906106808c93949c61132a565b90549060031b1c90610f21565b90828210156106a75761069f9061131b565b999190610539565b99610541565b602487604188634e487b7160e01b835252fd5b906011602492634e487b7160e01b835252fd5b80fd5b5050346101685780600319360112610168576020906107006106f6610eb8565b6024359033610f44565b5160018152f35b905082346106d357826003193601126106d357610722610eb8565b91836024359233815260016020528181206001600160a01b038616825260205220549082821061075c5760208561070085850387336111ba565b608490602086519162461bcd60e51b8352820152602560248201527f45524332303a2064656372656173656420616c6c6f77616e63652062656c6f7760448201527f207a65726f0000000000000000000000000000000000000000000000000000006064820152fd5b838334610168578160031936011261016857805191809380549160019083821c928285169485156108be575b60209586861081146108ab57858952908115610887575060011461082f575b61082b8787610821828c0383610ee9565b5191829182610e6f565b0390f35b81529295507f8a35acfbc15ff81a39ae7d344fd709f28e8600b4aa8c65c6b64bfe7fe36bd19b5b828410610874575050508261082b9461082192820101948680610810565b8054868501880152928601928101610856565b60ff19168887015250505050151560051b83010192506108218261082b8680610810565b602484602285634e487b7160e01b835252fd5b93607f16936107f1565b50503461016857816003193601126101685761022e906108e661138a565b33835260096020526108fc8184205415156113df565b61094561093f61092361090e33611532565b33875260096020526002858820015490610f21565b9233865260096020528520856001825492828155015583610f21565b3361142a565b610226813361166f565b50503461016857602036600319011261016857806020926001600160a01b03610976610eb8565b16815280845220549051908152f35b8284346106d35760203660031901126106d3576109d86109a3610eb8565b916002846001600160a01b0385169283815260096020526109c78282205496611532565b938152600960205220015490610f21565b82519182526020820152f35b505034610168578160031936011261016857602090600a549051908152f35b505034610168578060031936011261016857610700602092610a4b610a26610eb8565b91338152600186528481206001600160a01b0384168252865284602435912054610f21565b90336111ba565b83915034610168578160031936011261016857610a6d61138a565b610a8e610a7933611532565b33845260096020526002858520015490610f21565b908115610abb575061022e919233845260096020528320836002820155600142910155610945813361142a565b606490602085519162461bcd60e51b8352820152601360248201527f596f752068617665206e6f2072657761726473000000000000000000000000006044820152fd5b5050346101685781600319360112610168576020905160128152f35b8391503461016857602036600319011261016857803590610b3961138a565b3383526009602052818484205410610b955750610b8d91926002610b5c33611532565b913386526009602052808620610b738582546112ee565b90553386526009602052852042600182015501553361142a565b600160055580f35b608490602085519162461bcd60e51b8352820152602160248201527f43616e2774207769746864726177206d6f7265207468616e20796f752068617660448201527f65000000000000000000000000000000000000000000000000000000000000006064820152fd5b8391503461016857606036600319011261016857610c1a610eb8565b610c22610ed3565b9184604435946001600160a01b038416815260016020528181203382526020522054906000198203610c5d575b602086610700878787610f44565b848210610c865750918391610c7b60209695610700950333836111ba565b919394819350610c4f565b606490602087519162461bcd60e51b8352820152601d60248201527f45524332303a20696e73756666696369656e7420616c6c6f77616e63650000006044820152fd5b5050346101685781600319360112610168576020906008549051908152f35b5050346101685781600319360112610168576020906002549051908152f35b50503461016857602036600319011261016857602090610d2d610d28610eb8565b6114cc565b9051908152f35b505034610168578060031936011261016857602090610700610d54610eb8565b60243590336111ba565b919050346102a157826003193601126102a157805191836003549060019082821c928281168015610e49575b6020958686108214610e365750848852908115610e145750600114610dbb575b61082b8686610821828b0383610ee9565b929550600383527fc2575a0e9e593c00f959f8c92f12db2869c3395a3b0502d05e2516446f71f85b5b828410610e01575050508261082b94610821928201019438610daa565b8054868501880152928601928101610de4565b60ff191687860152505050151560051b83010192506108218261082b38610daa565b836022602492634e487b7160e01b835252fd5b93607f1693610d8a565b8490346101685781600319360112610168576020906007548152f35b6020808252825181830181905290939260005b828110610ea457505060409293506000838284010152601f8019910116010190565b818101860151848201604001528501610e82565b600435906001600160a01b0382168203610ece57565b600080fd5b602435906001600160a01b0382168203610ece57565b90601f8019910116810190811067ffffffffffffffff821117610f0b57604052565b634e487b7160e01b600052604160045260246000fd5b91908201809211610f2e57565b634e487b7160e01b600052601160045260246000fd5b9291906001600160a01b038085169081156111505782169081156110e6576000958187526020908782526040938489205487811061107d578790858b528a855203858a2055808952848920878154019055837fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef8487518a8152a3828852600d8252838820541561103a575b505050610fff6110269161102b95962054610ff061ffff600e541682611528565b90600b54111561102d5761132a565b61100f8583548360031b1c6112ee565b825460001960039390931b92831b1916911b179055565b61166f565b565b61103561163a565b61132a565b611043906115bc565b600c54600019810192908311611069578752600d905281862055610fff8161102b610fcf565b602488634e487b7160e01b81526011600452fd5b60848487519062461bcd60e51b82526004820152602660248201527f45524332303a207472616e7366657220616d6f756e742065786365656473206260448201527f616c616e636500000000000000000000000000000000000000000000000000006064820152fd5b608460405162461bcd60e51b815260206004820152602360248201527f45524332303a207472616e7366657220746f20746865207a65726f206164647260448201527f65737300000000000000000000000000000000000000000000000000000000006064820152fd5b608460405162461bcd60e51b815260206004820152602560248201527f45524332303a207472616e736665722066726f6d20746865207a65726f20616460448201527f64726573730000000000000000000000000000000000000000000000000000006064820152fd5b6001600160a01b03809116918215611285571691821561121b5760207f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925918360005260018252604060002085600052825280604060002055604051908152a3565b608460405162461bcd60e51b815260206004820152602260248201527f45524332303a20617070726f766520746f20746865207a65726f20616464726560448201527f73730000000000000000000000000000000000000000000000000000000000006064820152fd5b608460405162461bcd60e51b8152602060048201526024808201527f45524332303a20617070726f76652066726f6d20746865207a65726f2061646460448201527f72657373000000000000000000000000000000000000000000000000000000006064820152fd5b91908203918211610f2e57565b8115611305570690565b634e487b7160e01b600052601260045260246000fd5b6000198114610f2e5760010190565b600b5481101561136157600b6000527f0175b7a638427703f0dbe7bb9bbf987a2551717b34e79f33b5b1008d1fa01db90190600090565b634e487b7160e01b600052603260045260246000fd5b81810292918115918404141715610f2e57565b60026005541461139b576002600555565b606460405162461bcd60e51b815260206004820152601f60248201527f5265656e7472616e637947756172643a207265656e7472616e742063616c6c006044820152fd5b156113e657565b606460405162461bcd60e51b815260206004820152601360248201527f596f752068617665206e6f206465706f736974000000000000000000000000006044820152fd5b6001600160a01b0316908115611488577fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef60208261146c600094600254610f21565b60025584845283825260408420818154019055604051908152a3565b606460405162461bcd60e51b815260206004820152601f60248201527f45524332303a206d696e7420746f20746865207a65726f2061646472657373006044820152fd5b6001600160a01b03168060005260096020526001604060002001546114f46008548092610f21565b4210611501575050600090565b6115259160005260096020526115204291600160406000200154610f21565b6112ee565b90565b8115611305570490565b90600a5460065492838210156115b4578161158f6001600160a01b03611594931680600052600960205261157a611571600160406000200154426112ee565b60075490611377565b90600052600960205260406000205490611377565b611528565b92806115a08584610f21565b116115a9575050565b6115259293506112ee565b506000925050565b600c5468010000000000000000811015610f0b576001810180600c55811015611361576001600160a01b0390600c6000527fdf6966c971051c3d54ec59162606531493a51404a002842f56009d7e5cf4a8c70191167fffffffffffffffffffffffff0000000000000000000000000000000000000000825416179055565b600b5468010000000000000000811015610f0b5780600161165e9201600b5561132a565b8154906000199060031b1b19169055565b91906001600160a01b03831680611687575b50509050565b600093818552600d6020526040852054156116d5575b505061100f6116be60406116cd94952054610ff061ffff600e541682611528565b91909283548360031b1c610f21565b803880611681565b6116de906115bc565b600c54600019810191908211611705578452600d602052604084205561100f6116be61169d565b602485634e487b7160e01b81526011600452fdfea2646970667358221220eacba2fe306d5129f17e0db9227f086e9c37bc0c59b2d0cdf00deeb0e595de7a64736f6c63430008140033";

type BTLYConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: BTLYConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class BTLY__factory extends ContractFactory {
  constructor(...args: BTLYConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    _initSupply: PromiseOrValue<BigNumberish>,
    _maxSupply: PromiseOrValue<BigNumberish>,
    _rewardsPerSec: PromiseOrValue<BigNumberish>,
    _compoundFreq: PromiseOrValue<BigNumberish>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<BTLY> {
    return super.deploy(
      _initSupply,
      _maxSupply,
      _rewardsPerSec,
      _compoundFreq,
      overrides || {}
    ) as Promise<BTLY>;
  }
  override getDeployTransaction(
    _initSupply: PromiseOrValue<BigNumberish>,
    _maxSupply: PromiseOrValue<BigNumberish>,
    _rewardsPerSec: PromiseOrValue<BigNumberish>,
    _compoundFreq: PromiseOrValue<BigNumberish>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(
      _initSupply,
      _maxSupply,
      _rewardsPerSec,
      _compoundFreq,
      overrides || {}
    );
  }
  override attach(address: string): BTLY {
    return super.attach(address) as BTLY;
  }
  override connect(signer: Signer): BTLY__factory {
    return super.connect(signer) as BTLY__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): BTLYInterface {
    return new utils.Interface(_abi) as BTLYInterface;
  }
  static connect(address: string, signerOrProvider: Signer | Provider): BTLY {
    return new Contract(address, _abi, signerOrProvider) as BTLY;
  }
}
