/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../../common";
import type {
  TokenExchange,
  TokenExchangeInterface,
} from "../../../contracts/TokenExchange.sol/TokenExchange";

const _abi = [
  {
    inputs: [],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "user",
        type: "address",
      },
    ],
    name: "CacheCleared",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "targetToken",
        type: "address",
      },
      {
        indexed: false,
        internalType: "int24",
        name: "point",
        type: "int24",
      },
      {
        indexed: false,
        internalType: "uint128",
        name: "earning",
        type: "uint128",
      },
      {
        indexed: true,
        internalType: "address",
        name: "wallet",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "timestamp",
        type: "uint256",
      },
    ],
    name: "EarningClaimed",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint8",
        name: "version",
        type: "uint8",
      },
    ],
    name: "Initialized",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "originToken",
        type: "address",
      },
      {
        indexed: true,
        internalType: "int24",
        name: "point",
        type: "int24",
      },
      {
        indexed: false,
        internalType: "uint128",
        name: "refund",
        type: "uint128",
      },
      {
        indexed: true,
        internalType: "address",
        name: "wallet",
        type: "address",
      },
    ],
    name: "LimitOrderCanceled",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "token",
        type: "address",
      },
      {
        indexed: true,
        internalType: "int24",
        name: "point",
        type: "int24",
      },
      {
        indexed: false,
        internalType: "uint128",
        name: "amount",
        type: "uint128",
      },
      {
        indexed: false,
        internalType: "uint128",
        name: "earning",
        type: "uint128",
      },
      {
        indexed: true,
        internalType: "address",
        name: "wallet",
        type: "address",
      },
    ],
    name: "LimitOrderPlaced",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "originToken",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint128",
        name: "amount",
        type: "uint128",
      },
      {
        indexed: false,
        internalType: "uint128",
        name: "earning",
        type: "uint128",
      },
    ],
    name: "MarketOrderCompleted",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "originToken",
        type: "address",
      },
      {
        indexed: false,
        internalType: "int24",
        name: "point",
        type: "int24",
      },
      {
        indexed: false,
        internalType: "uint128",
        name: "amount",
        type: "uint128",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "timestamp",
        type: "uint256",
      },
    ],
    name: "Swapped",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "originToken",
        type: "address",
      },
      {
        internalType: "int24",
        name: "point",
        type: "int24",
      },
    ],
    name: "_claimEarningInternal",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "blockDeployed",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "cancelAllLimitOrders",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "originToken",
        type: "address",
      },
      {
        internalType: "int24",
        name: "point",
        type: "int24",
      },
    ],
    name: "cancelLimitOrder",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "claimAllEarnings",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "originToken",
        type: "address",
      },
      {
        internalType: "int24",
        name: "point",
        type: "int24",
      },
    ],
    name: "claimEarning",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "user",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "endIndex",
        type: "uint256",
      },
    ],
    name: "clearZeroLimOrders",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "curPoint",
    outputs: [
      {
        internalType: "int24",
        name: "",
        type: "int24",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "bank",
        type: "address",
      },
      {
        internalType: "address",
        name: "tX",
        type: "address",
      },
      {
        internalType: "address",
        name: "tY",
        type: "address",
      },
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        internalType: "uint128",
        name: "tinyAmountThresh",
        type: "uint128",
      },
      {
        internalType: "int24",
        name: "margin",
        type: "int24",
      },
    ],
    name: "initialize",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "originToken",
        type: "address",
      },
      {
        internalType: "int24",
        name: "point",
        type: "int24",
      },
      {
        internalType: "uint128",
        name: "amount",
        type: "uint128",
      },
    ],
    name: "limitOrder",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "user",
        type: "address",
      },
    ],
    name: "limitOrders",
    outputs: [
      {
        components: [
          {
            internalType: "address",
            name: "originToken",
            type: "address",
          },
          {
            internalType: "address",
            name: "targetToken",
            type: "address",
          },
          {
            internalType: "int24",
            name: "point",
            type: "int24",
          },
        ],
        internalType: "struct TokenExchange.LimitOrderView[]",
        name: "orders",
        type: "tuple[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "originToken",
        type: "address",
      },
      {
        internalType: "uint128",
        name: "amount",
        type: "uint128",
      },
      {
        internalType: "int24",
        name: "startPoint",
        type: "int24",
      },
      {
        internalType: "uint16",
        name: "slipLimit",
        type: "uint16",
      },
      {
        internalType: "address[]",
        name: "feeTaker",
        type: "address[]",
      },
    ],
    name: "marketOrder",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "pairInfo",
    outputs: [
      {
        internalType: "address",
        name: "tokenX",
        type: "address",
      },
      {
        internalType: "address",
        name: "tokenY",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "pointMargin",
    outputs: [
      {
        internalType: "int24",
        name: "",
        type: "int24",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "int24",
        name: "",
        type: "int24",
      },
    ],
    name: "pointOrder",
    outputs: [
      {
        components: [
          {
            internalType: "uint128",
            name: "selling",
            type: "uint128",
          },
          {
            internalType: "uint128",
            name: "unlegacyEarn",
            type: "uint128",
          },
          {
            internalType: "uint128",
            name: "legacyEarn",
            type: "uint128",
          },
          {
            internalType: "uint256",
            name: "accLegacyEarn",
            type: "uint256",
          },
        ],
        internalType: "struct TokenExchange.Order",
        name: "X",
        type: "tuple",
      },
      {
        components: [
          {
            internalType: "uint128",
            name: "selling",
            type: "uint128",
          },
          {
            internalType: "uint128",
            name: "unlegacyEarn",
            type: "uint128",
          },
          {
            internalType: "uint128",
            name: "legacyEarn",
            type: "uint128",
          },
          {
            internalType: "uint256",
            name: "accLegacyEarn",
            type: "uint256",
          },
        ],
        internalType: "struct TokenExchange.Order",
        name: "Y",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "targetToken",
        type: "address",
      },
      {
        internalType: "int24",
        name: "point",
        type: "int24",
      },
      {
        internalType: "address",
        name: "wallet",
        type: "address",
      },
    ],
    name: "queryEarning",
    outputs: [
      {
        internalType: "uint128",
        name: "sold",
        type: "uint128",
      },
      {
        internalType: "uint128",
        name: "earned",
        type: "uint128",
      },
      {
        internalType: "uint128",
        name: "selling",
        type: "uint128",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "startOff",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "totalVolume",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x60808060405234620000c6576000549060ff8260081c1662000074575060ff8082160362000038575b60405161341f9081620000cc8239f35b60ff90811916176000557f7f26b83ff96e1f2b6a682f133852f6798a09c465da95921460cefb3847402498602060405160ff8152a13862000028565b62461bcd60e51b815260206004820152602760248201527f496e697469616c697a61626c653a20636f6e747261637420697320696e697469604482015266616c697a696e6760c81b6064820152608490fd5b600080fdfe604060a0815260048036101561001457600080fd5b600090813560e01c90816312c7048714610ebd5781631b04562614610e8b57816323f936d914610a3a57816335ae394214610a1b5781635f81a57c146109fc578163633e13eb146109d95781636b048c3a146108f8578163715018a61461089c5781638612ccf81461077c5781638da5cb5b14610754578163a482e49b1461053b578163a9cd94691461043f578163af8eb38214610385578163be2f798e14610363578163cf85e95e1461033c578163e5f292d114610317578163e9aa0eea146102ed578163f11f5a02146102bf578163f2fde38b1461021157508063fc2a5b1d146101e15763fde895981461010957600080fd5b346101de57806003193601126101de573381526020609d815282822080549061013182610fb9565b9261013e86519485610f97565b82845280840191855280852085925b84841061019a57878787815b8151811015610196578061018c6101736101919385611ab2565b51866001600160a01b0382511691015160020b9061174f565b611aa3565b610159565b8280f35b600190838951916101aa83610f7b565b6001600160a01b0392838654168152848601549384168382015260029360a01c840b8c82015281520192019301929061014d565b80fd5b50346101de57806003193601126101de57506001600160a01b038060985416906099541682519182526020820152f35b839150346102bb5760203660031901126102bb5761022d610f15565b9161023661101f565b6001600160a01b03831615610252578361024f84611077565b80f35b906020608492519162461bcd60e51b8352820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201527f64647265737300000000000000000000000000000000000000000000000000006064820152fd5b8280fd5b8284346102e9573660031901126101de5761024f6102db610f15565b6102e3610f41565b906122e1565b5080fd5b8284346102e9573660031901126101de5761024f610309610f15565b610311610f41565b9061174f565b8284346102e9573660031901126101de5761024f610333610f15565b60243590611ac6565b8284346102e957816003193601126102e95760209060ff609a5460181c1690519015158152f35b8284346102e957816003193601126102e957602090609a5460020b9051908152f35b839150346102bb5760203660031901126102bb5735918260020b80930361043a578181610100946104389352609c60205220916104046103d060036103c986610fd1565b9501610fd1565b91518094606080916001600160801b0380825116855280602083015116602086015260408201511660408501520151910152565b80516001600160801b0390811660808501526020820151811660a085015260408201511660c08401526060015160e0830152565bf35b600080fd5b8284346102e9576020806003193601126102bb576001600160a01b039283610465610f15565b168152609d82528281209182549061047c82610fb9565b9161048986519384610f97565b8083528183018095855282852085915b8383106104f7575050505084519481860192828752518093528086019493905b8382106104c65786860387f35b84518051891687528084015189168785015281015160020b86820152606090950194938201936001909101906104b9565b600190858a98969798519161050b83610f7b565b8c855416835283850154928d84168382015260029360a01c840b8d82015281520192019201919095949395610499565b8284346102e95760c03660031901126102e957610556610f15565b92602435936001600160a01b0380861680960361043a57610575610f2b565b9060643592818416840361043a57608435916001600160801b03831680930361043a5760a435938460020b850361043a5788549960ff8b60081c161597888099610747575b8015610730575b156106c757508798999a61067898600160ff198316178d556106b6575b5061060e60ff8c5460081c166105f3816110bf565b6105fc816110bf565b60018055610609816110bf565b6110bf565b61061733611077565b43609755826001600160a01b031994168460a054161760a055836098541617609855169060995416176099556001600160801b031960a154161760a155609a549060201b66ffffff00000000169066ffffff00000000191617609a55611077565b610680575080f35b60207f7f26b83ff96e1f2b6a682f133852f6798a09c465da95921460cefb38474024989161ff001984541684555160018152a180f35b61ffff1916610101178b558b6105de565b60849060208b519162461bcd60e51b8352820152602e60248201527f496e697469616c697a61626c653a20636f6e747261637420697320616c72656160448201527f647920696e697469616c697a65640000000000000000000000000000000000006064820152fd5b50303b1580156105c15750600160ff8d16146105c1565b50600160ff8d16106105ba565b8284346102e957816003193601126102e9576020906001600160a01b03606554169051908152f35b5050346101de57806003193601126101de57338152602091609d83528082209283546107a781610fb9565b946107b484519687610f97565b818652845281842084908387015b8383106108585750505050825b845181101561084357806107e66108259287611ab2565b516001600160a01b03808583015116868301916001600160801b0361081384516002943391860b90611d69565b5090501661082a575b50505050611aa3565b6107cf565b61083a9351169151900b906122e1565b3880808061081c565b5090609d61024f923385525282205433611ac6565b6001908587519161086883610f7b565b6001600160a01b0392838654168152848601549384168382015260029360a01c840b8a8201528152019201920191906107c2565b82346101de57806003193601126101de576108b561101f565b60006001600160a01b036065546001600160a01b03198116606555167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e08280a380f35b8284346102e95760a03660031901126102e957610913610f15565b6024356001600160801b038116810361043a57604435908160020b820361043a576064359261ffff841684036109d5576084359667ffffffffffffffff88116109d157366023890112156109d1578701359661097a61097189610fb9565b96519687610f97565b87865260209760248988019160051b830101913683116109cd57602401905b8282106109ae5750505061024f9596506111d6565b81356001600160a01b038116810361043a578152908901908901610999565b8880fd5b8680fd5b8580fd5b8284346102e957816003193601126102e957609a549051602091821c60020b8152f35b8284346102e957816003193601126102e957602090609b549051908152f35b8284346102e957816003193601126102e9576020906097549051908152f35b839150346102bb5760603660031901126102bb57610a56610f15565b91610a5f610f41565b90604435926001600160801b0380851693848603610e8757610a809061225d565b95609a5460ff8160181c16600014610e2357506099546001600160a01b03828116911603610dd057609a5460020b8760020b13610d8d575b6001600160a01b0390888260a05416803b156102e9578651631ac6758960e11b81526001600160a01b0384168782019081523360208201523060408201526001600160801b038b166060820152909291839182908490829060800103925af18015610d8357610d70575b508515610d2d5760995482821696899695949392918316888103610d2757508260985416935b610b528589612b5a565b610b6788610b618c8287612497565b9461255d565b610b7e85610b75818b612755565b5091819b61291f565b9783610d1b575b505050610bdc575b505090516001600160801b03948516815293909116602084015250339260020b917f1b36ba4c0e68abe4a9493a6b705902c56f00e745caa4de70f11bc854e5da93bc9080604081015b0390a480f35b338952602091609d8352848a20918551610bf581610f7b565b8881528185820193168352868101918b60020b9485845280549068010000000000000000821015610d085790610c3091600182018155611130565b929092610cf65790600181610c82969594935116926001600160a01b0319938482541617815501935116908354161782555160020b62ffffff60a01b1982549160a01b62ffffff60a01b169116179055565b338952609d825283892054600019810193908411610ce35750338952609e8252838920600091825282528381208682529091528290205581610bd67f1b36ba4c0e68abe4a9493a6b705902c56f00e745caa4de70f11bc854e5da93bc610b8d565b896011602492634e487b7160e01b835252fd5b60248e808a634e487b7160e01b825252fd5b60248f60418b634e487b7160e01b835252fd5b161090508a8080610b85565b93610b48565b606484602087519162461bcd60e51b8352820152600c60248201527f57524f4e475f414d4f554e5400000000000000000000000000000000000000006044820152fd5b610d7c90999199610f51565b9789610b22565b86513d8c823e3d90fd5b606483602086519162461bcd60e51b8352820152600c60248201527f47545f4355525f505249434500000000000000000000000000000000000000006044820152fd5b609a5460020b8760020b1215610ab857606483602086519162461bcd60e51b8352820152600c60248201527f4c545f4355525f505249434500000000000000000000000000000000000000006044820152fd5b63010000009062ffffff89169063ffffffff19161717609a557fd4f5e27df9cb5ac16696d501c6a53baa5aa6bea8ace7a2794aed05cff36b4413608085516001600160a01b03841681528960020b60208201528a87820152426060820152a1610ab8565b8780fd5b8284346102e957806003193601126102e95761024f90610eac6102db610f15565b338352609d60205282205433611ac6565b8284346102e95760603660031901126102e957606090610ef4610ede610f15565b610ee6610f41565b610eee610f2b565b91611d69565b83929351936001600160801b03928380921686521660208501521690820152f35b600435906001600160a01b038216820361043a57565b604435906001600160a01b038216820361043a57565b602435908160020b820361043a57565b67ffffffffffffffff8111610f6557604052565b634e487b7160e01b600052604160045260246000fd5b6060810190811067ffffffffffffffff821117610f6557604052565b90601f8019910116810190811067ffffffffffffffff821117610f6557604052565b67ffffffffffffffff8111610f655760051b60200190565b906040516080810181811067ffffffffffffffff821117610f655760405260606002829480546001600160801b0390818116865260801c602086015260018201541660408501520154910152565b6001600160a01b0360655416330361103357565b606460405162461bcd60e51b815260206004820152602060248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e65726044820152fd5b606554906001600160a01b0380911691826001600160a01b0319821617606555167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0600080a3565b156110c657565b608460405162461bcd60e51b815260206004820152602b60248201527f496e697469616c697a61626c653a20636f6e7472616374206973206e6f74206960448201527f6e697469616c697a696e670000000000000000000000000000000000000000006064820152fd5b805482101561114c5760005260206000209060011b0190600090565b634e487b7160e01b600052603260045260246000fd5b600291820b910b0390627fffff198212627fffff83131761117f57565b634e487b7160e01b600052601160045260246000fd5b9190916001600160801b038080941691160191821161117f57565b9190820180921161117f57565b6001600160801b03918216908216039190821161117f57565b93949091929460006080526000926001600160a01b0360a0541691823b1561043a57604051631ac6758960e11b8152608080516001600160a01b038a1660048401523360248401523060448401526001600160801b0385166064840152905191949091859160849183915af19182156114ba5761126a9361125d936116a1575b5087611f32565b93609a5460020b90611162565b608051600282900b90811261168b5750945b608051935b62ffffff871661ffff83160362ffffff81116115695762ffffff166001600160801b0386161015611647576001600160801b038116156115ef57609a5490600282900b90816112cf81612c81565b906001600160a01b0360995416806001600160a01b038c16146000146115815750508260805152602090609c82526080519761133e8460408b20936003850194809c89600052339052609f87526040608051208960005287526001600160801b038060a15416915416906131e9565b6098546001600160a01b031697909691949190627fffff81841c60020b8301908113627fffff19909112176115695788921c60020b8101945b8b546001600160801b0316906001600160801b031610159761139891612b5a565b8b86609a5460020b6113a992612497565b50609a5460020b6113ba908d61255d565b609a5460020b906113cb8183612755565b50916113d69361291f565b6113df91611195565b976113f1956114cd575b5050506111bd565b936001600160801b0360a154166001600160801b0386161115611431575b62ffffff61142861ffff9282609a5460201c1690611195565b95915050611281565b936001600160a01b0360a0541690813b156114c757604051631ac6758960e11b8152608080516001600160a01b038a1660048401523060248401523360448401526001600160801b0393909316606483015251909283916084918391905af180156114ba576114a5575b506080519361140f565b6114ae90610f51565b608051801561149b5780fd5b6040513d608051823e3d90fd5b60805180fd5b806001600160801b0391548060801c918360019283830194855495836114f583828a16611195565b166001600160801b0319809816179055611514600285019182546111b0565b90551690558354918260801c918501908154908561153485828516611195565b169116179055611549600285019182546111b0565b905516905562ffffff19609a54169062ffffff1617609a553880806113e9565b634e487b7160e01b6080515260116004526024608051fd5b939094976115e992988660805152609c602052608051926115d76040852094600386019c8d918b600052339052609f6020526040608051208b600052602052886001600160801b038060a15416935416926131e9565b95909798899360201c60020b90611162565b94611377565b604080516001600160801b039283168152919094166020820152919550506001600160a01b03909316927fc489dd1442ec1b08fb3b4a8339b7f96fd0f85f9b9a42d702819c1c78a3d11fc4925090819081015b0390a2565b606460405162461bcd60e51b815260206004820152601160248201527f4f55545f4f465f534c49505f4c494d49540000000000000000000000000000006044820152fd5b9050627fffff19811461117f576000039461127c565b6116aa90610f51565b38611256565b156116b757565b606460405162461bcd60e51b815260206004820152600f60248201527f4f524445525f4e4f545f455849535400000000000000000000000000000000006044820152fd5b805480156117395760001901906117128282611130565b611723576001816000809355015555565b634e487b7160e01b600052600060045260246000fd5b634e487b7160e01b600052603160045260246000fd5b906117599061225d565b906000338152609e602052604081208360020b8252602052604081206001600160a01b0383168252602052604081205460001991611799838314156116b0565b338152609d60205260408120916117b08184611130565b50916117df6001600160a01b036001850154166117cd818a612b5a565b6117d7818a612755565b50918a61291f565b5080946001600160a01b03609954166001600160a01b03881614600014611a51578760020b8252609c602052604082206003810190338452609f602052604084208a60020b85526020526002604085200190338552609f602052604085208b60020b86526020526001600260408720925b0154910154101561198d575b50508454818101908111611979576001600160a01b0360019387969593604061188984956119349b611130565b5092338152609e6020528181209688850197885460a01c60020b60005260205282600020868654166000526020528260002055338152609e602052208c60020b6000526020526040600020838c1660005260205260406000205561190f845460a01c60020b8688019062ffffff60a01b1982549160a01b62ffffff60a01b169116179055565b5416916001600160a01b031992838654161785555416908284015416179101556116fb565b6001600160801b03604051911681527f807645a5ce4bf61d15b017a8b4178dedd7ff00eb9d90b15bbd5c981252e4fe7560206001600160a01b03339560020b941692a4565b602483634e487b7160e01b81526011600452fd5b9096506001600160801b03819392935416968054906001600160801b036119b68a8285166111bd565b166001600160801b031980931617905581541690556001600160a01b0360a05416803b156102e957604051631ac6758960e11b81526001600160a01b03891660048201523060248201523360448201526001600160801b03881660648201529082908290608490829084905af18015611a4657611a37575b8092919261185c565b611a4090610f51565b38611a2e565b6040513d84823e3d90fd5b8760020b8252609c6020526040822060038101338452609f602052604084208a60020b85526020526040842090338552609f602052604085208b60020b86526020526001600280604088200192611850565b600019811461117f5760010190565b805182101561114c5760209160051b010190565b906001600160a01b0391828116926000928484526020609d8152604090611af282872093845490612c71565b94611afc86610fb9565b95611b0984519788610f97565b808752601f19611b1882610fb9565b0136848901378791885b828110611c9557505050805b611b5e57505050505050807fc18cced4ef47e8fff8412a99bc09b8afb2f057f42c940accd159af4f5452985891a2565b600019818101828111611c8157611b759088611ab2565b51611b808187611130565b50918654818101908111611c6d5791888b611c23888f84968c611ba68f9a859c9b611130565b5095838152609e9384865282822094600191828a019b8c549860a09860029a8a1c8b0b87528152868620908d8d54168752528585205583528d52828220908c019c8d54861c870b8352528d82822090898d541683525220558554901c900b879062ffffff60a01b1982549160a01b62ffffff60a01b169116179055565b5416926001600160a01b03199384825416179055541690825416179055611c49846116fb565b8015611c59576000190180611b2e565b602487634e487b7160e01b81526011600452fd5b60248b634e487b7160e01b81526011600452fd5b602489634e487b7160e01b81526011600452fd5b611cb7826001611ca5848b611130565b5001548a8160a01c60020b9116611d69565b6001600160801b0392831615929183611d13575b5082611d08575b5050611ce7575b611ce290611aa3565b611b22565b92611d008185611cfa611ce2948d611ab2565b52611aa3565b939050611cd9565b161590503880611cd2565b821615925038611ccb565b15611d2557565b606460405162461bcd60e51b815260206004820152600a60248201527f57524f4e475f534f4c44000000000000000000000000000000000000000000006044820152fd5b9291906001600160a01b0390816098541682861690811480918115611f06575b5015611ec257611d9a60009261225d565b918115611e855750600282810b6000818152609c602090815260408083209789168352609f8252808320938352929052209490850193905b6001600160801b0380955416976000808a986001600287015491015410600014611e6c57505092611e4f9592611e108693611e4996611e1e9861284a565b509690969a85881614611d1e565b611e29600093612c81565b9115611e5257611e429360a15416905460801c906131e9565b9092611195565b94611195565b91565b91611e669360a15416925460801c926131e9565b92611195565b95611e4f9794919a9350611e49959250611e2990612c81565b600283810b808352609c60209081526040938490209688166000908152609f82528481209281529190529190912090810194909360030190611dd2565b606460405162461bcd60e51b815260206004820152600d60248201527f494e56414c49445f544f4b454e000000000000000000000000000000000000006044820152fd5b905083609954161438611d89565b9190916001600160801b038080941691160291821691820361117f57565b90929160a05491600091604051937f1065cf7300000000000000000000000000000000000000000000000000000000855283600486015283856024816001600160a01b0385165afa9485156122525784956121af575b5084518015908115612197575b506121905784511561217c57620186a06001600160801b03611fbd816020890151168a611f14565b1604906001600160a01b03606554166001600160a01b0382163b156109d557604051631ac6758960e11b81526001600160a01b03868116600483015230602483015291821660448201526001600160801b0384166064820152918691839160849183918591165af180156121715761215c575b5061203b90876111bd565b936001945b8151861015612153576001600160801b0361205b8784611ab2565b5116908660001981011161213f57620186a06001600160801b036120976001600160a01b0361208e6000198c0189611ab2565b5116948c611f14565b1604916001600160a01b0360a0541690813b15610e8757604051631ac6758960e11b81526001600160a01b0388811660048301523060248301529190911660448201526001600160801b03841660648201529087908290608490829084905af1801561213457908791612120575b505061211a91612114916111bd565b95611aa3565b94612040565b61212990610f51565b6109d5578538612105565b6040513d89823e3d90fd5b602486634e487b7160e01b81526011600452fd5b96505050505050565b9361216a61203b9295610f51565b9390612030565b6040513d87823e3d90fd5b602484634e487b7160e01b81526032600452fd5b5050505050565b83516000198201925090821161213f57141538611f95565b9094503d8085833e6121c18183610f97565b81019060209081818403126109d55780519067ffffffffffffffff82116109d157019180601f840112156109d55782516121fa81610fb9565b936122086040519586610f97565b818552838086019260051b820101928311610e87578301905b82821061223357505050509338611f88565b81516001600160801b03811681036109cd578152908301908301612221565b6040513d86823e3d90fd5b90609a5460201c60020b9160020b9180156122cb57627fffff19831460001982141661117f578080840560020b028060020b90810361117f578093826000821291826122bc575b50506122ae575050565b6122b9929350611162565b90565b0760020b1515905082386122a4565b634e487b7160e01b600052601260045260246000fd5b906122eb9061225d565b90600091338352602092609e8452604092838220918360020b928382528652848120916001600160a01b038091169283835287528582205460001994612333868314156116b0565b338452609d8952878420956123488388611130565b50946001860196612373868954169a6123618c82612b5a565b61236b8c82612755565b9d909261291f565b996123d7575b5050505050505050506001600160801b031615612394575050565b60649250519062461bcd60e51b82526004820152600b60248201527f4e4f5f4541524e494e47530000000000000000000000000000000000000000006044820152fd5b885483810190811161197957928b879592936124899a98948f6124066001600160801b039f9e9c9a988d611130565b5033808552609e80845286862060018401805460a01c60020b885290855287872084548c16885285528787209b909b5590855282528484209684529581528383209183525220558254865462ffffff60a01b191662ffffff60a01b9091161786555416926001600160a01b031993848254161790555416908254161790556116fb565b903880808080808080612379565b9291926000906001600160a01b03806099541691161460001461252b575060020b80600052609c60205260036040600020019033600052609f6020526040600020906000526020526002604060002001905b80546001600160801b03918261250187828516611195565b166001600160801b031980931617905582549161252381841696871597611195565b169116179055565b9060409060020b91828152609c602052209033600052609f6020526040600020906000526020526040600020906124e9565b60009061256983612c81565b916001600160a01b038060995416908316146000146126fc575061265d61267c8460020b9384600052609c6020526125dd60406000206003810192819733600052609f60205260406000209060005260205260026040600020016001600160801b03808060a15416925416935416906131e9565b9390809490965b8354956001600160801b0396876125fd858284166111bd565b166001600160801b031980921617865561263e61261e83855460801c611195565b84546001600160801b031660809190911b6001600160801b031916178455565b8761264d8454938285166111bd565b169116179055825460801c611195565b6001600160801b036001600160801b031983549260801b169116179055565b8216918261268b575b50505050565b604080516001600160a01b0393909316835260029490940b60208301526001600160801b0316928101929092524260608301526126f0917fd4f5e27df9cb5ac16696d501c6a53baa5aa6bea8ace7a2794aed05cff36b441390608090a1609b546111b0565b609b5538808080612685565b61267c61265d9161274c8660020b95868352609c6020526040808420936003850198338252609f60205282822090825260205220906001600160801b03808060a1541693541690895416926131e9565b939080966125e4565b916000906000926001600160a01b03806098541691161480600014612819578460020b90818552609c6020526040852091338652609f6020526040862090865260205260026040862001955b6001600160801b038097541695861561280b5750906127c08692612c81565b90156127ee576127da928760a15416905460801c906131e9565b939093945b8516146127e857565b60019150565b61280392918760a15416925460801c926131e9565b9390946127df565b965086955060019450505050565b8460020b90818552609c6020526003604086200191338652609f6020526040862090865260205260408520956127a1565b929190916000916000936001600160a01b039081806098541691161490816000146128ee578660020b90818752609c6020526040872093168652609f6020526040862090865260205260026040862001955b6001600160801b038097541695861561280b5750906128bb8692612c81565b90156128d7576127da928760018160a1541692015416906131e9565b61280392918760018160a1541694015416926131e9565b8660020b90818752609c6020526003604088200193168652609f60205260408620908652602052604085209561289c565b91926129bb949360006001600160a01b0390816098541682861614600014612b065750600285810b6000818152609c60209081526040808320338452609f835281842094845293909152902093916001919085015b6129a561298588845460801c6111bd565b83546001600160801b031660809190911b6001600160801b031916178355565b8054936001600160801b039b8c918287166111bd565b166001600160801b03198095161790558454948a8660801c961690550190815490896129e9868285166111bd565b169116179055866129fa8385611195565b16612a76575b50612a0a91611195565b938416612a15575050565b604080516001600160a01b03909216825260029290920b60208201526001600160801b0384169181019190915242606082015233907f3a193c6b30ee24289ff8bcf42f8c22a482349adde48a590f8867a0f012f1a3fb908060808101611642565b60a0541691612a858282611195565b92803b1561043a57604051631ac6758960e11b81526001600160a01b03861660048201523060248201523360448201526001600160801b039490941660648501526000908490608490829084905af1928315612afa57612a0a93612aeb575b5091612a00565b612af490610f51565b38612ae4565b6040513d6000823e3d90fd5b916001600360408860020b95868152609c602052200133600052609f60205260406000208560005260205260406000209433600052609f602052604060002090600052602052600260406000200194612974565b9060006001600160a01b03806098541690831614600014612c1e5750600282810b6000818152609c60209081526040808320338452609f8352818420948452939091529020928383019290915b01928354946001820195865410600014612c1657612bd3612bf5916001600160801b031994339161284a565b5083546001600160801b031660809190911b6001600160801b03191617909255565b612c0e8354916001600160801b03808416911614611d1e565b169055549055565b505050505050565b600360408460020b92838152609c60205220019133600052609f60205260406000208260005260205260406000209133600052609f60205260406000209060005260205260028060406000200193612ba7565b818110612c7c575090565b905090565b60020b60008112156131e3577f8000000000000000000000000000000000000000000000000000000000000000811461117f57806000035b620d89e8811161319f5760018116156131765770ffffffffffffffffffffffffffffffffff6ffffcb933bd6fad37aa2d162d1a5940015b16916002821661314a575b60049182811661311e575b600881166130f2575b601081166130c6575b6020811661309a575b6040811661306e575b608090818116613043575b6101008116613018575b6102008116612fed575b6104008116612fc2575b6108008116612f97575b6110008116612f6c575b6120008116612f41575b6140008116612f16575b6180008116612eeb575b620100008116612ec0575b620200008116612e96575b620400008116612e58575b6208000016612e19575b50600012612df1575b50612de46001600160a01b039163ffffffff811615600014612de85760ff60005b169060201c6111b0565b1690565b60ff6001612dda565b8115612e04575060001904612de4612db9565b601290634e487b7160e01b6000525260246000fd5b6b048a170391f7dc42444e8fa293919391828102928184041490151715612e43571c916000612db0565b601183634e487b7160e01b6000525260246000fd5b936d2216e584f5fa1ea926041bedfe9890818102918183041490151715612e8157811c93612da6565b601184634e487b7160e01b6000525260246000fd5b936e5d6af8dedb81196699c329225ee60490818102918183041490151715612e8157811c93612d9b565b936f09aa508b5b7a84e1c677de54f3e99bc990818102918183041490151715612e8157811c93612d90565b936f31be135f97d08fd981231505542fcfa690818102918183041490151715612e8157811c93612d85565b936f70d869a156d2a1b890bb3df62baf32f790818102918183041490151715612e8157811c93612d7b565b936fa9f746462d870fdf8a65dc1f90e061e590818102918183041490151715612e8157811c93612d71565b936fd097f3bdfd2022b8845ad8f792aa582590818102918183041490151715612e8157811c93612d67565b936fe7159475a2c29b7443b29c7fa6e889d990818102918183041490151715612e8157811c93612d5d565b936ff3392b0822b70005940c7a398e4b70f390818102918183041490151715612e8157811c93612d53565b936ff987a7253ac413176f2b074cf7815e5490818102918183041490151715612e8157811c93612d49565b936ffcbe86c7900a88aedcffc83b479aa3a490818102918183041490151715612e8157811c93612d3f565b936ffe5dee046a99a2a811c461f1969c305390818102918183041490151715612e8157811c93612d35565b926fff2ea16466c96a3843ec78b326b5286190818102918183041490151715612e435760801c92612d2a565b926fff973b41fa98c081472e6896dfb254c090818102918183041490151715612e435760801c92612d21565b926fffcb9843d60f6159c9db58835c92664490818102918183041490151715612e435760801c92612d18565b926fffe5caca7e10e4e61c3624eaa0941cd090818102918183041490151715612e435760801c92612d0f565b926ffff2e50f5f656932ef12357cf3c7fdcc90818102918183041490151715612e435760801c92612d06565b916ffff97272373d413259a46990580e213a9081810291818304149015171561117f5760801c91612cfb565b70ffffffffffffffffffffffffffffffffff700100000000000000000000000000000000612cf0565b606460405162461bcd60e51b815260206004820152600160248201527f54000000000000000000000000000000000000000000000000000000000000006044820152fd5b80612cb9565b6001600160801b03808316956001600160a01b0390941694929161321686613211818a6132ca565b6132ca565b9282841680940361328657839683861680951161327c575b6132448161323f8693848c166133ac565b6133ac565b169783613251848b611195565b161015613272575b506132649086611195565b16101561326e5750565b9150565b9650613264613259565b949650869461322e565b606460405162461bcd60e51b815260206004820152600460248201527f43313238000000000000000000000000000000000000000000000000000000006044820152fd5b600019828209908281029283808410930392808403931461330f576c01000000000000000000000000918383111561043a570990828211900360a01b910360601c1790565b50505060601c90565b906c0100000000000000000000000090600019828409928060601b9283808610950394808603951461339e578483111561043a578291098160018119011680920460028082600302188083028203028083028203028083028203028083028203028083028203028092029003029360018380600003040190848311900302920304170290565b50508092501561043a570490565b91906133b88184613318565b9281156122cb576c0100000000000000000000000090096133d557565b9060001981101561043a576122b990611aa356fea26469706673582212203d30bed5c691b8fe76dda8fab2f70c5a12642774088d4d79a2666a34b3ae914664736f6c63430008140033";

type TokenExchangeConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: TokenExchangeConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class TokenExchange__factory extends ContractFactory {
  constructor(...args: TokenExchangeConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<TokenExchange> {
    return super.deploy(overrides || {}) as Promise<TokenExchange>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): TokenExchange {
    return super.attach(address) as TokenExchange;
  }
  override connect(signer: Signer): TokenExchange__factory {
    return super.connect(signer) as TokenExchange__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): TokenExchangeInterface {
    return new utils.Interface(_abi) as TokenExchangeInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): TokenExchange {
    return new Contract(address, _abi, signerOrProvider) as TokenExchange;
  }
}
