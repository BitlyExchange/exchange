/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Signer,
  utils,
  Contract,
  ContractFactory,
  BigNumberish,
  Overrides,
} from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../common";
import type {
  TokenExchange,
  TokenExchangeInterface,
} from "../../contracts/TokenExchange";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "bank",
        type: "address",
      },
      {
        internalType: "address",
        name: "tX",
        type: "address",
      },
      {
        internalType: "address",
        name: "tY",
        type: "address",
      },
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        internalType: "uint128",
        name: "tinyAmountThresh",
        type: "uint128",
      },
      {
        internalType: "int24",
        name: "margin",
        type: "int24",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "user",
        type: "address",
      },
    ],
    name: "CacheCleared",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "targetToken",
        type: "address",
      },
      {
        indexed: false,
        internalType: "int24",
        name: "point",
        type: "int24",
      },
      {
        indexed: false,
        internalType: "uint128",
        name: "earning",
        type: "uint128",
      },
      {
        indexed: true,
        internalType: "address",
        name: "wallet",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "timestamp",
        type: "uint256",
      },
    ],
    name: "EarningClaimed",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "originToken",
        type: "address",
      },
      {
        indexed: true,
        internalType: "int24",
        name: "point",
        type: "int24",
      },
      {
        indexed: false,
        internalType: "uint128",
        name: "refund",
        type: "uint128",
      },
      {
        indexed: true,
        internalType: "address",
        name: "wallet",
        type: "address",
      },
    ],
    name: "LimitOrderCanceled",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "token",
        type: "address",
      },
      {
        indexed: true,
        internalType: "int24",
        name: "point",
        type: "int24",
      },
      {
        indexed: false,
        internalType: "uint128",
        name: "amount",
        type: "uint128",
      },
      {
        indexed: false,
        internalType: "uint128",
        name: "earning",
        type: "uint128",
      },
      {
        indexed: true,
        internalType: "address",
        name: "wallet",
        type: "address",
      },
    ],
    name: "LimitOrderPlaced",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "originToken",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint128",
        name: "amount",
        type: "uint128",
      },
      {
        indexed: false,
        internalType: "uint128",
        name: "earning",
        type: "uint128",
      },
    ],
    name: "MarketOrderCompleted",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "originToken",
        type: "address",
      },
      {
        indexed: false,
        internalType: "int24",
        name: "point",
        type: "int24",
      },
      {
        indexed: false,
        internalType: "uint128",
        name: "amount",
        type: "uint128",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "timestamp",
        type: "uint256",
      },
    ],
    name: "Swapped",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "originToken",
        type: "address",
      },
      {
        internalType: "int24",
        name: "point",
        type: "int24",
      },
    ],
    name: "_claimEarningInternal",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "blockDeployed",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "cancelAllLimitOrders",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "originToken",
        type: "address",
      },
      {
        internalType: "int24",
        name: "point",
        type: "int24",
      },
    ],
    name: "cancelLimitOrder",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "claimAllEarnings",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "originToken",
        type: "address",
      },
      {
        internalType: "int24",
        name: "point",
        type: "int24",
      },
    ],
    name: "claimEarning",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "user",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "endIndex",
        type: "uint256",
      },
    ],
    name: "clearZeroLimOrders",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "curPoint",
    outputs: [
      {
        internalType: "int24",
        name: "",
        type: "int24",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "originToken",
        type: "address",
      },
      {
        internalType: "int24",
        name: "point",
        type: "int24",
      },
      {
        internalType: "uint128",
        name: "amount",
        type: "uint128",
      },
      {
        internalType: "address",
        name: "holder",
        type: "address",
      },
      {
        internalType: "address",
        name: "referral",
        type: "address",
      },
    ],
    name: "limitOrder",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "user",
        type: "address",
      },
    ],
    name: "limitOrders",
    outputs: [
      {
        components: [
          {
            internalType: "address",
            name: "originToken",
            type: "address",
          },
          {
            internalType: "address",
            name: "targetToken",
            type: "address",
          },
          {
            internalType: "int24",
            name: "point",
            type: "int24",
          },
        ],
        internalType: "struct TokenExchange.LimitOrderView[]",
        name: "orders",
        type: "tuple[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "originToken",
        type: "address",
      },
      {
        internalType: "uint128",
        name: "amount",
        type: "uint128",
      },
      {
        internalType: "int24",
        name: "startPoint",
        type: "int24",
      },
      {
        internalType: "uint16",
        name: "slipLimit",
        type: "uint16",
      },
      {
        internalType: "address",
        name: "holder",
        type: "address",
      },
      {
        internalType: "address",
        name: "referral",
        type: "address",
      },
    ],
    name: "marketOrder",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "pairInfo",
    outputs: [
      {
        internalType: "address",
        name: "tokenX",
        type: "address",
      },
      {
        internalType: "address",
        name: "tokenY",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "pointMargin",
    outputs: [
      {
        internalType: "int24",
        name: "",
        type: "int24",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "int24",
        name: "",
        type: "int24",
      },
    ],
    name: "pointOrder",
    outputs: [
      {
        components: [
          {
            internalType: "uint128",
            name: "selling",
            type: "uint128",
          },
          {
            internalType: "uint128",
            name: "unlegacyEarn",
            type: "uint128",
          },
          {
            internalType: "uint128",
            name: "legacyEarn",
            type: "uint128",
          },
          {
            internalType: "uint256",
            name: "accLegacyEarn",
            type: "uint256",
          },
        ],
        internalType: "struct TokenExchange.Order",
        name: "X",
        type: "tuple",
      },
      {
        components: [
          {
            internalType: "uint128",
            name: "selling",
            type: "uint128",
          },
          {
            internalType: "uint128",
            name: "unlegacyEarn",
            type: "uint128",
          },
          {
            internalType: "uint128",
            name: "legacyEarn",
            type: "uint128",
          },
          {
            internalType: "uint256",
            name: "accLegacyEarn",
            type: "uint256",
          },
        ],
        internalType: "struct TokenExchange.Order",
        name: "Y",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "targetToken",
        type: "address",
      },
      {
        internalType: "int24",
        name: "point",
        type: "int24",
      },
      {
        internalType: "address",
        name: "wallet",
        type: "address",
      },
    ],
    name: "queryEarning",
    outputs: [
      {
        internalType: "uint128",
        name: "sold",
        type: "uint128",
      },
      {
        internalType: "uint128",
        name: "earned",
        type: "uint128",
      },
      {
        internalType: "uint128",
        name: "selling",
        type: "uint128",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "startOff",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "totalVolume",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x6080346200013357601f6200332638819003918201601f19168301916001600160401b03831184841017620001385780849260c09460405283398101031262000133576200004d816200014e565b6200005b602083016200014e565b62000069604084016200014e565b9262000078606082016200014e565b608082015190936001600160801b038216929091839003620001335760a00151928360020b8403620001335762000123956001600055620000b93362000163565b4360025560018060a01b0380928160018060a01b0319951685600b541617600b55168360035416176003551690600454161760045560018060801b0319600c541617600c556005549060201b66ffffff00000000169066ffffff0000000019161760055562000163565b6040516131799081620001ad8239f35b600080fd5b634e487b7160e01b600052604160045260246000fd5b51906001600160a01b03821682036200013357565b600180546001600160a01b039283166001600160a01b0319821681179092559091167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0600080a356fe60406080815260048036101561001457600080fd5b600090813560e01c90816312c7048714610c6b5781631b04562614610c3957816335ae394214610c1a5781633702e0a6146107bf5781633e1993601461074d5781635f81a57c1461072e578163633e13eb1461070b578163715018a6146106af5781638612ccf81461058f5781638da5cb5b14610567578163a9cd94691461046b578163af8eb382146103b1578163be2f798e1461038f578163cf85e95e14610368578163e5f292d114610343578163e9aa0eea14610319578163f11f5a02146102e8578163f2fde38b14610206578163fc2a5b1d146101d6575063fde89598146100fe57600080fd5b346101d357806003193601126101d35733815260206008815282822080549061012682611b0e565b9261013386519485610d54565b82845280840191855280852085925b84841061018f57878787815b815181101561018b57806101816101686101869385611afa565b51866001600160a01b0382511691015160020b90611797565b611aeb565b61014e565b8280f35b6001908389519161019f83610d38565b6001600160a01b0392838654168152848601549384168382015260029360a01c840b8c820152815201920193019290610142565b80fd5b919050346101d357806003193601126101d357506001600160a01b03806003541691541682519182526020820152f35b839150346102e45760203660031901126102e457610222610cd2565b9061022b610dc4565b6001600160a01b0380921692831561027b575050600154826001600160a01b0319821617600155167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0600080a380f35b906020608492519162461bcd60e51b8352820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201527f64647265737300000000000000000000000000000000000000000000000000006064820152fd5b8280fd5b828434610315573660031901126101d357610312610304610cd2565b61030c610cfe565b90612035565b80f35b5080fd5b828434610315573660031901126101d357610312610335610cd2565b61033d610cfe565b90611797565b828434610315573660031901126101d35761031261035f610cd2565b60243590611b26565b82843461031557816003193601126103155760209060ff60055460181c1690519015158152f35b82843461031557816003193601126103155760209060055460020b9051908152f35b839150346102e45760203660031901126102e45735918260020b809303610466578181610100946104649352600760205220916104306103fc60036103f586610d76565b9501610d76565b91518094606080916001600160801b0380825116855280602083015116602086015260408201511660408501520151910152565b80516001600160801b0390811660808501526020820151811660a085015260408201511660c08401526060015160e0830152565bf35b600080fd5b828434610315576020806003193601126102e4576001600160a01b039283610491610cd2565b16815260088252828120918254906104a882611b0e565b916104b586519384610d54565b8083528183018095855282852085915b838310610523575050505084519481860192828752518093528086019493905b8382106104f25786860387f35b84518051891687528084015189168785015281015160020b86820152606090950194938201936001909101906104e5565b600190858a98969798519161053783610d38565b8c855416835283850154928d84168382015260029360a01c840b8d820152815201920192019190959493956104c5565b8284346103155781600319360112610315576020906001600160a01b03600154169051908152f35b5050346101d357806003193601126101d357338152602091600883528082209283546105ba81611b0e565b946105c784519687610d54565b818652845281842084908387015b83831061066b5750505050825b845181101561065657806105f96106389287611afa565b516001600160a01b03808583015116868301916001600160801b0361062684516002943391860b90611dc9565b5090501661063d575b50505050611aeb565b6105e2565b61064d9351169151900b90612035565b3880808061062f565b50906008610312923385525282205433611b26565b6001908587519161067b83610d38565b6001600160a01b0392838654168152848601549384168382015260029360a01c840b8a8201528152019201920191906105d5565b82346101d357806003193601126101d3576106c8610dc4565b60006001600160a01b036001546001600160a01b03198116600155167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e08280a380f35b8284346103155781600319360112610315576005549051602091821c60020b8152f35b8284346103155781600319360112610315576020906006549051908152f35b82346101d35760c03660031901126101d357610767610cd2565b6024356001600160801b0381168103610466576044358060020b81036104665760643561ffff811681036107bb5761079d610ce8565b9160a435936001600160a01b03851685036104665761031295610ec2565b8480fd5b839150346102e45760a03660031901126102e4576107db610cd2565b916107e4610cfe565b90604435926001600160801b0380851693848603610c16576001600160a01b039060643582811603610c12576108229061081c610ce8565b50611fb1565b9660055460ff8160181c16600014610bb557508184541682821614600014610b625760055460020b8860020b13610b1f575b8882600b5416803b15610315578651631ac6758960e11b81526001600160a01b0384168782019081523360208201523060408201526001600160801b038b166060820152909291839182908490829060800103925af18015610b1557610b02575b508515610abf57835482821696899695949392918316888103610ab957508260035416935b6108e485896128ae565b6108f9886108f38c82876121eb565b946122b1565b61091085610907818b6124a9565b5091819b612673565b9783610aad575b50505061096e575b505090516001600160801b03948516815293909116602084015250339260020b917f1b36ba4c0e68abe4a9493a6b705902c56f00e745caa4de70f11bc854e5da93bc9080604081015b0390a480f35b33895260209160088352848a2091855161098781610d38565b8881528185820193168352868101918b60020b9485845280549068010000000000000000821015610a9a57906109c291600182018155610e1c565b929092610a885790600181610a14969594935116926001600160a01b0319938482541617815501935116908354161782555160020b62ffffff60a01b1982549160a01b62ffffff60a01b169116179055565b3389526008825283892054600019810193908411610a755750338952600982528389206000918252825283812086825290915282902055816109687f1b36ba4c0e68abe4a9493a6b705902c56f00e745caa4de70f11bc854e5da93bc61091f565b896011602492634e487b7160e01b835252fd5b60248e808a634e487b7160e01b825252fd5b60248f60418b634e487b7160e01b835252fd5b161090508a8080610917565b936108da565b606484602087519162461bcd60e51b8352820152600c60248201527f57524f4e475f414d4f554e5400000000000000000000000000000000000000006044820152fd5b610b0e90999199610d0e565b97896108b5565b86513d8c823e3d90fd5b606484602087519162461bcd60e51b8352820152600c60248201527f47545f4355525f505249434500000000000000000000000000000000000000006044820152fd5b60055460020b8860020b121561085457606484602087519162461bcd60e51b8352820152600c60248201527f4c545f4355525f505249434500000000000000000000000000000000000000006044820152fd5b63010000009062ffffff8a169063ffffffff191617176005557fd4f5e27df9cb5ac16696d501c6a53baa5aa6bea8ace7a2794aed05cff36b44136080865184841681528a60020b60208201528b88820152426060820152a1610854565b8880fd5b8780fd5b8284346103155781600319360112610315576020906002549051908152f35b82843461031557806003193601126103155761031290610c5a610304610cd2565b338352600860205282205433611b26565b82843461031557606036600319011261031557610c86610cd2565b610c8e610cfe565b90604435936001600160a01b03851685036101d3575092610cb191606094611dc9565b83929351936001600160801b03928380921686521660208501521690820152f35b600435906001600160a01b038216820361046657565b608435906001600160a01b038216820361046657565b602435908160020b820361046657565b67ffffffffffffffff8111610d2257604052565b634e487b7160e01b600052604160045260246000fd5b6060810190811067ffffffffffffffff821117610d2257604052565b90601f8019910116810190811067ffffffffffffffff821117610d2257604052565b906040516080810181811067ffffffffffffffff821117610d225760405260606002829480546001600160801b0390818116865260801c602086015260018201541660408501520154910152565b6001600160a01b03600154163303610dd857565b606460405162461bcd60e51b815260206004820152602060248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e65726044820152fd5b8054821015610e385760005260206000209060011b0190600090565b634e487b7160e01b600052603260045260246000fd5b600291820b910b0390627fffff198212627fffff831317610e6b57565b634e487b7160e01b600052601160045260246000fd5b9190916001600160801b0380809416911601918211610e6b57565b91908201809211610e6b57565b6001600160801b039182169082160391908211610e6b57565b929394959060009586976001600160a01b03600b5416803b15610c1257604051631ac6758960e11b81526001600160a01b03881660048201523360248201523060448201526001600160801b03851660648201529089908290608490829084905af180156116ed576116da575b506001600160a01b03600b5416926040517f95d12000000000000000000000000000000000000000000000000000000000008152602081600481885afa90811561161457610f92620186a0926001600160801b03928d916116bb575b5084611f93565b1604916040517fa886e5f9000000000000000000000000000000000000000000000000000000008152602081600481895afa90811561163b57610fea620186a0926001600160801b03928e9161169c575b5085611f93565b1604936040517f343dfb7e0000000000000000000000000000000000000000000000000000000081526020816004818a5afa90811561165e57611042620186a0926001600160801b03928f9161166d575b5086611f93565b1604956001600160a01b0360015416813b1561166957604051631ac6758960e11b81526001600160a01b038c811660048301523060248301529190911660448201526001600160801b0386166064820152908c908290608490829084905af1801561165e57908c9161164a575b50506001600160a01b03600b541690813b1561164657604051631ac6758960e11b81526001600160a01b038b811660048301523060248301529190911660448201526001600160801b0386166064820152908b908290608490829084905af1801561163b57908b91611623575b50506001600160a01b03600b541690813b1561161f57604051631ac6758960e11b81526001600160a01b038a811660048301523060248301529190911660448201526001600160801b0386166064820152908a908290608490829084905af1801561161457908a91611600575b50506111a5926111a06111b295936111a093610ea9565b610ea9565b9260055460020b90610e4e565b600281900b86136115e357939591955b85925b62ffffff861661ffff83160362ffffff81116115cf5762ffffff166001600160801b038516101561158b576001600160801b0388161561153257600554908160020b9889916112138b6129d5565b906001600160a01b0360045416806001600160a01b038b16146000146114c457508a9b50838b52600760205260408b20936003948486820194829f84600052338152600a6020526040902084600052602052600c546001600160801b031692546001600160801b031661128593612f3d565b95546001600160a01b031696602081901c60020b8301627fffff8113627fffff19909112176114b05760201c60020b820193929187918f5b546001600160801b0316906001600160801b03161015976112dd916128ae565b8560055460020b906112ef918d6121eb565b5060055460020b611300908c6122b1565b60055460020b9061131181836124a9565b509161131c93612673565b61132591610e81565b9b61133795611414575b505050610ea9565b92836001600160801b03600c54166001600160801b038216111561137a575b5062ffffff61137061ffff928260055460201c1690610e81565b94989150506111c5565b9093506001600160a01b03600b541690813b15610c1657604051631ac6758960e11b81526001600160a01b03871660048201523060248201523360448201526001600160801b039190911660648201529087908290608490829084905af18015611409579087916113f1575b509262ffffff611356565b6113fa90610d0e565b6114055785386113e6565b8580fd5b6040513d89823e3d90fd5b806001600160801b0391546080918382841c9260018301938454948361143c83828916610e81565b166001600160801b031980971617905561145b60028501918254610e9c565b9055169055835480921c9060018501908154908561147b85828516610e81565b16911617905561149060028501918254610e9c565b905516905562ffffff19600554169062ffffff161760055538808061132f565b60248e634e487b7160e01b81526011600452fd5b93908c958c939d845260076020526040842092600384019e8f9589600052338152600a602052604090208960005260205286600c546001600160801b03169187546001600160801b03169161151893612f3d565b909798899360201c60020b61152c91610e4e565b956112bd565b604080516001600160801b03998a16815298909116602089015291966001600160a01b039490941695507fc489dd1442ec1b08fb3b4a8339b7f96fd0f85f9b9a42d702819c1c78a3d11fc494508392505081015b0390a2565b606460405162461bcd60e51b815260206004820152601160248201527f4f55545f4f465f534c49505f4c494d49540000000000000000000000000000006044820152fd5b602488634e487b7160e01b81526011600452fd5b627fffff198160020b14610e6b5760020b600003939591956111c2565b61160990610d0e565b610c12578838611189565b6040513d8c823e3d90fd5b8a80fd5b61162c90610d0e565b61163757893861111c565b8980fd5b6040513d8d823e3d90fd5b8b80fd5b61165390610d0e565b61161f578a386110af565b6040513d8e823e3d90fd5b8c80fd5b61168f915060203d602011611695575b6116878183610d54565b810190611f74565b3861103b565b503d61167d565b6116b5915060203d602011611695576116878183610d54565b38610fe3565b6116d4915060203d602011611695576116878183610d54565b38610f8b565b6116e690989198610d0e565b9638610f2f565b6040513d8b823e3d90fd5b156116ff57565b606460405162461bcd60e51b815260206004820152600f60248201527f4f524445525f4e4f545f455849535400000000000000000000000000000000006044820152fd5b8054801561178157600019019061175a8282610e1c565b61176b576001816000809355015555565b634e487b7160e01b600052600060045260246000fd5b634e487b7160e01b600052603160045260246000fd5b906117a190611fb1565b9060003381526009602052604081208360020b8252602052604081206001600160a01b03831682526020526040812054600019916117e1838314156116f8565b338152600860205260408120916117f88184610e1c565b50916118276001600160a01b03600185015416611815818a6128ae565b61181f818a6124a9565b50918a612673565b5080946001600160a01b03600454166001600160a01b03881614600014611a99578760020b82526007602052604082206003810190338452600a602052604084208a60020b85526020526002604085200190338552600a602052604085208b60020b86526020526001600260408720925b015491015410156119d5575b505084548181019081116119c1576001600160a01b036001938796959360406118d1849561197c9b610e1c565b509233815260096020528181209688850197885460a01c60020b600052602052826000208686541660005260205282600020553381526009602052208c60020b6000526020526040600020838c16600052602052604060002055611957845460a01c60020b8688019062ffffff60a01b1982549160a01b62ffffff60a01b169116179055565b5416916001600160a01b03199283865416178555541690828401541617910155611743565b6001600160801b03604051911681527f807645a5ce4bf61d15b017a8b4178dedd7ff00eb9d90b15bbd5c981252e4fe7560206001600160a01b03339560020b941692a4565b602483634e487b7160e01b81526011600452fd5b9096506001600160801b03819392935416968054906001600160801b036119fe8a828516610ea9565b166001600160801b031980931617905581541690556001600160a01b03600b5416803b1561031557604051631ac6758960e11b81526001600160a01b03891660048201523060248201523360448201526001600160801b03881660648201529082908290608490829084905af18015611a8e57611a7f575b809291926118a4565b611a8890610d0e565b38611a76565b6040513d84823e3d90fd5b8760020b825260076020526040822060038101338452600a602052604084208a60020b85526020526040842090338552600a602052604085208b60020b86526020526001600280604088200192611898565b6000198114610e6b5760010190565b8051821015610e385760209160051b010190565b67ffffffffffffffff8111610d225760051b60200190565b906001600160a01b039182811692600092848452602060088152604090611b52828720938454906129c5565b94611b5c86611b0e565b95611b6984519788610d54565b808752601f19611b7882611b0e565b0136848901378791885b828110611cf557505050805b611bbe57505050505050807fc18cced4ef47e8fff8412a99bc09b8afb2f057f42c940accd159af4f5452985891a2565b600019818101828111611ce157611bd59088611afa565b51611be08187610e1c565b50918654818101908111611ccd5791888b611c83888f84968c611c068f9a859c9b610e1c565b509583815260099384865282822094600191828a019b8c549860a09860029a8a1c8b0b87528152868620908d8d54168752528585205583528d52828220908c019c8d54861c870b8352528d82822090898d541683525220558554901c900b879062ffffff60a01b1982549160a01b62ffffff60a01b169116179055565b5416926001600160a01b03199384825416179055541690825416179055611ca984611743565b8015611cb9576000190180611b8e565b602487634e487b7160e01b81526011600452fd5b60248b634e487b7160e01b81526011600452fd5b602489634e487b7160e01b81526011600452fd5b611d17826001611d05848b610e1c565b5001548a8160a01c60020b9116611dc9565b6001600160801b0392831615929183611d73575b5082611d68575b5050611d47575b611d4290611aeb565b611b82565b92611d608185611d5a611d42948d611afa565b52611aeb565b939050611d39565b161590503880611d32565b821615925038611d2b565b15611d8557565b606460405162461bcd60e51b815260206004820152600a60248201527f57524f4e475f534f4c44000000000000000000000000000000000000000000006044820152fd5b9291906001600160a01b0390816003541682861690811480918115611f66575b5015611f2257611dfa600092611fb1565b918115611ee55750600282810b60008181526007602090815260408083209789168352600a8252808320938352929052209490850193905b6001600160801b0380955416976000808a986001600287015491015410600014611ecc57505092611eaf9592611e708693611ea996611e7e9861259e565b509690969a85881614611d7e565b611e896000936129d5565b9115611eb257611ea293600c5416905460801c90612f3d565b9092610e81565b94610e81565b91565b91611ec693600c5416925460801c92612f3d565b92610e81565b95611eaf9794919a9350611ea9959250611e89906129d5565b600283810b808352600760209081526040938490209688166000908152600a82528481209281529190529190912090810194909360030190611e32565b606460405162461bcd60e51b815260206004820152600d60248201527f494e56414c49445f544f4b454e000000000000000000000000000000000000006044820152fd5b905083600454161438611de9565b9081602091031261046657516001600160801b03811681036104665790565b9190916001600160801b0380809416911602918216918203610e6b57565b9060055460201c60020b9160020b91801561201f57627fffff198314600019821416610e6b578080840560020b028060020b908103610e6b57809382600082129182612010575b5050612002575050565b61200d929350610e4e565b90565b0760020b151590508238611ff8565b634e487b7160e01b600052601260045260246000fd5b9061203f90611fb1565b9060009133835260209260098452604092838220918360020b928382528652848120916001600160a01b038091169283835287528582205460001994612087868314156116f8565b338452600889528784209561209c8388610e1c565b509460018601966120c7868954169a6120b58c826128ae565b6120bf8c826124a9565b9d9092612673565b9961212b575b5050505050505050506001600160801b0316156120e8575050565b60649250519062461bcd60e51b82526004820152600b60248201527f4e4f5f4541524e494e47530000000000000000000000000000000000000000006044820152fd5b88548381019081116119c157928b879592936121dd9a98948f61215a6001600160801b039f9e9c9a988d610e1c565b5033808552600980845286862060018401805460a01c60020b885290855287872084548c16885285528787209b909b5590855282528484209684529581528383209183525220558254865462ffffff60a01b191662ffffff60a01b9091161786555416926001600160a01b03199384825416179055541690825416179055611743565b9038808080808080806120cd565b9291926000906001600160a01b03806004541691161460001461227f575060020b80600052600760205260036040600020019033600052600a6020526040600020906000526020526002604060002001905b80546001600160801b03918261225587828516610e81565b166001600160801b031980931617905582549161227781841696871597610e81565b169116179055565b9060409060020b918281526007602052209033600052600a60205260406000209060005260205260406000209061223d565b6000906122bd836129d5565b916001600160a01b0380600454169083161460001461245057506123b16123d08460020b9384600052600760205261233160406000206003810192819733600052600a60205260406000209060005260205260026040600020016001600160801b038080600c541692541693541690612f3d565b9390809490965b8354956001600160801b03968761235185828416610ea9565b166001600160801b031980921617865561239261237283855460801c610e81565b84546001600160801b031660809190911b6001600160801b031916178455565b876123a1845493828516610ea9565b169116179055825460801c610e81565b6001600160801b036001600160801b031983549260801b169116179055565b821691826123df575b50505050565b604080516001600160a01b0393909316835260029490940b60208301526001600160801b031692810192909252426060830152612444917fd4f5e27df9cb5ac16696d501c6a53baa5aa6bea8ace7a2794aed05cff36b441390608090a1600654610e9c565b600655388080806123d9565b6123d06123b1916124a08660020b9586835260076020526040808420936003850198338252600a60205282822090825260205220906001600160801b038080600c54169354169089541692612f3d565b93908096612338565b916000906000926001600160a01b0380600354169116148060001461256d578460020b9081855260076020526040852091338652600a6020526040862090865260205260026040862001955b6001600160801b038097541695861561255f57509061251486926129d5565b90156125425761252e9287600c5416905460801c90612f3d565b939093945b85161461253c57565b60019150565b612557929187600c5416925460801c92612f3d565b939094612533565b965086955060019450505050565b8460020b9081855260076020526003604086200191338652600a6020526040862090865260205260408520956124f5565b929190916000916000936001600160a01b03908180600354169116149081600014612642578660020b9081875260076020526040872093168652600a6020526040862090865260205260026040862001955b6001600160801b038097541695861561255f57509061260f86926129d5565b901561262b5761252e9287600181600c54169201541690612f3d565b612557929187600181600c54169401541692612f3d565b8660020b9081875260076020526003604088200193168652600a6020526040862090865260205260408520956125f0565b919261270f949360006001600160a01b039081600354168286161460001461285a5750600285810b6000818152600760209081526040808320338452600a835281842094845293909152902093916001919085015b6126f96126d988845460801c610ea9565b83546001600160801b031660809190911b6001600160801b031916178355565b8054936001600160801b039b8c91828716610ea9565b166001600160801b03198095161790558454948a8660801c9616905501908154908961273d86828516610ea9565b1691161790558661274e8385610e81565b166127ca575b5061275e91610e81565b938416612769575050565b604080516001600160a01b03909216825260029290920b60208201526001600160801b0384169181019190915242606082015233907f3a193c6b30ee24289ff8bcf42f8c22a482349adde48a590f8867a0f012f1a3fb908060808101611586565b600b5416916127d98282610e81565b92803b1561046657604051631ac6758960e11b81526001600160a01b03861660048201523060248201523360448201526001600160801b039490941660648501526000908490608490829084905af192831561284e5761275e9361283f575b5091612754565b61284890610d0e565b38612838565b6040513d6000823e3d90fd5b916001600360408860020b958681526007602052200133600052600a60205260406000208560005260205260406000209433600052600a6020526040600020906000526020526002604060002001946126c8565b9060006001600160a01b038060035416908316146000146129725750600282810b6000818152600760209081526040808320338452600a8352818420948452939091529020928383019290915b0192835494600182019586541060001461296a57612927612949916001600160801b031994339161259e565b5083546001600160801b031660809190911b6001600160801b03191617909255565b6129628354916001600160801b03808416911614611d7e565b169055549055565b505050505050565b600360408460020b92838152600760205220019133600052600a60205260406000208260005260205260406000209133600052600a602052604060002090600052602052600280604060002001936128fb565b8181106129d0575090565b905090565b60020b6000811215612f37577f80000000000000000000000000000000000000000000000000000000000000008114610e6b57806000035b620d89e88111612ef3576001811615612eca5770ffffffffffffffffffffffffffffffffff6ffffcb933bd6fad37aa2d162d1a5940015b169160028216612e9e575b600491828116612e72575b60088116612e46575b60108116612e1a575b60208116612dee575b60408116612dc2575b608090818116612d97575b6101008116612d6c575b6102008116612d41575b6104008116612d16575b6108008116612ceb575b6110008116612cc0575b6120008116612c95575b6140008116612c6a575b6180008116612c3f575b620100008116612c14575b620200008116612bea575b620400008116612bac575b6208000016612b6d575b50600012612b45575b50612b386001600160a01b039163ffffffff811615600014612b3c5760ff60005b169060201c610e9c565b1690565b60ff6001612b2e565b8115612b58575060001904612b38612b0d565b601290634e487b7160e01b6000525260246000fd5b6b048a170391f7dc42444e8fa293919391828102928184041490151715612b97571c916000612b04565b601183634e487b7160e01b6000525260246000fd5b936d2216e584f5fa1ea926041bedfe9890818102918183041490151715612bd557811c93612afa565b601184634e487b7160e01b6000525260246000fd5b936e5d6af8dedb81196699c329225ee60490818102918183041490151715612bd557811c93612aef565b936f09aa508b5b7a84e1c677de54f3e99bc990818102918183041490151715612bd557811c93612ae4565b936f31be135f97d08fd981231505542fcfa690818102918183041490151715612bd557811c93612ad9565b936f70d869a156d2a1b890bb3df62baf32f790818102918183041490151715612bd557811c93612acf565b936fa9f746462d870fdf8a65dc1f90e061e590818102918183041490151715612bd557811c93612ac5565b936fd097f3bdfd2022b8845ad8f792aa582590818102918183041490151715612bd557811c93612abb565b936fe7159475a2c29b7443b29c7fa6e889d990818102918183041490151715612bd557811c93612ab1565b936ff3392b0822b70005940c7a398e4b70f390818102918183041490151715612bd557811c93612aa7565b936ff987a7253ac413176f2b074cf7815e5490818102918183041490151715612bd557811c93612a9d565b936ffcbe86c7900a88aedcffc83b479aa3a490818102918183041490151715612bd557811c93612a93565b936ffe5dee046a99a2a811c461f1969c305390818102918183041490151715612bd557811c93612a89565b926fff2ea16466c96a3843ec78b326b5286190818102918183041490151715612b975760801c92612a7e565b926fff973b41fa98c081472e6896dfb254c090818102918183041490151715612b975760801c92612a75565b926fffcb9843d60f6159c9db58835c92664490818102918183041490151715612b975760801c92612a6c565b926fffe5caca7e10e4e61c3624eaa0941cd090818102918183041490151715612b975760801c92612a63565b926ffff2e50f5f656932ef12357cf3c7fdcc90818102918183041490151715612b975760801c92612a5a565b916ffff97272373d413259a46990580e213a90818102918183041490151715610e6b5760801c91612a4f565b70ffffffffffffffffffffffffffffffffff700100000000000000000000000000000000612a44565b606460405162461bcd60e51b815260206004820152600160248201527f54000000000000000000000000000000000000000000000000000000000000006044820152fd5b80612a0d565b6001600160801b03808316956001600160a01b03909416949291612f6a86612f65818a61301e565b61301e565b92828416809403612fda578396838616809511612fd0575b612f9881612f938693848c16613106565b613106565b169783612fa5848b610e81565b161015612fc6575b50612fb89086610e81565b161015612fc25750565b9150565b9650612fb8612fad565b9496508694612f82565b606460405162461bcd60e51b815260206004820152600460248201527f43313238000000000000000000000000000000000000000000000000000000006044820152fd5b6000198282099082810292838084109303918383039360009314613067576c0100000000000000000000000092848411156101d357500990828211900360a01b910360601c1790565b505090505060601c90565b906c0100000000000000000000000090600019828409928060601b928380861095039480860395146130f85784831115610466578291098160018119011680920460028082600302188083028203028083028203028083028203028083028203028083028203028092029003029360018380600003040190848311900302920304170290565b505080925015610466570490565b91906131128184613072565b92811561201f576c01000000000000000000000000900961312f57565b906000198110156104665761200d90611aeb56fea26469706673582212200c4e6f2bc6e7b3baee5ef2c76397c9551f1b983fcf3ccaad6d03ebaf2ee72b5c64736f6c63430008130033";

type TokenExchangeConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: TokenExchangeConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class TokenExchange__factory extends ContractFactory {
  constructor(...args: TokenExchangeConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    bank: PromiseOrValue<string>,
    tX: PromiseOrValue<string>,
    tY: PromiseOrValue<string>,
    owner: PromiseOrValue<string>,
    tinyAmountThresh: PromiseOrValue<BigNumberish>,
    margin: PromiseOrValue<BigNumberish>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<TokenExchange> {
    return super.deploy(
      bank,
      tX,
      tY,
      owner,
      tinyAmountThresh,
      margin,
      overrides || {}
    ) as Promise<TokenExchange>;
  }
  override getDeployTransaction(
    bank: PromiseOrValue<string>,
    tX: PromiseOrValue<string>,
    tY: PromiseOrValue<string>,
    owner: PromiseOrValue<string>,
    tinyAmountThresh: PromiseOrValue<BigNumberish>,
    margin: PromiseOrValue<BigNumberish>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(
      bank,
      tX,
      tY,
      owner,
      tinyAmountThresh,
      margin,
      overrides || {}
    );
  }
  override attach(address: string): TokenExchange {
    return super.attach(address) as TokenExchange;
  }
  override connect(signer: Signer): TokenExchange__factory {
    return super.connect(signer) as TokenExchange__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): TokenExchangeInterface {
    return new utils.Interface(_abi) as TokenExchangeInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): TokenExchange {
    return new Contract(address, _abi, signerOrProvider) as TokenExchange;
  }
}
