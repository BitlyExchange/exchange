/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Signer,
  utils,
  Contract,
  ContractFactory,
  BigNumberish,
  Overrides,
} from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../common";
import type {
  TokenExchange,
  TokenExchangeInterface,
} from "../../contracts/TokenExchange";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "bank",
        type: "address",
      },
      {
        internalType: "address",
        name: "tX",
        type: "address",
      },
      {
        internalType: "address",
        name: "tY",
        type: "address",
      },
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        internalType: "uint128",
        name: "tinyAmountThresh",
        type: "uint128",
      },
      {
        internalType: "int24",
        name: "margin",
        type: "int24",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "user",
        type: "address",
      },
    ],
    name: "CacheCleared",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "targetToken",
        type: "address",
      },
      {
        indexed: false,
        internalType: "int24",
        name: "point",
        type: "int24",
      },
      {
        indexed: false,
        internalType: "uint128",
        name: "earning",
        type: "uint128",
      },
      {
        indexed: true,
        internalType: "address",
        name: "wallet",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "timestamp",
        type: "uint256",
      },
    ],
    name: "EarningClaimed",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "originToken",
        type: "address",
      },
      {
        indexed: true,
        internalType: "int24",
        name: "point",
        type: "int24",
      },
      {
        indexed: false,
        internalType: "uint128",
        name: "refund",
        type: "uint128",
      },
      {
        indexed: true,
        internalType: "address",
        name: "wallet",
        type: "address",
      },
    ],
    name: "LimitOrderCanceled",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "token",
        type: "address",
      },
      {
        indexed: true,
        internalType: "int24",
        name: "point",
        type: "int24",
      },
      {
        indexed: false,
        internalType: "uint128",
        name: "amount",
        type: "uint128",
      },
      {
        indexed: false,
        internalType: "uint128",
        name: "earning",
        type: "uint128",
      },
      {
        indexed: true,
        internalType: "address",
        name: "wallet",
        type: "address",
      },
    ],
    name: "LimitOrderPlaced",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "originToken",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint128",
        name: "amount",
        type: "uint128",
      },
      {
        indexed: false,
        internalType: "uint128",
        name: "earning",
        type: "uint128",
      },
    ],
    name: "MarketOrderCompleted",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "originToken",
        type: "address",
      },
      {
        indexed: false,
        internalType: "int24",
        name: "point",
        type: "int24",
      },
      {
        indexed: false,
        internalType: "uint128",
        name: "amount",
        type: "uint128",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "timestamp",
        type: "uint256",
      },
    ],
    name: "Swapped",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "originToken",
        type: "address",
      },
      {
        internalType: "int24",
        name: "point",
        type: "int24",
      },
    ],
    name: "_claimEarningInternal",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "blockDeployed",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "cancelAllLimitOrders",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "originToken",
        type: "address",
      },
      {
        internalType: "int24",
        name: "point",
        type: "int24",
      },
    ],
    name: "cancelLimitOrder",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "claimAllEarnings",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "originToken",
        type: "address",
      },
      {
        internalType: "int24",
        name: "point",
        type: "int24",
      },
    ],
    name: "claimEarning",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "user",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "endIndex",
        type: "uint256",
      },
    ],
    name: "clearZeroLimOrders",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "curPoint",
    outputs: [
      {
        internalType: "int24",
        name: "",
        type: "int24",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "originToken",
        type: "address",
      },
      {
        internalType: "int24",
        name: "point",
        type: "int24",
      },
      {
        internalType: "uint128",
        name: "amount",
        type: "uint128",
      },
    ],
    name: "limitOrder",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "user",
        type: "address",
      },
    ],
    name: "limitOrders",
    outputs: [
      {
        components: [
          {
            internalType: "address",
            name: "originToken",
            type: "address",
          },
          {
            internalType: "address",
            name: "targetToken",
            type: "address",
          },
          {
            internalType: "int24",
            name: "point",
            type: "int24",
          },
        ],
        internalType: "struct TokenExchange.LimitOrderView[]",
        name: "orders",
        type: "tuple[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "originToken",
        type: "address",
      },
      {
        internalType: "uint128",
        name: "amount",
        type: "uint128",
      },
      {
        internalType: "int24",
        name: "startPoint",
        type: "int24",
      },
      {
        internalType: "uint16",
        name: "slipLimit",
        type: "uint16",
      },
      {
        internalType: "address[]",
        name: "feeTaker",
        type: "address[]",
      },
    ],
    name: "marketOrder",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "pairInfo",
    outputs: [
      {
        internalType: "address",
        name: "tokenX",
        type: "address",
      },
      {
        internalType: "address",
        name: "tokenY",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "pointMargin",
    outputs: [
      {
        internalType: "int24",
        name: "",
        type: "int24",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "int24",
        name: "",
        type: "int24",
      },
    ],
    name: "pointOrder",
    outputs: [
      {
        components: [
          {
            internalType: "uint128",
            name: "selling",
            type: "uint128",
          },
          {
            internalType: "uint128",
            name: "unlegacyEarn",
            type: "uint128",
          },
          {
            internalType: "uint128",
            name: "legacyEarn",
            type: "uint128",
          },
          {
            internalType: "uint256",
            name: "accLegacyEarn",
            type: "uint256",
          },
        ],
        internalType: "struct TokenExchange.Order",
        name: "X",
        type: "tuple",
      },
      {
        components: [
          {
            internalType: "uint128",
            name: "selling",
            type: "uint128",
          },
          {
            internalType: "uint128",
            name: "unlegacyEarn",
            type: "uint128",
          },
          {
            internalType: "uint128",
            name: "legacyEarn",
            type: "uint128",
          },
          {
            internalType: "uint256",
            name: "accLegacyEarn",
            type: "uint256",
          },
        ],
        internalType: "struct TokenExchange.Order",
        name: "Y",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "targetToken",
        type: "address",
      },
      {
        internalType: "int24",
        name: "point",
        type: "int24",
      },
      {
        internalType: "address",
        name: "wallet",
        type: "address",
      },
    ],
    name: "queryEarning",
    outputs: [
      {
        internalType: "uint128",
        name: "sold",
        type: "uint128",
      },
      {
        internalType: "uint128",
        name: "earned",
        type: "uint128",
      },
      {
        internalType: "uint128",
        name: "selling",
        type: "uint128",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "startOff",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "totalVolume",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x6080346200013357601f6200332838819003918201601f19168301916001600160401b03831184841017620001385780849260c09460405283398101031262000133576200004d816200014e565b6200005b602083016200014e565b62000069604084016200014e565b9262000078606082016200014e565b608082015190936001600160801b038216929091839003620001335760a00151928360020b8403620001335762000123956001600055620000b93362000163565b4360025560018060a01b0380928160018060a01b0319951685600b541617600b55168360035416176003551690600454161760045560018060801b0319600c541617600c556005549060201b66ffffff00000000169066ffffff0000000019161760055562000163565b60405161317b9081620001ad8239f35b600080fd5b634e487b7160e01b600052604160045260246000fd5b51906001600160a01b03821682036200013357565b600180546001600160a01b039283166001600160a01b0319821681179092559091167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0600080a356fe604060a0815260048036101561001457600080fd5b600090813560e01c90816312c7048714610cce5781631b04562614610c9c57816323f936d91461084d57816335ae39421461082e5781635f81a57c1461080f578163633e13eb146107ec5781636b048c3a1461070b578163715018a6146106af5781638612ccf81461058f5781638da5cb5b14610567578163a9cd94691461046b578163af8eb382146103b1578163be2f798e1461038f578163cf85e95e14610368578163e5f292d114610343578163e9aa0eea14610319578163f11f5a02146102e8578163f2fde38b14610206578163fc2a5b1d146101d6575063fde89598146100fe57600080fd5b346101d357806003193601126101d35733815260206008815282822080549061012682610dc3565b9261013386519485610da1565b82845280840191855280852085925b84841061018f57878787815b815181101561018b5780610181610168610186938561180e565b51866001600160a01b0382511691015160020b906114ab565b6117ff565b61014e565b8280f35b6001908389519161019f83610d85565b6001600160a01b0392838654168152848601549384168382015260029360a01c840b8c820152815201920193019290610142565b80fd5b919050346101d357806003193601126101d357506001600160a01b03806003541691541682519182526020820152f35b839150346102e45760203660031901126102e457610222610d35565b9061022b610e29565b6001600160a01b0380921692831561027b575050600154826001600160a01b0319821617600155167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0600080a380f35b906020608492519162461bcd60e51b8352820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201527f64647265737300000000000000000000000000000000000000000000000000006064820152fd5b8280fd5b828434610315573660031901126101d357610312610304610d35565b61030c610d4b565b9061203d565b80f35b5080fd5b828434610315573660031901126101d357610312610335610d35565b61033d610d4b565b906114ab565b828434610315573660031901126101d35761031261035f610d35565b60243590611822565b82843461031557816003193601126103155760209060ff60055460181c1690519015158152f35b82843461031557816003193601126103155760209060055460020b9051908152f35b839150346102e45760203660031901126102e45735918260020b809303610466578181610100946104649352600760205220916104306103fc60036103f586610ddb565b9501610ddb565b91518094606080916001600160801b0380825116855280602083015116602086015260408201511660408501520151910152565b80516001600160801b0390811660808501526020820151811660a085015260408201511660c08401526060015160e0830152565bf35b600080fd5b828434610315576020806003193601126102e4576001600160a01b039283610491610d35565b16815260088252828120918254906104a882610dc3565b916104b586519384610da1565b8083528183018095855282852085915b838310610523575050505084519481860192828752518093528086019493905b8382106104f25786860387f35b84518051891687528084015189168785015281015160020b86820152606090950194938201936001909101906104e5565b600190858a98969798519161053783610d85565b8c855416835283850154928d84168382015260029360a01c840b8d820152815201920192019190959493956104c5565b8284346103155781600319360112610315576020906001600160a01b03600154169051908152f35b5050346101d357806003193601126101d357338152602091600883528082209283546105ba81610dc3565b946105c784519687610da1565b818652845281842084908387015b83831061066b5750505050825b845181101561065657806105f9610638928761180e565b516001600160a01b03808583015116868301916001600160801b0361062684516002943391860b90611ac5565b5090501661063d575b505050506117ff565b6105e2565b61064d9351169151900b9061203d565b3880808061062f565b50906008610312923385525282205433611822565b6001908587519161067b83610d85565b6001600160a01b0392838654168152848601549384168382015260029360a01c840b8a8201528152019201920191906105d5565b82346101d357806003193601126101d3576106c8610e29565b60006001600160a01b036001546001600160a01b03198116600155167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e08280a380f35b8284346103155760a036600319011261031557610726610d35565b6024356001600160801b038116810361046657604435908160020b8203610466576064359261ffff841684036107e8576084359667ffffffffffffffff88116107e457366023890112156107e4578701359661078d61078489610dc3565b96519687610da1565b87865260209760248988019160051b830101913683116107e057602401905b8282106107c157505050610312959650610f27565b81356001600160a01b03811681036104665781529089019089016107ac565b8880fd5b8680fd5b8580fd5b8284346103155781600319360112610315576005549051602091821c60020b8152f35b8284346103155781600319360112610315576020906006549051908152f35b8284346103155781600319360112610315576020906002549051908152f35b839150346102e45760603660031901126102e457610869610d35565b91610872610d4b565b90604435926001600160801b0380851693848603610c985761089390611fb9565b9560055460ff8160181c16600014610c34575082546001600160a01b03828116911603610be15760055460020b8760020b13610b9e575b6001600160a01b03908882600b5416803b15610315578651631ac6758960e11b81526001600160a01b0384168782019081523360208201523060408201526001600160801b038b166060820152909291839182908490829060800103925af18015610b9457610b81575b508515610b3e57835482821696899695949392918316888103610b3857508260035416935b61096385896128b6565b610978886109728c82876121f3565b946122b9565b61098f85610986818b6124b1565b5091819b61267b565b9783610b2c575b5050506109ed575b505090516001600160801b03948516815293909116602084015250339260020b917f1b36ba4c0e68abe4a9493a6b705902c56f00e745caa4de70f11bc854e5da93bc9080604081015b0390a480f35b33895260209160088352848a20918551610a0681610d85565b8881528185820193168352868101918b60020b9485845280549068010000000000000000821015610b195790610a4191600182018155610e81565b929092610b075790600181610a93969594935116926001600160a01b0319938482541617815501935116908354161782555160020b62ffffff60a01b1982549160a01b62ffffff60a01b169116179055565b3389526008825283892054600019810193908411610af45750338952600982528389206000918252825283812086825290915282902055816109e77f1b36ba4c0e68abe4a9493a6b705902c56f00e745caa4de70f11bc854e5da93bc61099e565b896011602492634e487b7160e01b835252fd5b60248e808a634e487b7160e01b825252fd5b60248f60418b634e487b7160e01b835252fd5b161090508a8080610996565b93610959565b606484602087519162461bcd60e51b8352820152600c60248201527f57524f4e475f414d4f554e5400000000000000000000000000000000000000006044820152fd5b610b8d90999199610d5b565b9789610934565b86513d8c823e3d90fd5b606483602086519162461bcd60e51b8352820152600c60248201527f47545f4355525f505249434500000000000000000000000000000000000000006044820152fd5b60055460020b8760020b12156108ca57606483602086519162461bcd60e51b8352820152600c60248201527f4c545f4355525f505249434500000000000000000000000000000000000000006044820152fd5b63010000009062ffffff89169063ffffffff191617176005557fd4f5e27df9cb5ac16696d501c6a53baa5aa6bea8ace7a2794aed05cff36b4413608085516001600160a01b03841681528960020b60208201528a87820152426060820152a16108ca565b8780fd5b82843461031557806003193601126103155761031290610cbd610304610d35565b338352600860205282205433611822565b82843461031557606036600319011261031557610ce9610d35565b610cf1610d4b565b90604435936001600160a01b03851685036101d3575092610d1491606094611ac5565b83929351936001600160801b03928380921686521660208501521690820152f35b600435906001600160a01b038216820361046657565b602435908160020b820361046657565b67ffffffffffffffff8111610d6f57604052565b634e487b7160e01b600052604160045260246000fd5b6060810190811067ffffffffffffffff821117610d6f57604052565b90601f8019910116810190811067ffffffffffffffff821117610d6f57604052565b67ffffffffffffffff8111610d6f5760051b60200190565b906040516080810181811067ffffffffffffffff821117610d6f5760405260606002829480546001600160801b0390818116865260801c602086015260018201541660408501520154910152565b6001600160a01b03600154163303610e3d57565b606460405162461bcd60e51b815260206004820152602060248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e65726044820152fd5b8054821015610e9d5760005260206000209060011b0190600090565b634e487b7160e01b600052603260045260246000fd5b600291820b910b0390627fffff198212627fffff831317610ed057565b634e487b7160e01b600052601160045260246000fd5b9190916001600160801b0380809416911601918211610ed057565b91908201809211610ed057565b6001600160801b039182169082160391908211610ed057565b93949091929460006080526000926001600160a01b03600b541691823b1561046657604051631ac6758960e11b8152608080516001600160a01b038a1660048401523360248401523060448401526001600160801b0385166064840152905191949091859160849183915af191821561121357610fbb93610fae936113fd575b5087611c8e565b9360055460020b90610eb3565b608051600282900b9081126113e45750949291925b608051935b62ffffff871661ffff83160362ffffff81116112c25762ffffff166001600160801b03861610156113a0576001600160801b0384161561134857600554600281900b948592611023846129dd565b966001600160a01b0360045416806001600160a01b038c16146000146112da57505083608051526007602052608051966110928360408a20926003840193809b89600052339052600a602052604060805120896000526020526001600160801b0380600c541691541690612f45565b6003546001600160a01b031696909591939190627fffff602083901c60020b8201908113627fffff19909112176112c257879160201c60020b8101945b8b546001600160801b0316906001600160801b03161015976110f0916128b6565b8b8660055460020b611101926121f3565b5060055460020b611112908d6122b9565b60055460020b9061112381836124b1565b509161112e9361267b565b61113791610ee6565b9761114995611226575b505050610f0e565b936001600160801b03600c54166001600160801b038616111561118a575b62ffffff61118061ffff928260055460201c1690610ee6565b9594915050610fd5565b936001600160a01b03600b541690813b1561122057604051631ac6758960e11b8152608080516001600160a01b038a1660048401523060248401523360448401526001600160801b0393909316606483015251909283916084918391905af18015611213576111fe575b5060805193611167565b61120790610d5b565b60805180156111f45780fd5b6040513d608051823e3d90fd5b60805180fd5b806001600160801b0391548060801c9183600192838301948554958361124e83828a16610ee6565b166001600160801b031980981617905561126d60028501918254610f01565b90551690558354918260801c918501908154908561128d85828516610ee6565b1691161790556112a260028501918254610f01565b905516905562ffffff19600554169062ffffff1617600555388080611141565b634e487b7160e01b6080515260116004526024608051fd5b93916113429282608097939751526007602052608051926113306040852094600386019c8d918b600052339052600a6020526040608051208b600052602052886001600160801b0380600c541693541692612f45565b95909798899360201c60020b90610eb3565b946110cf565b604080516001600160801b039586168152949091166020850152919550506001600160a01b0393909316927fc489dd1442ec1b08fb3b4a8339b7f96fd0f85f9b9a42d702819c1c78a3d11fc49250819081015b0390a2565b606460405162461bcd60e51b815260206004820152601160248201527f4f55545f4f465f534c49505f4c494d49540000000000000000000000000000006044820152fd5b9050627fffff198114610ed05760000394929192610fd0565b61140690610d5b565b38610fa7565b1561141357565b606460405162461bcd60e51b815260206004820152600f60248201527f4f524445525f4e4f545f455849535400000000000000000000000000000000006044820152fd5b8054801561149557600019019061146e8282610e81565b61147f576001816000809355015555565b634e487b7160e01b600052600060045260246000fd5b634e487b7160e01b600052603160045260246000fd5b906114b590611fb9565b9060003381526009602052604081208360020b8252602052604081206001600160a01b03831682526020526040812054600019916114f58383141561140c565b3381526008602052604081209161150c8184610e81565b509161153b6001600160a01b03600185015416611529818a6128b6565b611533818a6124b1565b50918a61267b565b5080946001600160a01b03600454166001600160a01b038816146000146117ad578760020b82526007602052604082206003810190338452600a602052604084208a60020b85526020526002604085200190338552600a602052604085208b60020b86526020526001600260408720925b015491015410156116e9575b505084548181019081116116d5576001600160a01b036001938796959360406115e584956116909b610e81565b509233815260096020528181209688850197885460a01c60020b600052602052826000208686541660005260205282600020553381526009602052208c60020b6000526020526040600020838c1660005260205260406000205561166b845460a01c60020b8688019062ffffff60a01b1982549160a01b62ffffff60a01b169116179055565b5416916001600160a01b03199283865416178555541690828401541617910155611457565b6001600160801b03604051911681527f807645a5ce4bf61d15b017a8b4178dedd7ff00eb9d90b15bbd5c981252e4fe7560206001600160a01b03339560020b941692a4565b602483634e487b7160e01b81526011600452fd5b9096506001600160801b03819392935416968054906001600160801b036117128a828516610f0e565b166001600160801b031980931617905581541690556001600160a01b03600b5416803b1561031557604051631ac6758960e11b81526001600160a01b03891660048201523060248201523360448201526001600160801b03881660648201529082908290608490829084905af180156117a257611793575b809291926115b8565b61179c90610d5b565b3861178a565b6040513d84823e3d90fd5b8760020b825260076020526040822060038101338452600a602052604084208a60020b85526020526040842090338552600a602052604085208b60020b865260205260016002806040882001926115ac565b6000198114610ed05760010190565b8051821015610e9d5760209160051b010190565b906001600160a01b03918281169260009284845260206008815260409061184e828720938454906129cd565b9461185886610dc3565b9561186584519788610da1565b808752601f1961187482610dc3565b0136848901378791885b8281106119f157505050805b6118ba57505050505050807fc18cced4ef47e8fff8412a99bc09b8afb2f057f42c940accd159af4f5452985891a2565b6000198181018281116119dd576118d1908861180e565b516118dc8187610e81565b509186548181019081116119c95791888b61197f888f84968c6119028f9a859c9b610e81565b509583815260099384865282822094600191828a019b8c549860a09860029a8a1c8b0b87528152868620908d8d54168752528585205583528d52828220908c019c8d54861c870b8352528d82822090898d541683525220558554901c900b879062ffffff60a01b1982549160a01b62ffffff60a01b169116179055565b5416926001600160a01b031993848254161790555416908254161790556119a584611457565b80156119b557600019018061188a565b602487634e487b7160e01b81526011600452fd5b60248b634e487b7160e01b81526011600452fd5b602489634e487b7160e01b81526011600452fd5b611a13826001611a01848b610e81565b5001548a8160a01c60020b9116611ac5565b6001600160801b0392831615929183611a6f575b5082611a64575b5050611a43575b611a3e906117ff565b61187e565b92611a5c8185611a56611a3e948d61180e565b526117ff565b939050611a35565b161590503880611a2e565b821615925038611a27565b15611a8157565b606460405162461bcd60e51b815260206004820152600a60248201527f57524f4e475f534f4c44000000000000000000000000000000000000000000006044820152fd5b9291906001600160a01b0390816003541682861690811480918115611c62575b5015611c1e57611af6600092611fb9565b918115611be15750600282810b60008181526007602090815260408083209789168352600a8252808320938352929052209490850193905b6001600160801b0380955416976000808a986001600287015491015410600014611bc857505092611bab9592611b6c8693611ba596611b7a986125a6565b509690969a85881614611a7a565b611b856000936129dd565b9115611bae57611b9e93600c5416905460801c90612f45565b9092610ee6565b94610ee6565b91565b91611bc293600c5416925460801c92612f45565b92610ee6565b95611bab9794919a9350611ba5959250611b85906129dd565b600283810b808352600760209081526040938490209688166000908152600a82528481209281529190529190912090810194909360030190611b2e565b606460405162461bcd60e51b815260206004820152600d60248201527f494e56414c49445f544f4b454e000000000000000000000000000000000000006044820152fd5b905083600454161438611ae5565b9190916001600160801b0380809416911602918216918203610ed057565b909291600b5491600091604051937f1065cf7300000000000000000000000000000000000000000000000000000000855283600486015283856024816001600160a01b0385165afa948515611fae578495611f0b575b5084518015908115611ef3575b50611eec57845115611ed857620186a06001600160801b03611d19816020890151168a611c70565b1604906001600160a01b03600154166001600160a01b0382163b156107e857604051631ac6758960e11b81526001600160a01b03868116600483015230602483015291821660448201526001600160801b0384166064820152918691839160849183918591165af18015611ecd57611eb8575b50611d979087610f0e565b936001945b8151861015611eaf576001600160801b03611db7878461180e565b51169086600019810111611e9b57620186a06001600160801b03611df36001600160a01b03611dea6000198c018961180e565b5116948c611c70565b1604916001600160a01b03600b541690813b15610c9857604051631ac6758960e11b81526001600160a01b0388811660048301523060248301529190911660448201526001600160801b03841660648201529087908290608490829084905af18015611e9057908791611e7c575b5050611e7691611e7091610f0e565b956117ff565b94611d9c565b611e8590610d5b565b6107e8578538611e61565b6040513d89823e3d90fd5b602486634e487b7160e01b81526011600452fd5b96505050505050565b93611ec6611d979295610d5b565b9390611d8c565b6040513d87823e3d90fd5b602484634e487b7160e01b81526032600452fd5b5050505050565b835160001982019250908211611e9b57141538611cf1565b9094503d8085833e611f1d8183610da1565b81019060209081818403126107e85780519067ffffffffffffffff82116107e457019180601f840112156107e8578251611f5681610dc3565b93611f646040519586610da1565b818552838086019260051b820101928311610c98578301905b828210611f8f57505050509338611ce4565b81516001600160801b03811681036107e0578152908301908301611f7d565b6040513d86823e3d90fd5b9060055460201c60020b9160020b91801561202757627fffff198314600019821416610ed0578080840560020b028060020b908103610ed057809382600082129182612018575b505061200a575050565b612015929350610eb3565b90565b0760020b151590508238612000565b634e487b7160e01b600052601260045260246000fd5b9061204790611fb9565b9060009133835260209260098452604092838220918360020b928382528652848120916001600160a01b03809116928383528752858220546000199461208f8683141561140c565b33845260088952878420956120a48388610e81565b509460018601966120cf868954169a6120bd8c826128b6565b6120c78c826124b1565b9d909261267b565b99612133575b5050505050505050506001600160801b0316156120f0575050565b60649250519062461bcd60e51b82526004820152600b60248201527f4e4f5f4541524e494e47530000000000000000000000000000000000000000006044820152fd5b88548381019081116116d557928b879592936121e59a98948f6121626001600160801b039f9e9c9a988d610e81565b5033808552600980845286862060018401805460a01c60020b885290855287872084548c16885285528787209b909b5590855282528484209684529581528383209183525220558254865462ffffff60a01b191662ffffff60a01b9091161786555416926001600160a01b03199384825416179055541690825416179055611457565b9038808080808080806120d5565b9291926000906001600160a01b038060045416911614600014612287575060020b80600052600760205260036040600020019033600052600a6020526040600020906000526020526002604060002001905b80546001600160801b03918261225d87828516610ee6565b166001600160801b031980931617905582549161227f81841696871597610ee6565b169116179055565b9060409060020b918281526007602052209033600052600a602052604060002090600052602052604060002090612245565b6000906122c5836129dd565b916001600160a01b0380600454169083161460001461245857506123b96123d88460020b9384600052600760205261233960406000206003810192819733600052600a60205260406000209060005260205260026040600020016001600160801b038080600c541692541693541690612f45565b9390809490965b8354956001600160801b03968761235985828416610f0e565b166001600160801b031980921617865561239a61237a83855460801c610ee6565b84546001600160801b031660809190911b6001600160801b031916178455565b876123a9845493828516610f0e565b169116179055825460801c610ee6565b6001600160801b036001600160801b031983549260801b169116179055565b821691826123e7575b50505050565b604080516001600160a01b0393909316835260029490940b60208301526001600160801b03169281019290925242606083015261244c917fd4f5e27df9cb5ac16696d501c6a53baa5aa6bea8ace7a2794aed05cff36b441390608090a1600654610f01565b600655388080806123e1565b6123d86123b9916124a88660020b9586835260076020526040808420936003850198338252600a60205282822090825260205220906001600160801b038080600c54169354169089541692612f45565b93908096612340565b916000906000926001600160a01b03806003541691161480600014612575578460020b9081855260076020526040852091338652600a6020526040862090865260205260026040862001955b6001600160801b038097541695861561256757509061251c86926129dd565b901561254a576125369287600c5416905460801c90612f45565b939093945b85161461254457565b60019150565b61255f929187600c5416925460801c92612f45565b93909461253b565b965086955060019450505050565b8460020b9081855260076020526003604086200191338652600a6020526040862090865260205260408520956124fd565b929190916000916000936001600160a01b0390818060035416911614908160001461264a578660020b9081875260076020526040872093168652600a6020526040862090865260205260026040862001955b6001600160801b038097541695861561256757509061261786926129dd565b9015612633576125369287600181600c54169201541690612f45565b61255f929187600181600c54169401541692612f45565b8660020b9081875260076020526003604088200193168652600a6020526040862090865260205260408520956125f8565b9192612717949360006001600160a01b03908160035416828616146000146128625750600285810b6000818152600760209081526040808320338452600a835281842094845293909152902093916001919085015b6127016126e188845460801c610f0e565b83546001600160801b031660809190911b6001600160801b031916178355565b8054936001600160801b039b8c91828716610f0e565b166001600160801b03198095161790558454948a8660801c9616905501908154908961274586828516610f0e565b169116179055866127568385610ee6565b166127d2575b5061276691610ee6565b938416612771575050565b604080516001600160a01b03909216825260029290920b60208201526001600160801b0384169181019190915242606082015233907f3a193c6b30ee24289ff8bcf42f8c22a482349adde48a590f8867a0f012f1a3fb90806080810161139b565b600b5416916127e18282610ee6565b92803b1561046657604051631ac6758960e11b81526001600160a01b03861660048201523060248201523360448201526001600160801b039490941660648501526000908490608490829084905af19283156128565761276693612847575b509161275c565b61285090610d5b565b38612840565b6040513d6000823e3d90fd5b916001600360408860020b958681526007602052200133600052600a60205260406000208560005260205260406000209433600052600a6020526040600020906000526020526002604060002001946126d0565b9060006001600160a01b0380600354169083161460001461297a5750600282810b6000818152600760209081526040808320338452600a8352818420948452939091529020928383019290915b019283549460018201958654106000146129725761292f612951916001600160801b03199433916125a6565b5083546001600160801b031660809190911b6001600160801b03191617909255565b61296a8354916001600160801b03808416911614611a7a565b169055549055565b505050505050565b600360408460020b92838152600760205220019133600052600a60205260406000208260005260205260406000209133600052600a60205260406000209060005260205260028060406000200193612903565b8181106129d8575090565b905090565b60020b6000811215612f3f577f80000000000000000000000000000000000000000000000000000000000000008114610ed057806000035b620d89e88111612efb576001811615612ed25770ffffffffffffffffffffffffffffffffff6ffffcb933bd6fad37aa2d162d1a5940015b169160028216612ea6575b600491828116612e7a575b60088116612e4e575b60108116612e22575b60208116612df6575b60408116612dca575b608090818116612d9f575b6101008116612d74575b6102008116612d49575b6104008116612d1e575b6108008116612cf3575b6110008116612cc8575b6120008116612c9d575b6140008116612c72575b6180008116612c47575b620100008116612c1c575b620200008116612bf2575b620400008116612bb4575b6208000016612b75575b50600012612b4d575b50612b406001600160a01b039163ffffffff811615600014612b445760ff60005b169060201c610f01565b1690565b60ff6001612b36565b8115612b60575060001904612b40612b15565b601290634e487b7160e01b6000525260246000fd5b6b048a170391f7dc42444e8fa293919391828102928184041490151715612b9f571c916000612b0c565b601183634e487b7160e01b6000525260246000fd5b936d2216e584f5fa1ea926041bedfe9890818102918183041490151715612bdd57811c93612b02565b601184634e487b7160e01b6000525260246000fd5b936e5d6af8dedb81196699c329225ee60490818102918183041490151715612bdd57811c93612af7565b936f09aa508b5b7a84e1c677de54f3e99bc990818102918183041490151715612bdd57811c93612aec565b936f31be135f97d08fd981231505542fcfa690818102918183041490151715612bdd57811c93612ae1565b936f70d869a156d2a1b890bb3df62baf32f790818102918183041490151715612bdd57811c93612ad7565b936fa9f746462d870fdf8a65dc1f90e061e590818102918183041490151715612bdd57811c93612acd565b936fd097f3bdfd2022b8845ad8f792aa582590818102918183041490151715612bdd57811c93612ac3565b936fe7159475a2c29b7443b29c7fa6e889d990818102918183041490151715612bdd57811c93612ab9565b936ff3392b0822b70005940c7a398e4b70f390818102918183041490151715612bdd57811c93612aaf565b936ff987a7253ac413176f2b074cf7815e5490818102918183041490151715612bdd57811c93612aa5565b936ffcbe86c7900a88aedcffc83b479aa3a490818102918183041490151715612bdd57811c93612a9b565b936ffe5dee046a99a2a811c461f1969c305390818102918183041490151715612bdd57811c93612a91565b926fff2ea16466c96a3843ec78b326b5286190818102918183041490151715612b9f5760801c92612a86565b926fff973b41fa98c081472e6896dfb254c090818102918183041490151715612b9f5760801c92612a7d565b926fffcb9843d60f6159c9db58835c92664490818102918183041490151715612b9f5760801c92612a74565b926fffe5caca7e10e4e61c3624eaa0941cd090818102918183041490151715612b9f5760801c92612a6b565b926ffff2e50f5f656932ef12357cf3c7fdcc90818102918183041490151715612b9f5760801c92612a62565b916ffff97272373d413259a46990580e213a90818102918183041490151715610ed05760801c91612a57565b70ffffffffffffffffffffffffffffffffff700100000000000000000000000000000000612a4c565b606460405162461bcd60e51b815260206004820152600160248201527f54000000000000000000000000000000000000000000000000000000000000006044820152fd5b80612a15565b6001600160801b03808316956001600160a01b03909416949291612f7286612f6d818a613026565b613026565b92828416809403612fe2578396838616809511612fd8575b612fa081612f9b8693848c16613108565b613108565b169783612fad848b610ee6565b161015612fce575b50612fc09086610ee6565b161015612fca5750565b9150565b9650612fc0612fb5565b9496508694612f8a565b606460405162461bcd60e51b815260206004820152600460248201527f43313238000000000000000000000000000000000000000000000000000000006044820152fd5b600019828209908281029283808410930392808403931461306b576c010000000000000000000000009183831115610466570990828211900360a01b910360601c1790565b50505060601c90565b906c0100000000000000000000000090600019828409928060601b928380861095039480860395146130fa5784831115610466578291098160018119011680920460028082600302188083028203028083028203028083028203028083028203028083028203028092029003029360018380600003040190848311900302920304170290565b505080925015610466570490565b91906131148184613074565b928115612027576c01000000000000000000000000900961313157565b9060001981101561046657612015906117ff56fea2646970667358221220c0ac3b9c12c5e146e7e1bdedc874cd0d9bc12e471c79d547c8827231e9c0c30064736f6c63430008140033";

type TokenExchangeConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: TokenExchangeConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class TokenExchange__factory extends ContractFactory {
  constructor(...args: TokenExchangeConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    bank: PromiseOrValue<string>,
    tX: PromiseOrValue<string>,
    tY: PromiseOrValue<string>,
    owner: PromiseOrValue<string>,
    tinyAmountThresh: PromiseOrValue<BigNumberish>,
    margin: PromiseOrValue<BigNumberish>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<TokenExchange> {
    return super.deploy(
      bank,
      tX,
      tY,
      owner,
      tinyAmountThresh,
      margin,
      overrides || {}
    ) as Promise<TokenExchange>;
  }
  override getDeployTransaction(
    bank: PromiseOrValue<string>,
    tX: PromiseOrValue<string>,
    tY: PromiseOrValue<string>,
    owner: PromiseOrValue<string>,
    tinyAmountThresh: PromiseOrValue<BigNumberish>,
    margin: PromiseOrValue<BigNumberish>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(
      bank,
      tX,
      tY,
      owner,
      tinyAmountThresh,
      margin,
      overrides || {}
    );
  }
  override attach(address: string): TokenExchange {
    return super.attach(address) as TokenExchange;
  }
  override connect(signer: Signer): TokenExchange__factory {
    return super.connect(signer) as TokenExchange__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): TokenExchangeInterface {
    return new utils.Interface(_abi) as TokenExchangeInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): TokenExchange {
    return new Contract(address, _abi, signerOrProvider) as TokenExchange;
  }
}
