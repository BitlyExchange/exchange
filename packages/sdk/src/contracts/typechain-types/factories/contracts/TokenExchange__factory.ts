/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Signer,
  utils,
  Contract,
  ContractFactory,
  BigNumberish,
  Overrides,
} from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../common";
import type {
  TokenExchange,
  TokenExchangeInterface,
} from "../../contracts/TokenExchange";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "bank",
        type: "address",
      },
      {
        internalType: "address",
        name: "tX",
        type: "address",
      },
      {
        internalType: "address",
        name: "tY",
        type: "address",
      },
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        internalType: "uint128",
        name: "tinyAmountThresh",
        type: "uint128",
      },
      {
        internalType: "int24",
        name: "margin",
        type: "int24",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "user",
        type: "address",
      },
    ],
    name: "CacheCleared",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "targetToken",
        type: "address",
      },
      {
        indexed: false,
        internalType: "int24",
        name: "point",
        type: "int24",
      },
      {
        indexed: false,
        internalType: "uint128",
        name: "earning",
        type: "uint128",
      },
      {
        indexed: true,
        internalType: "address",
        name: "wallet",
        type: "address",
      },
    ],
    name: "EarningClaimed",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "originToken",
        type: "address",
      },
      {
        indexed: true,
        internalType: "int24",
        name: "point",
        type: "int24",
      },
      {
        indexed: false,
        internalType: "uint128",
        name: "refund",
        type: "uint128",
      },
      {
        indexed: true,
        internalType: "address",
        name: "wallet",
        type: "address",
      },
    ],
    name: "LimitOrderCanceled",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "token",
        type: "address",
      },
      {
        indexed: true,
        internalType: "int24",
        name: "point",
        type: "int24",
      },
      {
        indexed: false,
        internalType: "uint128",
        name: "amount",
        type: "uint128",
      },
      {
        indexed: false,
        internalType: "uint128",
        name: "earning",
        type: "uint128",
      },
      {
        indexed: true,
        internalType: "address",
        name: "wallet",
        type: "address",
      },
    ],
    name: "LimitOrderPlaced",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "originToken",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint128",
        name: "amount",
        type: "uint128",
      },
      {
        indexed: false,
        internalType: "uint128",
        name: "earning",
        type: "uint128",
      },
    ],
    name: "MarketOrderCompleted",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "originToken",
        type: "address",
      },
      {
        indexed: false,
        internalType: "int24",
        name: "point",
        type: "int24",
      },
      {
        indexed: false,
        internalType: "uint128",
        name: "amount",
        type: "uint128",
      },
    ],
    name: "Swapped",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "originToken",
        type: "address",
      },
      {
        internalType: "int24",
        name: "point",
        type: "int24",
      },
    ],
    name: "_claimEarningInternal",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "cancelAllLimitOrders",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "originToken",
        type: "address",
      },
      {
        internalType: "int24",
        name: "point",
        type: "int24",
      },
    ],
    name: "cancelLimitOrder",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "claimAllEarnings",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "originToken",
        type: "address",
      },
      {
        internalType: "int24",
        name: "point",
        type: "int24",
      },
    ],
    name: "claimEarning",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "user",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "endIndex",
        type: "uint256",
      },
    ],
    name: "clearZeroLimOrders",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "curPoint",
    outputs: [
      {
        internalType: "int24",
        name: "",
        type: "int24",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "originToken",
        type: "address",
      },
      {
        internalType: "int24",
        name: "point",
        type: "int24",
      },
      {
        internalType: "uint128",
        name: "amount",
        type: "uint128",
      },
      {
        internalType: "address",
        name: "holder",
        type: "address",
      },
      {
        internalType: "address",
        name: "referral",
        type: "address",
      },
    ],
    name: "limitOrder",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "user",
        type: "address",
      },
    ],
    name: "limitOrders",
    outputs: [
      {
        components: [
          {
            internalType: "address",
            name: "originToken",
            type: "address",
          },
          {
            internalType: "address",
            name: "targetToken",
            type: "address",
          },
          {
            internalType: "int24",
            name: "point",
            type: "int24",
          },
        ],
        internalType: "struct TokenExchange.LimitOrderView[]",
        name: "orders",
        type: "tuple[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "originToken",
        type: "address",
      },
      {
        internalType: "uint128",
        name: "amount",
        type: "uint128",
      },
      {
        internalType: "int24",
        name: "startPoint",
        type: "int24",
      },
      {
        internalType: "uint16",
        name: "slipLimit",
        type: "uint16",
      },
      {
        internalType: "address",
        name: "holder",
        type: "address",
      },
      {
        internalType: "address",
        name: "referral",
        type: "address",
      },
    ],
    name: "marketOrder",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "pairInfo",
    outputs: [
      {
        internalType: "address",
        name: "tokenX",
        type: "address",
      },
      {
        internalType: "address",
        name: "tokenY",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "pointMargin",
    outputs: [
      {
        internalType: "int24",
        name: "",
        type: "int24",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "int24",
        name: "",
        type: "int24",
      },
    ],
    name: "pointOrder",
    outputs: [
      {
        components: [
          {
            internalType: "uint128",
            name: "selling",
            type: "uint128",
          },
          {
            internalType: "uint128",
            name: "unlegacyEarn",
            type: "uint128",
          },
          {
            internalType: "uint128",
            name: "legacyEarn",
            type: "uint128",
          },
          {
            internalType: "uint256",
            name: "accLegacyEarn",
            type: "uint256",
          },
        ],
        internalType: "struct TokenExchange.Order",
        name: "X",
        type: "tuple",
      },
      {
        components: [
          {
            internalType: "uint128",
            name: "selling",
            type: "uint128",
          },
          {
            internalType: "uint128",
            name: "unlegacyEarn",
            type: "uint128",
          },
          {
            internalType: "uint128",
            name: "legacyEarn",
            type: "uint128",
          },
          {
            internalType: "uint256",
            name: "accLegacyEarn",
            type: "uint256",
          },
        ],
        internalType: "struct TokenExchange.Order",
        name: "Y",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "targetToken",
        type: "address",
      },
      {
        internalType: "int24",
        name: "point",
        type: "int24",
      },
    ],
    name: "queryEarning",
    outputs: [
      {
        internalType: "uint128",
        name: "sold",
        type: "uint128",
      },
      {
        internalType: "uint128",
        name: "earned",
        type: "uint128",
      },
      {
        internalType: "uint128",
        name: "selling",
        type: "uint128",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "startOff",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "totalVolume",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x6080346200012f57601f6200326a38819003918201601f19168301916001600160401b03831184841017620001345780849260c0946040528339810103126200012f576200004d816200014a565b6200005b602083016200014a565b62000069604084016200014a565b9262000078606082016200014a565b608082015190936001600160801b0382169290918390036200012f5760a00151928360020b84036200012f576200011f956001600055620000b9336200015f565b60018060a01b0380928160018060a01b0319951685600a541617600a55168360025416176002551690600354161760035560018060801b0319600b541617600b556004549060201b66ffffff00000000169066ffffff000000001916176004556200015f565b6040516130c19081620001a98239f35b600080fd5b634e487b7160e01b600052604160045260246000fd5b51906001600160a01b03821682036200012f57565b600180546001600160a01b039283166001600160a01b0319821681179092559091167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0600080a356fe604060a0815260048036101561001457600080fd5b600090813560e01c9081630dc3510e14610c385781631b04562614610c065781633702e0a6146107b35781633e199360146107415781635f81a57c14610722578163633e13eb146106fe578163715018a6146106a25781638612ccf8146105835781638da5cb5b1461055b578163a9cd94691461045f578163af8eb382146103a5578163be2f798e14610383578163cf85e95e1461035d578163e5f292d114610338578163e9aa0eea1461030e578163f11f5a02146102dd578163f2fde38b146101fb57508063fc2a5b1d146101cb5763fde89598146100f357600080fd5b346101c857806003193601126101c85733815260206007815282822080549061011b82611a8f565b9261012886519485610d09565b82845280840191855280852085925b84841061018457878787815b8151811015610180578061017661015d61017b9385611a7b565b51866001600160a01b0382511691015160020b90611718565b611a6c565b610143565b8280f35b6001908389519161019483610ced565b6001600160a01b0392838654168152848601549384168382015260029360a01c840b8c820152815201920193019290610137565b80fd5b50346101c857806003193601126101c857506001600160a01b038060025416906003541682519182526020820152f35b839150346102d95760203660031901126102d957610217610c87565b90610220610d79565b6001600160a01b03809216928315610270575050600154826001600160a01b0319821617600155167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0600080a380f35b906020608492519162461bcd60e51b8352820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201527f64647265737300000000000000000000000000000000000000000000000000006064820152fd5b8280fd5b82843461030a573660031901126101c8576103076102f9610c87565b610301610cb3565b90611fac565b80f35b5080fd5b82843461030a573660031901126101c85761030761032a610c87565b610332610cb3565b90611718565b82843461030a573660031901126101c857610307610354610c87565b60243590611aa7565b8383346101c857806003193601126101c8575060ff6020925460181c1690519015158152f35b839150346102d957826003193601126102d957602092505460020b9051908152f35b839150346102d95760203660031901126102d95735918260020b80930361045a578181610100946104589352600660205220916104246103f060036103e986610d2b565b9501610d2b565b91518094606080916001600160801b0380825116855280602083015116602086015260408201511660408501520151910152565b80516001600160801b0390811660808501526020820151811660a085015260408201511660c08401526060015160e0830152565bf35b600080fd5b82843461030a576020806003193601126102d9576001600160a01b039283610485610c87565b168152600782528281209182549061049c82611a8f565b916104a986519384610d09565b8083528183018095855282852085915b838310610517575050505084519481860192828752518093528086019493905b8382106104e65786860387f35b84518051891687528084015189168785015281015160020b86820152606090950194938201936001909101906104d9565b600190858a98969798519161052b83610ced565b8c855416835283850154928d84168382015260029360a01c840b8d820152815201920192019190959493956104b9565b82843461030a578160031936011261030a576020906001600160a01b03600154169051908152f35b5050346101c857806003193601126101c857338152602091600783528082209283546105ae81611a8f565b946105bb84519687610d09565b818652845281842084908387015b83831061065e5750505050825b845181101561064957806105ed61062b9287611a7b565b516001600160a01b03808583015116868301916001600160801b03610619845193600294850b90611d46565b50905016610630575b50505050611a6c565b6105d6565b6106409351169151900b90611fac565b38808080610622565b50906007610307923385525282205433611aa7565b6001908587519161066e83610ced565b6001600160a01b0392838654168152848601549384168382015260029360a01c840b8a8201528152019201920191906105c9565b82346101c857806003193601126101c8576106bb610d79565b60006001600160a01b036001546001600160a01b03198116600155167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e08280a380f35b839150346102d957826003193601126102d9576020925054905190821c60020b8152f35b82843461030a578160031936011261030a576020906005549051908152f35b82346101c85760c03660031901126101c85761075b610c87565b6024356001600160801b038116810361045a576044358060020b810361045a5760643561ffff811681036107af57610791610c9d565b9160a435936001600160a01b038516850361045a5761030795610e77565b8480fd5b839150346102d95760a03660031901126102d9576107cf610c87565b916107d8610cb3565b90604435926001600160801b0380851693848603610c02576001600160a01b039060643582811603610bfe5761081690610810610c9d565b50611f28565b96835460ff8160181c16600014610ba85750816003541682821614600014610b5657835460020b8860020b13610b13575b8882600a5416803b1561030a578651631ac6758960e11b81526001600160a01b0384168782019081523360208201523060408201526001600160801b038b166060820152909291839182908490829060800103925af18015610b0957610af6575b508515610ab35760035482821696899695949392918316888103610aad57508260025416935b6108d88589612812565b6108ed886108e78c8287612162565b94612228565b610904856108fb818b61241a565b5091819b6125de565b9783610aa1575b505050610962575b505090516001600160801b03948516815293909116602084015250339260020b917f1b36ba4c0e68abe4a9493a6b705902c56f00e745caa4de70f11bc854e5da93bc9080604081015b0390a480f35b33895260209160078352848a2091855161097b81610ced565b8881528185820193168352868101918b60020b9485845280549068010000000000000000821015610a8e57906109b691600182018155610dd1565b929092610a7c5790600181610a08969594935116926001600160a01b0319938482541617815501935116908354161782555160020b62ffffff60a01b1982549160a01b62ffffff60a01b169116179055565b3389526007825283892054600019810193908411610a6957503389526008825283892060009182528252838120868252909152829020558161095c7f1b36ba4c0e68abe4a9493a6b705902c56f00e745caa4de70f11bc854e5da93bc610913565b896011602492634e487b7160e01b835252fd5b60248e808a634e487b7160e01b825252fd5b60248f60418b634e487b7160e01b835252fd5b161090508a808061090b565b936108ce565b606484602087519162461bcd60e51b8352820152600c60248201527f57524f4e475f414d4f554e5400000000000000000000000000000000000000006044820152fd5b610b0290999199610cc3565b97896108a8565b86513d8c823e3d90fd5b606484602087519162461bcd60e51b8352820152600c60248201527f47545f4355525f505249434500000000000000000000000000000000000000006044820152fd5b835460020b8860020b121561084757606484602087519162461bcd60e51b8352820152600c60248201527f4c545f4355525f505249434500000000000000000000000000000000000000006044820152fd5b63010000009062ffffff8a169063ffffffff1916171784557fc5694611e5eb7da7cf71b4805c895d2f63437c40e24fc1a538c555d16220956c6060865184841681528a60020b60208201528b88820152a1610847565b8880fd5b8780fd5b82843461030a578060031936011261030a5761030790610c276102f9610c87565b338352600760205282205433611aa7565b82843461030a578060031936011261030a57606090610c66610c58610c87565b610c60610cb3565b90611d46565b83929351936001600160801b03928380921686521660208501521690820152f35b600435906001600160a01b038216820361045a57565b608435906001600160a01b038216820361045a57565b602435908160020b820361045a57565b67ffffffffffffffff8111610cd757604052565b634e487b7160e01b600052604160045260246000fd5b6060810190811067ffffffffffffffff821117610cd757604052565b90601f8019910116810190811067ffffffffffffffff821117610cd757604052565b906040516080810181811067ffffffffffffffff821117610cd75760405260606002829480546001600160801b0390818116865260801c602086015260018201541660408501520154910152565b6001600160a01b03600154163303610d8d57565b606460405162461bcd60e51b815260206004820152602060248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e65726044820152fd5b8054821015610ded5760005260206000209060011b0190600090565b634e487b7160e01b600052603260045260246000fd5b600291820b910b0390627fffff198212627fffff831317610e2057565b634e487b7160e01b600052601160045260246000fd5b9190916001600160801b0380809416911601918211610e2057565b91908201809211610e2057565b6001600160801b039182169082160391908211610e2057565b949295919360006080526000936001600160a01b03600a5416803b1561045a57604051631ac6758960e11b8152608080516001600160a01b038b1660048401523360248401523060448401526001600160801b0387166064840152905191929091839160849183915af180156113d35761166a575b506001600160a01b03600a5416926040517f95d12000000000000000000000000000000000000000000000000000000000008152602081600481885afa80156113d357610f506001600160801b0391620186a0936080519161164b575b5084611f0a565b1604916040517fa886e5f9000000000000000000000000000000000000000000000000000000008152602081600481895afa80156113d357610fa96001600160801b0391620186a0936080519161162c575b5085611f0a565b1604936040517f343dfb7e0000000000000000000000000000000000000000000000000000000081526020816004818a5afa80156113d3576110026001600160801b0391620186a093608051916115fd575b5086611f0a565b1604956001600160a01b036001541690803b156113e057604051631ac6758960e11b8152608080516001600160a01b038f811660048501523060248501529490941660448301526001600160801b03881660648301525190929183916084918391905af180156113d3576115e8575b506001600160a01b03600a5416803b156113e057604051631ac6758960e11b8152608080516001600160a01b038e811660048501523060248501529490941660448301526001600160801b03881660648301525190929183916084918391905af180156113d3576115d3575b506001600160a01b03600a5416803b156113e057604051631ac6758960e11b8152608080516001600160a01b038d811660048501523060248501529490941660448301526001600160801b03881660648301525190929183916084918391905af180156113d3576115be575b506111649261115f611171959361115f93610e5e565b610e5e565b9360045460020b90610e03565b608051600282900b9081126115a55750949291925b608051935b62ffffff871661ffff83160362ffffff81116114835762ffffff166001600160801b0386161015611561576001600160801b0384161561150957600454600281900b9485926111d98461291d565b966001600160a01b0360035416806001600160a01b038c161460001461149b57505083608051526006602052608051966112488360408a20926003840193809b896000523390526009602052604060805120896000526020526001600160801b0380600b541691541690612e85565b929092946001600160a01b036002541696627fffff198260201c60020b820112627fffff8360201c60020b8301131761148357879160201c60020b8101945b8b546001600160801b0316906001600160801b03161015976112a891612812565b8b8660045460020b6112b992612162565b5060045460020b6112ca908d612228565b60045460020b906112db818361241a565b50916112e6936125de565b6112ef91610e36565b97611301956113e6575b505050610e5e565b93846001600160801b03600b54166001600160801b0382161115611344575b5062ffffff61133a61ffff928260045460201c1690610e36565b959491505061118b565b9094506001600160a01b03600a541690813b156113e057604051631ac6758960e11b8152608080516001600160a01b038a1660048401523060248401523360448401526001600160801b0393909316606483015251909283916084918391905af180156113d3576113be575b506080519362ffffff611320565b6113c790610cc3565b60805180156113b05780fd5b6040513d608051823e3d90fd5b60805180fd5b806001600160801b03915490828260801c9260018301938454948361140d83828916610e36565b166001600160801b031980971617905561142c60028501918254610e51565b90551690558254908160801c9060018501908154908561144e85828516610e36565b16911617905561146360028501918254610e51565b905516905562ffffff19600454169062ffffff16176004553880806112f9565b634e487b7160e01b6080515260116004526024608051fd5b93916115039282608097939751526006602052608051926114f16040852094600386019c8d918b60005233905260096020526040608051208b600052602052886001600160801b0380600b541693541692612e85565b95909798899360201c60020b90610e03565b94611287565b604080516001600160801b039586168152949091166020850152919550506001600160a01b0393909316927fc489dd1442ec1b08fb3b4a8339b7f96fd0f85f9b9a42d702819c1c78a3d11fc49250819081015b0390a2565b606460405162461bcd60e51b815260206004820152601160248201527f4f55545f4f465f534c49505f4c494d49540000000000000000000000000000006044820152fd5b9050627fffff198114610e205760000394929192611186565b6115c790610cc3565b60805180156111495780fd5b6115dc90610cc3565b60805180156110dd5780fd5b6115f190610cc3565b60805180156110715780fd5b61161f915060203d602011611625575b6116178183610d09565b810190611eeb565b38610ffb565b503d61160d565b611645915060203d602011611625576116178183610d09565b38610fa2565b611664915060203d602011611625576116178183610d09565b38610f49565b61167390610cc3565b38610eec565b1561168057565b606460405162461bcd60e51b815260206004820152600f60248201527f4f524445525f4e4f545f455849535400000000000000000000000000000000006044820152fd5b805480156117025760001901906116db8282610dd1565b6116ec576001816000809355015555565b634e487b7160e01b600052600060045260246000fd5b634e487b7160e01b600052603160045260246000fd5b9061172290611f28565b9060003381526008602052604081208360020b8252602052604081206001600160a01b038316825260205260408120546000199161176283831415611679565b338152600760205260408120916117798184610dd1565b50916117a86001600160a01b03600185015416611796818a612812565b6117a0818a61241a565b50918a6125de565b5080946001600160a01b03600354166001600160a01b03881614600014611a1a578760020b825260066020526040822060038101903384526009602052604084208a60020b855260205260026040852001903385526009602052604085208b60020b86526020526001600260408720925b01549101541015611956575b50508454818101908111611942576001600160a01b0360019387969593604061185284956118fd9b610dd1565b509233815260086020528181209688850197885460a01c60020b600052602052826000208686541660005260205282600020553381526008602052208c60020b6000526020526040600020838c166000526020526040600020556118d8845460a01c60020b8688019062ffffff60a01b1982549160a01b62ffffff60a01b169116179055565b5416916001600160a01b031992838654161785555416908284015416179101556116c4565b6001600160801b03604051911681527f807645a5ce4bf61d15b017a8b4178dedd7ff00eb9d90b15bbd5c981252e4fe7560206001600160a01b03339560020b941692a4565b602483634e487b7160e01b81526011600452fd5b9096506001600160801b03819392935416968054906001600160801b0361197f8a828516610e5e565b166001600160801b031980931617905581541690556001600160a01b03600a5416803b1561030a57604051631ac6758960e11b81526001600160a01b03891660048201523060248201523360448201526001600160801b03881660648201529082908290608490829084905af18015611a0f57611a00575b80929192611825565b611a0990610cc3565b386119f7565b6040513d84823e3d90fd5b8760020b8252600660205260408220600381013384526009602052604084208a60020b855260205260408420903385526009602052604085208b60020b86526020526001600280604088200192611819565b6000198114610e205760010190565b8051821015610ded5760209160051b010190565b67ffffffffffffffff8111610cd75760051b60200190565b6001600160a01b0380911691600091838352602091600783526040611ad18186209283549061290d565b93611adb85611a8f565b94611ae883519687610d09565b808652601f19611af782611a8f565b0136838801378690875b818110611c73575050805b611b3c57505050505050807fc18cced4ef47e8fff8412a99bc09b8afb2f057f42c940accd159af4f5452985891a2565b600019818101828111611c5f57611b539088611a7b565b51611b5e8187610dd1565b50918654818101908111611c4b5791888b611c01888f84968c611b848f9a859c9b610dd1565b509583815260089384865282822094600191828a019b8c549860a09860029a8a1c8b0b87528152868620908d8d54168752528585205583528d52828220908c019c8d54861c870b8352528d82822090898d541683525220558554901c900b879062ffffff60a01b1982549160a01b62ffffff60a01b169116179055565b5416926001600160a01b03199384825416179055541690825416179055611c27846116c4565b8015611c37576000190180611b0c565b602487634e487b7160e01b81526011600452fd5b60248b634e487b7160e01b81526011600452fd5b602489634e487b7160e01b81526011600452fd5b611c946001611c828389610dd1565b500154888160a01c60020b9116611d46565b6001600160801b0392831615929183611cf0575b5082611ce5575b5050611cc4575b611cbf90611a6c565b611b01565b91611cdd8184611cd7611cbf948c611a7b565b52611a6c565b929050611cb6565b161590503880611caf565b821615925038611ca8565b15611d0257565b606460405162461bcd60e51b815260206004820152600a60248201527f57524f4e475f534f4c44000000000000000000000000000000000000000000006044820152fd5b91906001600160a01b03600291818354168286169081149081938215611edd575b505015611e9957611d79600091611f28565b908215611e5f575080830b600081815260066020908152604080832033845260098352818420948452939091529020958685019391905b6001600160801b0380955416976000809160018b9986015491015410600014611e4857505092611e2592611e2b9592611dec611dfa968461250f565b509690969a85881614611cfb565b611e0560009361291d565b9115611e2e57611e1e93600b5416905460801c90612e85565b9092610e36565b94610e36565b91565b91611e4293600b5416925460801c92612e85565b92610e36565b94611e25949199925092611e05611e2b979461291d565b81840b8082526006602090815260409283902033600090815260098352848120938152929091529190208085019690939160030190611db0565b606460405162461bcd60e51b815260206004820152600d60248201527f494e56414c49445f544f4b454e000000000000000000000000000000000000006044820152fd5b600354161490503880611d67565b9081602091031261045a57516001600160801b038116810361045a5790565b9190916001600160801b0380809416911602918216918203610e2057565b9060045460201c60020b9160020b918015611f9657627fffff198314600019821416610e20578080840560020b028060020b908103610e2057809382600082129182611f87575b5050611f79575050565b611f84929350610e03565b90565b0760020b151590508238611f6f565b634e487b7160e01b600052601260045260246000fd5b90611fb690611f28565b9060009133835260209260088452604092838220918360020b928382528652848120916001600160a01b038091169283835287528582205460001994611ffe86831415611679565b33845260078952878420956120138388610dd1565b5094600186019661203e868954169a61202c8c82612812565b6120368c8261241a565b9d90926125de565b996120a2575b5050505050505050506001600160801b03161561205f575050565b60649250519062461bcd60e51b82526004820152600b60248201527f4e4f5f4541524e494e47530000000000000000000000000000000000000000006044820152fd5b885483810190811161194257928b879592936121549a98948f6120d16001600160801b039f9e9c9a988d610dd1565b5033808552600880845286862060018401805460a01c60020b885290855287872084548c16885285528787209b909b5590855282528484209684529581528383209183525220558254865462ffffff60a01b191662ffffff60a01b9091161786555416926001600160a01b031993848254161790555416908254161790556116c4565b903880808080808080612044565b9291926000906001600160a01b0380600354169116146000146121f6575060020b8060005260066020526003604060002001903360005260096020526040600020906000526020526002604060002001905b80546001600160801b0391826121cc87828516610e36565b166001600160801b03198093161790558254916121ee81841696871597610e36565b169116179055565b9060409060020b91828152600660205220903360005260096020526040600020906000526020526040600020906121b4565b9060006122348261291d565b906001600160a01b038060035416908516146000146123c157506123286123478360020b928360005260066020526122a860406000206003810192819633600052600960205260406000209060005260205260026040600020016001600160801b038080600b541692541693541690612e85565b9390809490955b8354956001600160801b0396876122c885828416610e5e565b166001600160801b03198092161786556123096122e983855460801c610e36565b84546001600160801b031660809190911b6001600160801b031916178455565b87612318845493828516610e5e565b169116179055825460801c610e36565b6001600160801b036001600160801b031983549260801b169116179055565b81169182612356575b50505050565b604080516001600160a01b0395909516855260029190910b60208501526001600160801b0391909116908301526123b5917fc5694611e5eb7da7cf71b4805c895d2f63437c40e24fc1a538c555d16220956c90606090a1600554610e51565b60055538808080612350565b612347612328916124118560020b9485835260066020526040808420936003850197338252600960205282822090825260205220906001600160801b038080600b54169354169088541692612e85565b939080956122af565b916000906000926001600160a01b038060025416911614806000146124de578460020b908185526006602052604085209133865260096020526040862090865260205260026040862001955b6001600160801b03809754169586156124d0575090612485869261291d565b90156124b35761249f9287600b5416905460801c90612e85565b939093945b8516146124ad57565b60019150565b6124c8929187600b5416925460801c92612e85565b9390946124a4565b965086955060019450505050565b8460020b90818552600660205260036040862001913386526009602052604086209086526020526040852095612466565b916000906000926001600160a01b038060025416911614806000146125ad578460020b908185526006602052604085209133865260096020526040862090865260205260026040862001955b6001600160801b03809754169586156124d057509061257a869261291d565b90156125965761249f9287600181600b54169201541690612e85565b6124c8929187600181600b54169401541692612e85565b8460020b9081855260066020526003604086200191338652600960205260408620908652602052604085209561255b565b90919261267b949360006001600160a01b03908160025416828716146000146127be5750600284810b60008181526006602090815260408083203384526009835281842094845293909152902093916001919085015b61266561264588845460801c610e5e565b83546001600160801b031660809190911b6001600160801b031916178355565b8054936001600160801b039b8c91828716610e5e565b166001600160801b03198095161790558454948a8660801c961690550190815490896126a986828516610e5e565b169116179055866126ba8385610e36565b1661272e575b506126ca91610e36565b809481166126d757505050565b604080516001600160a01b03909416845260029290920b60208401526001600160801b03169082015233907fcd2e4759ece8dd6157c6d60523bf0116894077b173f774cd194b1354d2d22b7e90806060810161155c565b600a54169161273d8282610e36565b92803b1561045a57604051631ac6758960e11b81526001600160a01b03871660048201523060248201523360448201526001600160801b039490941660648501526000908490608490829084905af19283156127b2576126ca936127a3575b50916126c0565b6127ac90610cc3565b3861279c565b6040513d6000823e3d90fd5b916001600360408760020b9586815260066020522001336000526009602052604060002085600052602052604060002094336000526009602052604060002090600052602052600260406000200194612634565b6000906001600160a01b039160029280845416908516146000146128d4575080820b6000818152600660209081526040808320338452600983528184209484529390915290209283810192915b019283549460018201958654106000146128cc576128896128ab916001600160801b03199461250f565b5083546001600160801b031660809190911b6001600160801b03191617909255565b6128c48354916001600160801b03808416911614611cfb565b169055549055565b505050505050565b81830b8082526006602090815260409283902033600090815260098352848120938152929091529190208084019390929160030161285f565b818110612918575090565b905090565b60020b6000811215612e7f577f80000000000000000000000000000000000000000000000000000000000000008114610e2057806000035b620d89e88111612e3b576001811615612e125770ffffffffffffffffffffffffffffffffff6ffffcb933bd6fad37aa2d162d1a5940015b169160028216612de6575b600491828116612dba575b60088116612d8e575b60108116612d62575b60208116612d36575b60408116612d0a575b608090818116612cdf575b6101008116612cb4575b6102008116612c89575b6104008116612c5e575b6108008116612c33575b6110008116612c08575b6120008116612bdd575b6140008116612bb2575b6180008116612b87575b620100008116612b5c575b620200008116612b32575b620400008116612af4575b6208000016612ab5575b50600012612a8d575b50612a806001600160a01b039163ffffffff811615600014612a845760ff60005b169060201c610e51565b1690565b60ff6001612a76565b8115612aa0575060001904612a80612a55565b601290634e487b7160e01b6000525260246000fd5b6b048a170391f7dc42444e8fa293919391828102928184041490151715612adf571c916000612a4c565b601183634e487b7160e01b6000525260246000fd5b936d2216e584f5fa1ea926041bedfe9890818102918183041490151715612b1d57811c93612a42565b601184634e487b7160e01b6000525260246000fd5b936e5d6af8dedb81196699c329225ee60490818102918183041490151715612b1d57811c93612a37565b936f09aa508b5b7a84e1c677de54f3e99bc990818102918183041490151715612b1d57811c93612a2c565b936f31be135f97d08fd981231505542fcfa690818102918183041490151715612b1d57811c93612a21565b936f70d869a156d2a1b890bb3df62baf32f790818102918183041490151715612b1d57811c93612a17565b936fa9f746462d870fdf8a65dc1f90e061e590818102918183041490151715612b1d57811c93612a0d565b936fd097f3bdfd2022b8845ad8f792aa582590818102918183041490151715612b1d57811c93612a03565b936fe7159475a2c29b7443b29c7fa6e889d990818102918183041490151715612b1d57811c936129f9565b936ff3392b0822b70005940c7a398e4b70f390818102918183041490151715612b1d57811c936129ef565b936ff987a7253ac413176f2b074cf7815e5490818102918183041490151715612b1d57811c936129e5565b936ffcbe86c7900a88aedcffc83b479aa3a490818102918183041490151715612b1d57811c936129db565b936ffe5dee046a99a2a811c461f1969c305390818102918183041490151715612b1d57811c936129d1565b926fff2ea16466c96a3843ec78b326b5286190818102918183041490151715612adf5760801c926129c6565b926fff973b41fa98c081472e6896dfb254c090818102918183041490151715612adf5760801c926129bd565b926fffcb9843d60f6159c9db58835c92664490818102918183041490151715612adf5760801c926129b4565b926fffe5caca7e10e4e61c3624eaa0941cd090818102918183041490151715612adf5760801c926129ab565b926ffff2e50f5f656932ef12357cf3c7fdcc90818102918183041490151715612adf5760801c926129a2565b916ffff97272373d413259a46990580e213a90818102918183041490151715610e205760801c91612997565b70ffffffffffffffffffffffffffffffffff70010000000000000000000000000000000061298c565b606460405162461bcd60e51b815260206004820152600160248201527f54000000000000000000000000000000000000000000000000000000000000006044820152fd5b80612955565b6001600160801b03808316956001600160a01b03909416949291612eb286612ead818a612f66565b612f66565b92828416809403612f22578396838616809511612f18575b612ee081612edb8693848c1661304e565b61304e565b169783612eed848b610e36565b161015612f0e575b50612f009086610e36565b161015612f0a5750565b9150565b9650612f00612ef5565b9496508694612eca565b606460405162461bcd60e51b815260206004820152600460248201527f43313238000000000000000000000000000000000000000000000000000000006044820152fd5b6000198282099082810292838084109303918383039360009314612faf576c0100000000000000000000000092848411156101c857500990828211900360a01b910360601c1790565b505090505060601c90565b906c0100000000000000000000000090600019828409928060601b92838086109503948086039514613040578483111561045a578291098160018119011680920460028082600302188083028203028083028203028083028203028083028203028083028203028092029003029360018380600003040190848311900302920304170290565b50508092501561045a570490565b919061305a8184612fba565b928115611f96576c01000000000000000000000000900961307757565b9060001981101561045a57611f8490611a6c56fea264697066735822122081b678af5066d329955dbbd07492ad76798cb8fbc104ce84e91997fa133623ef64736f6c63430008130033";

type TokenExchangeConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: TokenExchangeConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class TokenExchange__factory extends ContractFactory {
  constructor(...args: TokenExchangeConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    bank: PromiseOrValue<string>,
    tX: PromiseOrValue<string>,
    tY: PromiseOrValue<string>,
    owner: PromiseOrValue<string>,
    tinyAmountThresh: PromiseOrValue<BigNumberish>,
    margin: PromiseOrValue<BigNumberish>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<TokenExchange> {
    return super.deploy(
      bank,
      tX,
      tY,
      owner,
      tinyAmountThresh,
      margin,
      overrides || {}
    ) as Promise<TokenExchange>;
  }
  override getDeployTransaction(
    bank: PromiseOrValue<string>,
    tX: PromiseOrValue<string>,
    tY: PromiseOrValue<string>,
    owner: PromiseOrValue<string>,
    tinyAmountThresh: PromiseOrValue<BigNumberish>,
    margin: PromiseOrValue<BigNumberish>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(
      bank,
      tX,
      tY,
      owner,
      tinyAmountThresh,
      margin,
      overrides || {}
    );
  }
  override attach(address: string): TokenExchange {
    return super.attach(address) as TokenExchange;
  }
  override connect(signer: Signer): TokenExchange__factory {
    return super.connect(signer) as TokenExchange__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): TokenExchangeInterface {
    return new utils.Interface(_abi) as TokenExchangeInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): TokenExchange {
    return new Contract(address, _abi, signerOrProvider) as TokenExchange;
  }
}
