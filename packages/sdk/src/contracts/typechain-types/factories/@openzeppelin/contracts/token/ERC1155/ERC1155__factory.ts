/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../../../../common";
import type {
  ERC1155,
  ERC1155Interface,
} from "../../../../../@openzeppelin/contracts/token/ERC1155/ERC1155";

const _abi = [
  {
    inputs: [
      {
        internalType: "string",
        name: "uri_",
        type: "string",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "account",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        indexed: false,
        internalType: "bool",
        name: "approved",
        type: "bool",
      },
    ],
    name: "ApprovalForAll",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256[]",
        name: "ids",
        type: "uint256[]",
      },
      {
        indexed: false,
        internalType: "uint256[]",
        name: "values",
        type: "uint256[]",
      },
    ],
    name: "TransferBatch",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "TransferSingle",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "string",
        name: "value",
        type: "string",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
    ],
    name: "URI",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
    ],
    name: "balanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address[]",
        name: "accounts",
        type: "address[]",
      },
      {
        internalType: "uint256[]",
        name: "ids",
        type: "uint256[]",
      },
    ],
    name: "balanceOfBatch",
    outputs: [
      {
        internalType: "uint256[]",
        name: "",
        type: "uint256[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
      {
        internalType: "address",
        name: "operator",
        type: "address",
      },
    ],
    name: "isApprovedForAll",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256[]",
        name: "ids",
        type: "uint256[]",
      },
      {
        internalType: "uint256[]",
        name: "amounts",
        type: "uint256[]",
      },
      {
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
    ],
    name: "safeBatchTransferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
    ],
    name: "safeTransferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        internalType: "bool",
        name: "approved",
        type: "bool",
      },
    ],
    name: "setApprovalForAll",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes4",
        name: "interfaceId",
        type: "bytes4",
      },
    ],
    name: "supportsInterface",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "uri",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
] as const;

const _bytecode =
  "0x60806040523462000217576200133b803803806200001d816200021c565b92833981019060208082840312620002175781516001600160401b039283821162000217570192601f9080828601121562000217578451848111620001ec57601f199562000071828501881686016200021c565b928284528583830101116200021757849060005b83811062000202575050600091830101528051938411620001ec57600254926001938481811c91168015620001e1575b82821014620001cb578381116200017f575b50809285116001146200011457508394509083929160009462000108575b50501b916000199060031b1c1916176002555b6040516110f89081620002438239f35b015192503880620000e5565b929484908116600260005284600020946000905b888383106200016457505050106200014a575b505050811b01600255620000f8565b015160001960f88460031b161c191690553880806200013b565b85870151885590960195948501948793509081019062000128565b6002600052816000208480880160051c820192848910620001c1575b0160051c019085905b828110620001b4575050620000c7565b60008155018590620001a4565b925081926200019b565b634e487b7160e01b600052602260045260246000fd5b90607f1690620000b5565b634e487b7160e01b600052604160045260246000fd5b81810183015185820184015286920162000085565b600080fd5b6040519190601f01601f191682016001600160401b03811183821017620001ec5760405256fe60406080815260048036101561001457600080fd5b600091823560e01c8062fdd58e14610bbc57806301ffc9a714610b025780630e89341c146109ea5780632eb2c2d6146106a85780634e1273f4146104f2578063a22cb46514610402578063e985e9c5146103b05763f242432a1461007757600080fd5b346103ac5760a03660031901126103ac57610090610bec565b83610099610c07565b916044359060643560843567ffffffffffffffff81116103a8576100c09036908901610d0b565b926001600160a01b03809316923384148015610389575b6100e090610e7c565b8616906100ee821515610eed565b6100f78161108c565b506101018361108c565b508086526020968688528887208588528852838988205461012482821015610f5e565b838952888a528a8920878a528a5203898820558187528688528887208388528852888720610153858254610fcf565b905582858a51848152868b8201527fc3d58168c5ae7397731d063d5bbf3d657854427343f4c083240f7aacaa2d0f628c3392a43b61018f578580f35b889587946101e98a51978896879586947ff23a6e61000000000000000000000000000000000000000000000000000000009c8d8752339087015260248601526044850152606484015260a0608484015260a4830190610c1d565b03925af186918161035a575b506102d0575050600190610207610ffc565b6308c379a01461029d575b506102275750505b3880808381808080808580f35b61029992505191829162461bcd60e51b8352820160809060208152603460208201527f455243313135353a207472616e7366657220746f206e6f6e2d4552433131353560408201527f526563656976657220696d706c656d656e74657200000000000000000000000060608201520190565b0390fd5b6102a561101a565b806102b05750610212565b6102998591855193849362461bcd60e51b85528401526024830190610c1d565b6001600160e01b0319160390506102e857505061021a565b61029992505191829162461bcd60e51b8352820160809060208152602860208201527f455243313135353a204552433131353552656365697665722072656a6563746560408201527f6420746f6b656e7300000000000000000000000000000000000000000000000060608201520190565b61037b919250843d8611610382575b6103738183610c5d565b810190610fdc565b90386101f5565b503d610369565b508386526001602090815288872033885290528786205460ff166100d7565b8480fd5b8280fd5b8382346103fe57806003193601126103fe5760ff816020936103d0610bec565b6103d8610c07565b6001600160a01b0391821683526001875283832091168252855220549151911615158152f35b5080fd5b50346103ac57806003193601126103ac5761041b610bec565b90602435918215158093036103a8576001600160a01b03169283331461048a5750338452600160205280842083855260205280842060ff1981541660ff8416179055519081527f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c3160203392a380f35b6020608492519162461bcd60e51b8352820152602960248201527f455243313135353a2073657474696e6720617070726f76616c2073746174757360448201527f20666f722073656c6600000000000000000000000000000000000000000000006064820152fd5b5090346103ac57816003193601126103ac57803567ffffffffffffffff8082116103a857366023830112156103a857818301359061052f82610c95565b9261053c86519485610c5d565b82845260209260248486019160051b830101913683116106a457602401905b8282106106815750505060243590811161067d5761057c9036908501610cad565b928251845103610616575081519461059386610c95565b956105a086519788610c5d565b8087526105af601f1991610c95565b0136838801375b825181101561060057806105eb6001600160a01b036105d86105fb9487610e52565b51166105e48388610e52565b5190610d96565b6105f58289610e52565b52610e2d565b6105b6565b84518281528061061281850189610d62565b0390f35b60849185519162461bcd60e51b8352820152602960248201527f455243313135353a206163636f756e747320616e6420696473206c656e67746860448201527f206d69736d6174636800000000000000000000000000000000000000000000006064820152fd5b8580fd5b81356001600160a01b03811681036106a057815290840190840161055b565b8980fd5b8880fd5b5090346103ac576003199160a0368401126109e6576106c5610bec565b926106ce610c07565b9367ffffffffffffffff936044358581116109e2576106f09036908301610cad565b906064358681116106a4576107089036908301610cad565b956084359081116106a4576107209036908301610d0b565b936001600160a01b038094169333851480156109c3575b61074090610e7c565b835188510361095a57881694610757861515610eed565b895b8a85518210156107dd5790896107d18a6107d8946107828561077b818d610e52565b5195610e52565b51938082526020908282528383208d84528252858d85852054906107a883831015610f5e565b838652858552868620908652845203848420558252818152828220908d83525220918254610fcf565b9055610e2d565b610759565b50509094939596929197848789518a81527f4a39dc06d4c0dbc64b70af90fd698a233a518aa5d07e595d983b8c0526c8f7fb61081b8c830188610d62565b9180830360208201528061083033948b610d62565b0390a43b61083c578880f35b865194859384937fbc197c810000000000000000000000000000000000000000000000000000000098898652338c87015260248601526044850160a0905260a4850161088791610d62565b8285820301606486015261089a91610d62565b908382030160848401526108ad91610c1d565b0381885a94602095f185918161093a575b5061092457505060016108cf610ffc565b6308c379a0146108ed575b6102275750505b38808080808080808880f35b6108f561101a565b8061090057506108da565b905061029991602094505193849362461bcd60e51b85528401526024830190610c1d565b6001600160e01b031916036102e85750506108e1565b61095391925060203d8111610382576103738183610c5d565b90386108be565b608483602089519162461bcd60e51b8352820152602860248201527f455243313135353a2069647320616e6420616d6f756e7473206c656e6774682060448201527f6d69736d617463680000000000000000000000000000000000000000000000006064820152fd5b50848a5260016020908152878b20338c529052868a205460ff16610737565b8780fd5b8380fd5b508290346103fe57602090816003193601126103ac57805192806002549060019082821c928281168015610af8575b8785108114610ae5578899509688969785829a529182600014610abe575050600114610a62575b5050506106129291610a53910385610c5d565b51928284938452830190610c1d565b9190869350600283527f405787fa12a823e0f2b7631cc41b3ba8828b3321ca811111fa75cd3aa3bb5ace5b828410610aa65750505082010181610a53610612610a40565b8054848a018601528895508794909301928101610a8d565b60ff19168782015293151560051b86019093019350849250610a5391506106129050610a40565b60248360228c634e487b7160e01b835252fd5b93607f1693610a19565b5090346103ac5760203660031901126103ac5735906001600160e01b031982168092036103ac57602092507fd9b67a26000000000000000000000000000000000000000000000000000000008214918215610b92575b8215610b68575b50519015158152f35b7f01ffc9a70000000000000000000000000000000000000000000000000000000014915038610b5f565b7f0e89341c0000000000000000000000000000000000000000000000000000000081149250610b58565b8382346103fe57806003193601126103fe57602090610be5610bdc610bec565b60243590610d96565b9051908152f35b600435906001600160a01b0382168203610c0257565b600080fd5b602435906001600160a01b0382168203610c0257565b919082519283825260005b848110610c49575050826000602080949584010152601f8019910116010190565b602081830181015184830182015201610c28565b90601f8019910116810190811067ffffffffffffffff821117610c7f57604052565b634e487b7160e01b600052604160045260246000fd5b67ffffffffffffffff8111610c7f5760051b60200190565b81601f82011215610c0257803591610cc483610c95565b92610cd26040519485610c5d565b808452602092838086019260051b820101928311610c02578301905b828210610cfc575050505090565b81358152908301908301610cee565b81601f82011215610c025780359067ffffffffffffffff8211610c7f5760405192610d40601f8401601f191660200185610c5d565b82845260208383010111610c0257816000926020809301838601378301015290565b90815180825260208080930193019160005b828110610d82575050505090565b835185529381019392810192600101610d74565b6001600160a01b0316908115610dc357600052600060205260406000209060005260205260406000205490565b608460405162461bcd60e51b815260206004820152602a60248201527f455243313135353a2061646472657373207a65726f206973206e6f742061207660448201527f616c6964206f776e6572000000000000000000000000000000000000000000006064820152fd5b6000198114610e3c5760010190565b634e487b7160e01b600052601160045260246000fd5b8051821015610e665760209160051b010190565b634e487b7160e01b600052603260045260246000fd5b15610e8357565b608460405162461bcd60e51b815260206004820152602e60248201527f455243313135353a2063616c6c6572206973206e6f7420746f6b656e206f776e60448201527f6572206f7220617070726f7665640000000000000000000000000000000000006064820152fd5b15610ef457565b608460405162461bcd60e51b815260206004820152602560248201527f455243313135353a207472616e7366657220746f20746865207a65726f20616460448201527f64726573730000000000000000000000000000000000000000000000000000006064820152fd5b15610f6557565b608460405162461bcd60e51b815260206004820152602a60248201527f455243313135353a20696e73756666696369656e742062616c616e636520666f60448201527f72207472616e73666572000000000000000000000000000000000000000000006064820152fd5b91908201809211610e3c57565b90816020910312610c0257516001600160e01b031981168103610c025790565b60009060033d1161100957565b905060046000803e60005160e01c90565b600060443d1061107857604051600319913d83016004833e815167ffffffffffffffff918282113d60248401111761107b57818401948551938411611083573d8501016020848701011161107b575061107892910160200190610c5d565b90565b949350505050565b50949350505050565b604051906040820182811067ffffffffffffffff821117610c7f5760405260018252602082016020368237825115610e6657529056fea2646970667358221220ce1dbd857b80f2b659c0da33f94e64c04f232832b8d1acfe377a49500a3bef6264736f6c63430008130033";

type ERC1155ConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: ERC1155ConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class ERC1155__factory extends ContractFactory {
  constructor(...args: ERC1155ConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    uri_: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<ERC1155> {
    return super.deploy(uri_, overrides || {}) as Promise<ERC1155>;
  }
  override getDeployTransaction(
    uri_: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(uri_, overrides || {});
  }
  override attach(address: string): ERC1155 {
    return super.attach(address) as ERC1155;
  }
  override connect(signer: Signer): ERC1155__factory {
    return super.connect(signer) as ERC1155__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): ERC1155Interface {
    return new utils.Interface(_abi) as ERC1155Interface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): ERC1155 {
    return new Contract(address, _abi, signerOrProvider) as ERC1155;
  }
}
