/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Signer,
  utils,
  Contract,
  ContractFactory,
  BigNumberish,
  Overrides,
} from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../common";
import type {
  TokenExchange,
  TokenExchangeInterface,
} from "../../contracts/TokenExchange";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "bank",
        type: "address",
      },
      {
        internalType: "address",
        name: "tX",
        type: "address",
      },
      {
        internalType: "address",
        name: "tY",
        type: "address",
      },
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        internalType: "uint128",
        name: "tinyAmountThresh",
        type: "uint128",
      },
      {
        internalType: "int24",
        name: "margin",
        type: "int24",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "user",
        type: "address",
      },
    ],
    name: "CacheCleared",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "targetToken",
        type: "address",
      },
      {
        indexed: false,
        internalType: "int24",
        name: "point",
        type: "int24",
      },
      {
        indexed: false,
        internalType: "uint128",
        name: "earning",
        type: "uint128",
      },
      {
        indexed: true,
        internalType: "address",
        name: "wallet",
        type: "address",
      },
    ],
    name: "EarningClaimed",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "originToken",
        type: "address",
      },
      {
        indexed: true,
        internalType: "int24",
        name: "point",
        type: "int24",
      },
      {
        indexed: false,
        internalType: "uint128",
        name: "refund",
        type: "uint128",
      },
      {
        indexed: true,
        internalType: "address",
        name: "wallet",
        type: "address",
      },
    ],
    name: "LimitOrderCanceled",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "token",
        type: "address",
      },
      {
        indexed: true,
        internalType: "int24",
        name: "point",
        type: "int24",
      },
      {
        indexed: false,
        internalType: "uint128",
        name: "amount",
        type: "uint128",
      },
      {
        indexed: false,
        internalType: "uint128",
        name: "earning",
        type: "uint128",
      },
      {
        indexed: true,
        internalType: "address",
        name: "wallet",
        type: "address",
      },
    ],
    name: "LimitOrderPlaced",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "originToken",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint128",
        name: "amount",
        type: "uint128",
      },
      {
        indexed: false,
        internalType: "uint128",
        name: "earning",
        type: "uint128",
      },
    ],
    name: "MarketOrderCompleted",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "originToken",
        type: "address",
      },
      {
        indexed: false,
        internalType: "int24",
        name: "point",
        type: "int24",
      },
      {
        indexed: false,
        internalType: "uint128",
        name: "amount",
        type: "uint128",
      },
    ],
    name: "Swapped",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "originToken",
        type: "address",
      },
      {
        internalType: "int24",
        name: "point",
        type: "int24",
      },
    ],
    name: "_claimEarningInternal",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "cancelAllLimitOrders",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "originToken",
        type: "address",
      },
      {
        internalType: "int24",
        name: "point",
        type: "int24",
      },
    ],
    name: "cancelLimitOrder",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "claimAllEarnings",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "originToken",
        type: "address",
      },
      {
        internalType: "int24",
        name: "point",
        type: "int24",
      },
    ],
    name: "claimEarning",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "user",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "endIndex",
        type: "uint256",
      },
    ],
    name: "clearZeroLimOrders",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "curPoint",
    outputs: [
      {
        internalType: "int24",
        name: "",
        type: "int24",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "originToken",
        type: "address",
      },
      {
        internalType: "int24",
        name: "point",
        type: "int24",
      },
      {
        internalType: "uint128",
        name: "amount",
        type: "uint128",
      },
      {
        internalType: "address",
        name: "holder",
        type: "address",
      },
      {
        internalType: "address",
        name: "referral",
        type: "address",
      },
    ],
    name: "limitOrder",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "user",
        type: "address",
      },
    ],
    name: "limitOrders",
    outputs: [
      {
        components: [
          {
            internalType: "address",
            name: "originToken",
            type: "address",
          },
          {
            internalType: "address",
            name: "targetToken",
            type: "address",
          },
          {
            internalType: "int24",
            name: "point",
            type: "int24",
          },
        ],
        internalType: "struct TokenExchange.LimitOrderView[]",
        name: "orders",
        type: "tuple[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "originToken",
        type: "address",
      },
      {
        internalType: "uint128",
        name: "amount",
        type: "uint128",
      },
      {
        internalType: "int24",
        name: "startPoint",
        type: "int24",
      },
      {
        internalType: "uint16",
        name: "slipLimit",
        type: "uint16",
      },
      {
        internalType: "address",
        name: "holder",
        type: "address",
      },
      {
        internalType: "address",
        name: "referral",
        type: "address",
      },
    ],
    name: "marketOrder",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "pairInfo",
    outputs: [
      {
        internalType: "address",
        name: "tokenX",
        type: "address",
      },
      {
        internalType: "address",
        name: "tokenY",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "pointMargin",
    outputs: [
      {
        internalType: "int24",
        name: "",
        type: "int24",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "int24",
        name: "",
        type: "int24",
      },
    ],
    name: "pointOrder",
    outputs: [
      {
        components: [
          {
            internalType: "uint128",
            name: "selling",
            type: "uint128",
          },
          {
            internalType: "uint128",
            name: "unlegacyEarn",
            type: "uint128",
          },
          {
            internalType: "uint128",
            name: "legacyEarn",
            type: "uint128",
          },
          {
            internalType: "uint256",
            name: "accLegacyEarn",
            type: "uint256",
          },
        ],
        internalType: "struct TokenExchange.Order",
        name: "X",
        type: "tuple",
      },
      {
        components: [
          {
            internalType: "uint128",
            name: "selling",
            type: "uint128",
          },
          {
            internalType: "uint128",
            name: "unlegacyEarn",
            type: "uint128",
          },
          {
            internalType: "uint128",
            name: "legacyEarn",
            type: "uint128",
          },
          {
            internalType: "uint256",
            name: "accLegacyEarn",
            type: "uint256",
          },
        ],
        internalType: "struct TokenExchange.Order",
        name: "Y",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "targetToken",
        type: "address",
      },
      {
        internalType: "int24",
        name: "point",
        type: "int24",
      },
    ],
    name: "queryEarning",
    outputs: [
      {
        internalType: "uint128",
        name: "sold",
        type: "uint128",
      },
      {
        internalType: "uint128",
        name: "earned",
        type: "uint128",
      },
      {
        internalType: "uint128",
        name: "selling",
        type: "uint128",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "startOff",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x6080346200012f57601f6200326d38819003918201601f19168301916001600160401b03831184841017620001345780849260c0946040528339810103126200012f576200004d816200014a565b6200005b602083016200014a565b62000069604084016200014a565b9262000078606082016200014a565b608082015190936001600160801b0382169290918390036200012f5760a00151928360020b84036200012f576200011f956001600055620000b9336200015f565b60018060a01b0380928160018060a01b03199516856009541617600955168360025416176002551690600354161760035560018060801b0319600a541617600a556004549060201b66ffffff00000000169066ffffff000000001916176004556200015f565b6040516130c49081620001a98239f35b600080fd5b634e487b7160e01b600052604160045260246000fd5b51906001600160a01b03821682036200012f57565b600180546001600160a01b039283166001600160a01b0319821681179092559091167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0600080a356fe60406080815260048036101561001457600080fd5b600090813560e01c9081630dc3510e14610c215781631b04562614610bef5781633702e0a6146107895781633e19936014610717578163633e13eb146106f3578163715018a6146106975781638612ccf8146105785781638da5cb5b14610550578163a9cd946914610454578163af8eb3821461039a578163be2f798e14610378578163cf85e95e14610352578163e5f292d11461032d578163e9aa0eea14610303578163f11f5a02146102d2578163f2fde38b146101f057508063fc2a5b1d146101c05763fde89598146100e857600080fd5b346101bd57806003193601126101bd5733815260206006815282822080549061011082611771565b9261011d86519485610cf2565b82845280840191855280852085925b84841061017957878787815b8151811015610175578061016b610152610170938561175d565b51866001600160a01b0382511691015160020b906113fa565b61174e565b610138565b8280f35b6001908389519161018983610cd6565b6001600160a01b0392838654168152848601549384168382015260029360a01c840b8c82015281520192019301929061012c565b80fd5b50346101bd57806003193601126101bd57506001600160a01b038060025416906003541682519182526020820152f35b839150346102ce5760203660031901126102ce5761020c610c70565b90610215610d62565b6001600160a01b03809216928315610265575050600154826001600160a01b0319821617600155167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0600080a380f35b906020608492519162461bcd60e51b8352820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201527f64647265737300000000000000000000000000000000000000000000000000006064820152fd5b8280fd5b8284346102ff573660031901126101bd576102fc6102ee610c70565b6102f6610c9c565b90611fc8565b80f35b5080fd5b8284346102ff573660031901126101bd576102fc61031f610c70565b610327610c9c565b906113fa565b8284346102ff573660031901126101bd576102fc610349610c70565b60243590611789565b8383346101bd57806003193601126101bd575060ff6020925460181c1690519015158152f35b839150346102ce57826003193601126102ce57602092505460020b9051908152f35b839150346102ce5760203660031901126102ce5735918260020b80930361044f5781816101009461044d9352600560205220916104196103e560036103de86610d14565b9501610d14565b91518094606080916001600160801b0380825116855280602083015116602086015260408201511660408501520151910152565b80516001600160801b0390811660808501526020820151811660a085015260408201511660c08401526060015160e0830152565bf35b600080fd5b8284346102ff576020806003193601126102ce576001600160a01b03928361047a610c70565b168152600682528281209182549061049182611771565b9161049e86519384610cf2565b8083528183018095855282852085915b83831061050c575050505084519481860192828752518093528086019493905b8382106104db5786860387f35b84518051891687528084015189168785015281015160020b86820152606090950194938201936001909101906104ce565b600190858a98969798519161052083610cd6565b8c855416835283850154928d84168382015260029360a01c840b8d820152815201920192019190959493956104ae565b8284346102ff57816003193601126102ff576020906001600160a01b03600154169051908152f35b5050346101bd57806003193601126101bd57338152602091600683528082209283546105a381611771565b946105b084519687610cf2565b818652845281842084908387015b8383106106535750505050825b845181101561063e57806105e2610620928761175d565b516001600160a01b03808583015116868301916001600160801b0361060e845193600294850b90611a28565b50905016610625575b5050505061174e565b6105cb565b6106359351169151900b90611fc8565b38808080610617565b509060066102fc923385525282205433611789565b6001908587519161066383610cd6565b6001600160a01b0392838654168152848601549384168382015260029360a01c840b8a8201528152019201920191906105be565b82346101bd57806003193601126101bd576106b0610d62565b60006001600160a01b036001546001600160a01b03198116600155167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e08280a380f35b839150346102ce57826003193601126102ce576020925054905190821c60020b8152f35b82346101bd5760c03660031901126101bd57610731610c70565b6024356001600160801b038116810361044f576044358060020b810361044f5760643561ffff8116810361078557610767610c86565b9160a435936001600160a01b038516850361044f576102fc95610e60565b8480fd5b905082346102ce5760a03660031901126102ce576107a5610c70565b6107ad610c9c565b91604435936001600160801b038086168603610beb576001600160a01b03946064358681168103610be7576107e96107e3610c86565b92611f47565b97845460ff8160181c16600014610b915750876003541688881614600014610b3f57845460020b8960020b13610afc575b87600954168a813b156101bd578751631ac6758960e11b81526001600160a01b038a168189019081523360208201523060408201526001600160801b03851660608201529092839182908490829060800103925af18015610af257610ad9575b5090610887929187611c0a565b94818616948515610a965760035482821696899695949392918316888103610a9057508260025416935b6108bb8589612815565b6108d0886108ca8c828761217e565b94612244565b6108e7856108de818b61241d565b5091819b6125e1565b9783610a84575b505050610945575b505090516001600160801b03948516815293909116602084015250339260020b917f1b36ba4c0e68abe4a9493a6b705902c56f00e745caa4de70f11bc854e5da93bc9080604081015b0390a480f35b33895260209160068352848a2091855161095e81610cd6565b8881528185820193168352868101918b60020b9485845280549068010000000000000000821015610a71579061099991600182018155610dba565b929092610a5f57906001816109eb969594935116926001600160a01b0319938482541617815501935116908354161782555160020b62ffffff60a01b1982549160a01b62ffffff60a01b169116179055565b3389526006825283892054600019810193908411610a4c57503389526007825283892060009182528252838120868252909152829020558161093f7f1b36ba4c0e68abe4a9493a6b705902c56f00e745caa4de70f11bc854e5da93bc6108f6565b896011602492634e487b7160e01b835252fd5b60248e808a634e487b7160e01b825252fd5b60248f60418b634e487b7160e01b835252fd5b161090508a80806108ee565b936108b1565b606484602087519162461bcd60e51b8352820152600c60248201527f57524f4e475f414d4f554e5400000000000000000000000000000000000000006044820152fd5b99610ae96108879493929b610cac565b9990919261087a565b87513d8d823e3d90fd5b606485602088519162461bcd60e51b8352820152600c60248201527f47545f4355525f505249434500000000000000000000000000000000000000006044820152fd5b845460020b8960020b121561081a57606485602088519162461bcd60e51b8352820152600c60248201527f4c545f4355525f505249434500000000000000000000000000000000000000006044820152fd5b63010000009062ffffff8b169063ffffffff1916171785557fc5694611e5eb7da7cf71b4805c895d2f63437c40e24fc1a538c555d16220956c606087518a8a1681528b60020b60208201528c89820152a161081a565b8880fd5b8680fd5b8284346102ff57806003193601126102ff576102fc90610c106102ee610c70565b338352600660205282205433611789565b8284346102ff57806003193601126102ff57606090610c4f610c41610c70565b610c49610c9c565b90611a28565b83929351936001600160801b03928380921686521660208501521690820152f35b600435906001600160a01b038216820361044f57565b608435906001600160a01b038216820361044f57565b602435908160020b820361044f57565b67ffffffffffffffff8111610cc057604052565b634e487b7160e01b600052604160045260246000fd5b6060810190811067ffffffffffffffff821117610cc057604052565b90601f8019910116810190811067ffffffffffffffff821117610cc057604052565b906040516080810181811067ffffffffffffffff821117610cc05760405260606002829480546001600160801b0390818116865260801c602086015260018201541660408501520154910152565b6001600160a01b03600154163303610d7657565b606460405162461bcd60e51b815260206004820152602060248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e65726044820152fd5b8054821015610dd65760005260206000209060011b0190600090565b634e487b7160e01b600052603260045260246000fd5b600291820b910b0390627fffff198212627fffff831317610e0957565b634e487b7160e01b600052601160045260246000fd5b9190916001600160801b0380809416911601918211610e0957565b91908201809211610e0957565b6001600160801b039182169082160391908211610e0957565b92939495909560009586976001600160a01b0360095416803b15610be757604051631ac6758960e11b81526001600160a01b03881660048201523360248201523060448201526001600160801b03831660648201529089908290608490829084905af1801561135057611333575b5091610ede91610eeb9387611c0a565b9260045460020b90610dec565b600281900b86811261131a5750939591955b85925b62ffffff861661ffff83160362ffffff81116113065762ffffff166001600160801b03851610156112c2576001600160801b03881615611269576004548060020b988992610f4d8b612920565b906001600160a01b03600354169b8c6001600160a01b038b16146000146111fb57508a9b50848b526020946005865260408c20846003820194829f8460005233815260088a5260409020846000528952600a546001600160801b031692546001600160801b0316610fbd93612e88565b956002546001600160a01b031697627fffff1982821c60020b85011282821c60020b8501627fffff12176111e7571c60020b820193929187918f5b546001600160801b0316906001600160801b031610159761101891612815565b8560045460020b9061102a918d61217e565b5060045460020b61103b908c612244565b60045460020b9061104c818361241d565b5091611057936125e1565b61106091610e1f565b9b6110729561114b575b505050610e47565b926001600160801b03600a54166001600160801b03851611156110b3575b62ffffff6110a961ffff928260045460201c1690610e1f565b9498915050610f00565b926001600160a01b036009541690813b1561114757604051631ac6758960e11b81526001600160a01b03871660048201523060248201523360448201526001600160801b039190911660648201529087908290608490829084905af1801561113c57908791611124575b5092611090565b61112d90610cac565b61113857853861111d565b8580fd5b6040513d89823e3d90fd5b8780fd5b806001600160801b03915460809181831c9084600193848301938454948361117583828916610e1f565b166001600160801b031980971617905561119460028501918254610e3a565b9055169055845480931c91850190815490856111b285828516610e1f565b1691161790556111c760028501918254610e3a565b905516905562ffffff19600454169062ffffff161760045538808061106a565b60248f634e487b7160e01b81526011600452fd5b94908b929c9486845260056020526040842092600384019e8f95896000523381526008602052604090208960005260205286600a546001600160801b03169187546001600160801b03169161124f93612e88565b909798899360201c60020b61126391610dec565b95610ff8565b604080516001600160801b03998a16815298909116602089015291966001600160a01b039490941695507fc489dd1442ec1b08fb3b4a8339b7f96fd0f85f9b9a42d702819c1c78a3d11fc494508392505081015b0390a2565b606460405162461bcd60e51b815260206004820152601160248201527f4f55545f4f465f534c49505f4c494d49540000000000000000000000000000006044820152fd5b602488634e487b7160e01b81526011600452fd5b9050627fffff198114610e095760000393959195610efd565b91610eeb939198611346610ede94610cac565b9891935091610ece565b6040513d8b823e3d90fd5b1561136257565b606460405162461bcd60e51b815260206004820152600f60248201527f4f524445525f4e4f545f455849535400000000000000000000000000000000006044820152fd5b805480156113e45760001901906113bd8282610dba565b6113ce576001816000809355015555565b634e487b7160e01b600052600060045260246000fd5b634e487b7160e01b600052603160045260246000fd5b9061140490611f47565b9060003381526007602052604081208360020b8252602052604081206001600160a01b03831682526020526040812054600019916114448383141561135b565b3381526006602052604081209161145b8184610dba565b509161148a6001600160a01b03600185015416611478818a612815565b611482818a61241d565b50918a6125e1565b5080946001600160a01b03600354166001600160a01b038816146000146116fc578760020b825260056020526040822060038101903384526008602052604084208a60020b855260205260026040852001903385526008602052604085208b60020b86526020526001600260408720925b01549101541015611638575b50508454818101908111611624576001600160a01b0360019387969593604061153484956115df9b610dba565b509233815260076020528181209688850197885460a01c60020b600052602052826000208686541660005260205282600020553381526007602052208c60020b6000526020526040600020838c166000526020526040600020556115ba845460a01c60020b8688019062ffffff60a01b1982549160a01b62ffffff60a01b169116179055565b5416916001600160a01b031992838654161785555416908284015416179101556113a6565b6001600160801b03604051911681527f807645a5ce4bf61d15b017a8b4178dedd7ff00eb9d90b15bbd5c981252e4fe7560206001600160a01b03339560020b941692a4565b602483634e487b7160e01b81526011600452fd5b9096506001600160801b03819392935416968054906001600160801b036116618a828516610e47565b166001600160801b031980931617905581541690556001600160a01b0360095416803b156102ff57604051631ac6758960e11b81526001600160a01b03891660048201523060248201523360448201526001600160801b03881660648201529082908290608490829084905af180156116f1576116e2575b80929192611507565b6116eb90610cac565b386116d9565b6040513d84823e3d90fd5b8760020b8252600560205260408220600381013384526008602052604084208a60020b855260205260408420903385526008602052604085208b60020b865260205260016002806040882001926114fb565b6000198114610e095760010190565b8051821015610dd65760209160051b010190565b67ffffffffffffffff8111610cc05760051b60200190565b6001600160a01b03809116916000918383526020916006835260406117b381862092835490612910565b936117bd85611771565b946117ca83519687610cf2565b808652601f196117d982611771565b0136838801378690875b818110611955575050805b61181e57505050505050807fc18cced4ef47e8fff8412a99bc09b8afb2f057f42c940accd159af4f5452985891a2565b60001981810182811161194157611835908861175d565b516118408187610dba565b5091865481810190811161192d5791888b6118e3888f84968c6118668f9a859c9b610dba565b509583815260079384865282822094600191828a019b8c549860a09860029a8a1c8b0b87528152868620908d8d54168752528585205583528d52828220908c019c8d54861c870b8352528d82822090898d541683525220558554901c900b879062ffffff60a01b1982549160a01b62ffffff60a01b169116179055565b5416926001600160a01b03199384825416179055541690825416179055611909846113a6565b80156119195760001901806117ee565b602487634e487b7160e01b81526011600452fd5b60248b634e487b7160e01b81526011600452fd5b602489634e487b7160e01b81526011600452fd5b61197660016119648389610dba565b500154888160a01c60020b9116611a28565b6001600160801b03928316159291836119d2575b50826119c7575b50506119a6575b6119a19061174e565b6117e3565b916119bf81846119b96119a1948c61175d565b5261174e565b929050611998565b161590503880611991565b82161592503861198a565b156119e457565b606460405162461bcd60e51b815260206004820152600a60248201527f57524f4e475f534f4c44000000000000000000000000000000000000000000006044820152fd5b91906001600160a01b03600291818354168286169081149081938215611bbf575b505015611b7b57611a5b600091611f47565b908215611b41575080830b600081815260056020908152604080832033845260088352818420948452939091529020958685019391905b6001600160801b0380955416976000809160018b9986015491015410600014611b2a57505092611b0792611b0d9592611ace611adc9684612512565b509690969a858816146119dd565b611ae7600093612920565b9115611b1057611b0093600a5416905460801c90612e88565b9092610e1f565b94610e1f565b91565b91611b2493600a5416925460801c92612e88565b92610e1f565b94611b07949199925092611ae7611b0d9794612920565b81840b8082526005602090815260409283902033600090815260088352848120938152929091529190208085019690939160030190611a92565b606460405162461bcd60e51b815260206004820152600d60248201527f494e56414c49445f544f4b454e000000000000000000000000000000000000006044820152fd5b600354161490503880611a49565b9081602091031261044f57516001600160801b038116810361044f5790565b9190916001600160801b0380809416911602918216918203610e0957565b939190600954936000906001600160a01b03809616936040908151987f95d12000000000000000000000000000000000000000000000000000000000008a526020986004928a8c85818c5afa8015611f3d578b9c889c9a9b9c91611f20575b50620186a09085828b611c856001600160801b03948592611bec565b16049b8d8951928380927fa886e5f90000000000000000000000000000000000000000000000000000000082525afa908115611f16578d9e9f8484611cd78f958f968d96869892611ef7575b50611bec565b16049e8a51928380927f343dfb7e0000000000000000000000000000000000000000000000000000000082525afa918215611eed5790611d2192918c92611ec0575b50508b611bec565b16049a8260015416813b15610be7578651631ac6758960e11b8082526001600160a01b03808816838a01908152306020820152931660408401526001600160801b038d1660608401529594939290918a91839182908490829060800103925af18015611eb657611ea3575b50816009541690813b15610be75786518581526001600160a01b03808616888301908152306020820152921660408301526001600160801b038d16606083015291899183919082908490829060800103925af18015611e9957908891611e85575b50506009541691823b15610beb5784519081526001600160a01b03918216938101938452306020850152941660408301526001600160801b0389166060830152849184919082908490829060800103925af1908115611e7c5750611e68575b505091611e60611e6092611e659594610e47565b610e47565b90565b611e728291610cac565b6101bd5780611e4c565b513d84823e3d90fd5b611e8e90610cac565b610beb578638611ded565b86513d8a823e3d90fd5b611eaf90989198610cac565b9638611d8c565b87513d8b823e3d90fd5b611edf9250803d10611ee6575b611ed78183610cf2565b810190611bcd565b3880611d19565b503d611ecd565b89513d8d823e3d90fd5b611f0f919250863d8811611ee657611ed78183610cf2565b9038611cd1565b88513d8c823e3d90fd5b611f3791508a3d8c11611ee657611ed78183610cf2565b38611c69565b85513d89823e3d90fd5b9060045460201c60020b9160020b918015611fb257627fffff198314600019821416610e09578080840560020b028060020b908103610e0957809382600082129182611fa3575b5050611f98575050565b611e65929350610dec565b0760020b151590508238611f8e565b634e487b7160e01b600052601260045260246000fd5b90611fd290611f47565b9060009133835260209260078452604092838220918360020b928382528652848120916001600160a01b03809116928383528752858220546000199461201a8683141561135b565b338452600689528784209561202f8388610dba565b5094600186019661205a868954169a6120488c82612815565b6120528c8261241d565b9d90926125e1565b996120be575b5050505050505050506001600160801b03161561207b575050565b60649250519062461bcd60e51b82526004820152600b60248201527f4e4f5f4541524e494e47530000000000000000000000000000000000000000006044820152fd5b885483810190811161162457928b879592936121709a98948f6120ed6001600160801b039f9e9c9a988d610dba565b5033808552600780845286862060018401805460a01c60020b885290855287872084548c16885285528787209b909b5590855282528484209684529581528383209183525220558254865462ffffff60a01b191662ffffff60a01b9091161786555416926001600160a01b031993848254161790555416908254161790556113a6565b903880808080808080612060565b9291926000906001600160a01b038060035416911614600014612212575060020b8060005260056020526003604060002001903360005260086020526040600020906000526020526002604060002001905b80546001600160801b0391826121e887828516610e1f565b166001600160801b031980931617905582549161220a81841696871597610e1f565b169116179055565b9060409060020b91828152600560205220903360005260086020526040600020906000526020526040600020906121d0565b9060009161225182612920565b926001600160a01b038060035416908316146000146123c457506123456123648360020b948560005260056020526122c560406000206003810192819833600052600860205260406000209060005260205260026040600020016001600160801b038080600a541692541693541690612e88565b9390809490975b8354956001600160801b0396876122e585828416610e47565b166001600160801b031980921617865561232661230683855460801c610e1f565b84546001600160801b031660809190911b6001600160801b031916178455565b87612335845493828516610e47565b169116179055825460801c610e1f565b6001600160801b036001600160801b031983549260801b169116179055565b831661236f57505050565b604080516001600160a01b0392909216825260029290920b60208201526001600160801b0392909216908201527fc5694611e5eb7da7cf71b4805c895d2f63437c40e24fc1a538c555d16220956c90606090a1565b612364612345916124148560020b9687835260056020526040808420936003850199338252600860205282822090825260205220906001600160801b038080600a5416935416908a541692612e88565b939080976122cc565b916000906000926001600160a01b038060025416911614806000146124e1578460020b908185526005602052604085209133865260086020526040862090865260205260026040862001955b6001600160801b03809754169586156124d35750906124888692612920565b90156124b6576124a29287600a5416905460801c90612e88565b939093945b8516146124b057565b60019150565b6124cb929187600a5416925460801c92612e88565b9390946124a7565b965086955060019450505050565b8460020b90818552600560205260036040862001913386526008602052604086209086526020526040852095612469565b916000906000926001600160a01b038060025416911614806000146125b0578460020b908185526005602052604085209133865260086020526040862090865260205260026040862001955b6001600160801b03809754169586156124d357509061257d8692612920565b9015612599576124a29287600181600a54169201541690612e88565b6124cb929187600181600a54169401541692612e88565b8460020b9081855260056020526003604086200191338652600860205260408620908652602052604085209561255e565b90919261267e949360006001600160a01b03908160025416828716146000146127c15750600284810b60008181526005602090815260408083203384526008835281842094845293909152902093916001919085015b61266861264888845460801c610e47565b83546001600160801b031660809190911b6001600160801b031916178355565b8054936001600160801b039b8c91828716610e47565b166001600160801b03198095161790558454948a8660801c961690550190815490896126ac86828516610e47565b169116179055866126bd8385610e1f565b16612731575b506126cd91610e1f565b809481166126da57505050565b604080516001600160a01b03909416845260029290920b60208401526001600160801b03169082015233907fcd2e4759ece8dd6157c6d60523bf0116894077b173f774cd194b1354d2d22b7e9080606081016112bd565b60095416916127408282610e1f565b92803b1561044f57604051631ac6758960e11b81526001600160a01b03871660048201523060248201523360448201526001600160801b039490941660648501526000908490608490829084905af19283156127b5576126cd936127a6575b50916126c3565b6127af90610cac565b3861279f565b6040513d6000823e3d90fd5b916001600360408760020b9586815260056020522001336000526008602052604060002085600052602052604060002094336000526008602052604060002090600052602052600260406000200194612637565b6000906001600160a01b039160029280845416908516146000146128d7575080820b6000818152600560209081526040808320338452600883528184209484529390915290209283810192915b019283549460018201958654106000146128cf5761288c6128ae916001600160801b031994612512565b5083546001600160801b031660809190911b6001600160801b03191617909255565b6128c78354916001600160801b038084169116146119dd565b169055549055565b505050505050565b81830b80825260056020908152604092839020336000908152600883528481209381529290915291902080840193909291600301612862565b81811061291b575090565b905090565b60020b6000811215612e82577f80000000000000000000000000000000000000000000000000000000000000008114610e0957806000035b620d89e88111612e3e576001811615612e155770ffffffffffffffffffffffffffffffffff6ffffcb933bd6fad37aa2d162d1a5940015b169160028216612de9575b600491828116612dbd575b60088116612d91575b60108116612d65575b60208116612d39575b60408116612d0d575b608090818116612ce2575b6101008116612cb7575b6102008116612c8c575b6104008116612c61575b6108008116612c36575b6110008116612c0b575b6120008116612be0575b6140008116612bb5575b6180008116612b8a575b620100008116612b5f575b620200008116612b35575b620400008116612af7575b6208000016612ab8575b50600012612a90575b50612a836001600160a01b039163ffffffff811615600014612a875760ff60005b169060201c610e3a565b1690565b60ff6001612a79565b8115612aa3575060001904612a83612a58565b601290634e487b7160e01b6000525260246000fd5b6b048a170391f7dc42444e8fa293919391828102928184041490151715612ae2571c916000612a4f565b601183634e487b7160e01b6000525260246000fd5b936d2216e584f5fa1ea926041bedfe9890818102918183041490151715612b2057811c93612a45565b601184634e487b7160e01b6000525260246000fd5b936e5d6af8dedb81196699c329225ee60490818102918183041490151715612b2057811c93612a3a565b936f09aa508b5b7a84e1c677de54f3e99bc990818102918183041490151715612b2057811c93612a2f565b936f31be135f97d08fd981231505542fcfa690818102918183041490151715612b2057811c93612a24565b936f70d869a156d2a1b890bb3df62baf32f790818102918183041490151715612b2057811c93612a1a565b936fa9f746462d870fdf8a65dc1f90e061e590818102918183041490151715612b2057811c93612a10565b936fd097f3bdfd2022b8845ad8f792aa582590818102918183041490151715612b2057811c93612a06565b936fe7159475a2c29b7443b29c7fa6e889d990818102918183041490151715612b2057811c936129fc565b936ff3392b0822b70005940c7a398e4b70f390818102918183041490151715612b2057811c936129f2565b936ff987a7253ac413176f2b074cf7815e5490818102918183041490151715612b2057811c936129e8565b936ffcbe86c7900a88aedcffc83b479aa3a490818102918183041490151715612b2057811c936129de565b936ffe5dee046a99a2a811c461f1969c305390818102918183041490151715612b2057811c936129d4565b926fff2ea16466c96a3843ec78b326b5286190818102918183041490151715612ae25760801c926129c9565b926fff973b41fa98c081472e6896dfb254c090818102918183041490151715612ae25760801c926129c0565b926fffcb9843d60f6159c9db58835c92664490818102918183041490151715612ae25760801c926129b7565b926fffe5caca7e10e4e61c3624eaa0941cd090818102918183041490151715612ae25760801c926129ae565b926ffff2e50f5f656932ef12357cf3c7fdcc90818102918183041490151715612ae25760801c926129a5565b916ffff97272373d413259a46990580e213a90818102918183041490151715610e095760801c9161299a565b70ffffffffffffffffffffffffffffffffff70010000000000000000000000000000000061298f565b606460405162461bcd60e51b815260206004820152600160248201527f54000000000000000000000000000000000000000000000000000000000000006044820152fd5b80612958565b6001600160801b03808316956001600160a01b03909416949291612eb586612eb0818a612f69565b612f69565b92828416809403612f25578396838616809511612f1b575b612ee381612ede8693848c16613051565b613051565b169783612ef0848b610e1f565b161015612f11575b50612f039086610e1f565b161015612f0d5750565b9150565b9650612f03612ef8565b9496508694612ecd565b606460405162461bcd60e51b815260206004820152600460248201527f43313238000000000000000000000000000000000000000000000000000000006044820152fd5b6000198282099082810292838084109303918383039360009314612fb2576c0100000000000000000000000092848411156101bd57500990828211900360a01b910360601c1790565b505090505060601c90565b906c0100000000000000000000000090600019828409928060601b92838086109503948086039514613043578483111561044f578291098160018119011680920460028082600302188083028203028083028203028083028203028083028203028083028203028092029003029360018380600003040190848311900302920304170290565b50508092501561044f570490565b919061305d8184612fbd565b928115611fb2576c01000000000000000000000000900961307a57565b9060001981101561044f57611e659061174e56fea264697066735822122026ccf3aba07baa483e282ce4d733f806343451e38f0588f4eac89f94e3d2d7c364736f6c63430008130033";

type TokenExchangeConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: TokenExchangeConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class TokenExchange__factory extends ContractFactory {
  constructor(...args: TokenExchangeConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    bank: PromiseOrValue<string>,
    tX: PromiseOrValue<string>,
    tY: PromiseOrValue<string>,
    owner: PromiseOrValue<string>,
    tinyAmountThresh: PromiseOrValue<BigNumberish>,
    margin: PromiseOrValue<BigNumberish>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<TokenExchange> {
    return super.deploy(
      bank,
      tX,
      tY,
      owner,
      tinyAmountThresh,
      margin,
      overrides || {}
    ) as Promise<TokenExchange>;
  }
  override getDeployTransaction(
    bank: PromiseOrValue<string>,
    tX: PromiseOrValue<string>,
    tY: PromiseOrValue<string>,
    owner: PromiseOrValue<string>,
    tinyAmountThresh: PromiseOrValue<BigNumberish>,
    margin: PromiseOrValue<BigNumberish>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(
      bank,
      tX,
      tY,
      owner,
      tinyAmountThresh,
      margin,
      overrides || {}
    );
  }
  override attach(address: string): TokenExchange {
    return super.attach(address) as TokenExchange;
  }
  override connect(signer: Signer): TokenExchange__factory {
    return super.connect(signer) as TokenExchange__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): TokenExchangeInterface {
    return new utils.Interface(_abi) as TokenExchangeInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): TokenExchange {
    return new Contract(address, _abi, signerOrProvider) as TokenExchange;
  }
}
