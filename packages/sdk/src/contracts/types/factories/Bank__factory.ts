/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../common";
import type { Bank, BankInterface } from "../../contracts/Bank";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        internalType: "address",
        name: "exchange",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "pair",
        type: "address",
      },
    ],
    name: "authorize",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "balances",
    outputs: [
      {
        internalType: "uint128",
        name: "",
        type: "uint128",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint128",
        name: "holderPct",
        type: "uint128",
      },
      {
        internalType: "uint128",
        name: "ownerPct",
        type: "uint128",
      },
      {
        internalType: "uint128",
        name: "referralPct",
        type: "uint128",
      },
    ],
    name: "changeCommission",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "token",
        type: "address",
      },
      {
        internalType: "uint128",
        name: "amount",
        type: "uint128",
      },
    ],
    name: "deposit",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "holderPercent",
    outputs: [
      {
        internalType: "uint128",
        name: "",
        type: "uint128",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "ownerPercent",
    outputs: [
      {
        internalType: "uint128",
        name: "",
        type: "uint128",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "referralPercent",
    outputs: [
      {
        internalType: "uint128",
        name: "",
        type: "uint128",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "token",
        type: "address",
      },
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint128",
        name: "amount",
        type: "uint128",
      },
    ],
    name: "transferToken",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "token",
        type: "address",
      },
      {
        internalType: "uint128",
        name: "amount",
        type: "uint128",
      },
    ],
    name: "withdraw",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x6080346100c057601f610a2338819003918201601f19168301916001600160401b038311848410176100c55780849260409485528339810103126100c057610091610055602061004e846100db565b93016100db565b916001600055610064336100ef565b600380546001600160801b031916601e179055701e000000000000000000000000000000286002556100ef565b600580546001600160a01b0319166001600160a01b03929092169190911790556040516108ea90816101398239f35b600080fd5b634e487b7160e01b600052604160045260246000fd5b51906001600160a01b03821682036100c057565b600180546001600160a01b039283166001600160a01b0319821681179092559091167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0600080a356fe6080604081815260048036101561001557600080fd5b600092833560e01c90816308fab167146105d257508063343dfb7e146105b0578063358ceb1214610444578063715018a6146103d95780638da5cb5b146103b157806395d1200014610389578063a886e5f914610361578063b3fb6564146102e1578063b6a5d7de14610257578063c23f001f14610206578063c4016a1d146101925763f2fde38b146100a757600080fd5b3461018e57602036600319011261018e576100c06106a8565b906100c96106ef565b6001600160a01b038092169283156101255750506001548273ffffffffffffffffffffffffffffffffffffffff19821617600155167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e08380a380f35b906020608492519162461bcd60e51b8352820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201527f64647265737300000000000000000000000000000000000000000000000000006064820152fd5b8280fd5b83823461020257606036600319011261020257356001600160801b0380821680920361018e576101c06106d9565b9160443582811681036101fe576101d56106ef565b6fffffffffffffffffffffffffffffffff199182600354161760035560801b1691161760025580f35b8480fd5b5080fd5b503461018e578160031936011261018e57816020936001600160801b039261022c6106a8565b6102346106c3565b916001600160a01b03809216845287528383209116825285522054169051908152f35b503461018e57602036600319011261018e576102716106a8565b6001600160a01b03918260055416330361029e575016825260066020528120805460ff1916600117905580f35b606490602085519162461bcd60e51b8352820152601260248201527f4e4f5f5045524d495353494f4e5f4155544800000000000000000000000000006044820152fd5b50903461018e578060031936011261018e576fffffffffffffffffffffffffffffffff1961030d6106a8565b916103166106d9565b926001600160801b039461032e8686163033856107e1565b503387526020526001600160a01b0382872091168652602052842092610358845493828516610776565b16911617905580f35b5050346102025781600319360112610202576020906001600160801b03600354169051908152f35b5050346102025781600319360112610202576020906001600160801b03600254169051908152f35b5050346102025781600319360112610202576020906001600160a01b03600154169051908152f35b83346104415780600319360112610441576103f26106ef565b806001600160a01b0360015473ffffffffffffffffffffffffffffffffffffffff198116600155167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e08280a380f35b80fd5b503461018e57608036600319011261018e5761045e6106a8565b6104666106c3565b92604435916001600160a01b03948584168094036105ac57606435946001600160801b03968787168088036105a857338a5260209360068552600160ff888d20541615150361056657821691828b52838552868b20951694858b52845288868b20541610610524578852808252838820838952825283882094855495886104ef89828a16610747565b166fffffffffffffffffffffffffffffffff198098161790558852815282872091875252842092610358845493828516610776565b5060649184519162461bcd60e51b8352820152601360248201527f494e5355465f42414c414e43455f5452414e53000000000000000000000000006044820152fd5b6064848689519162461bcd60e51b8352820152601360248201527f4e4f5f5045524d495353494f4e5f5452414e53000000000000000000000000006044820152fd5b8980fd5b8680fd5b50503461020257816003193601126102025760209060025460801c9051908152f35b929050346106a457806003193601126106a4576105ed6106a8565b906001600160a01b036105fe6106d9565b921663a9059cbb60e01b855233848601526001600160801b039384841660248701526020866044818a865af195861561069a576fffffffffffffffffffffffffffffffff1994959661066c575b50338752602052818620908652602052842092610358845493828516610747565b61068c9060203d8111610693575b6106848183610791565b8101906107c9565b503861064b565b503d61067a565b83513d89823e3d90fd5b8380fd5b600435906001600160a01b03821682036106be57565b600080fd5b602435906001600160a01b03821682036106be57565b602435906001600160801b03821682036106be57565b6001600160a01b0360015416330361070357565b606460405162461bcd60e51b815260206004820152602060248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e65726044820152fd5b6001600160801b03918216908216039190821161076057565b634e487b7160e01b600052601160045260246000fd5b9190916001600160801b038080941691160191821161076057565b90601f8019910116810190811067ffffffffffffffff8211176107b357604052565b634e487b7160e01b600052604160045260246000fd5b908160209103126106be575180151581036106be5790565b6001600160a01b039391841691821561087657916000856064936020969560405198899788967f23b872dd00000000000000000000000000000000000000000000000000000000885260048801521660248601526044850152165af190811561086a5760009161084f575090565b610867915060203d8111610693576106848183610791565b90565b6040513d6000823e3d90fd5b939150602092600083604493604051978896879563a9059cbb60e01b87521660048601526024850152165af190811561086a5760009161084f57509056fea2646970667358221220917c5145677a7f953dc1d17087528279711113f44715d604abe10cab9bc6333b64736f6c63430008130033";

type BankConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: BankConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class Bank__factory extends ContractFactory {
  constructor(...args: BankConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    owner: PromiseOrValue<string>,
    exchange: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<Bank> {
    return super.deploy(owner, exchange, overrides || {}) as Promise<Bank>;
  }
  override getDeployTransaction(
    owner: PromiseOrValue<string>,
    exchange: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(owner, exchange, overrides || {});
  }
  override attach(address: string): Bank {
    return super.attach(address) as Bank;
  }
  override connect(signer: Signer): Bank__factory {
    return super.connect(signer) as Bank__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): BankInterface {
    return new utils.Interface(_abi) as BankInterface;
  }
  static connect(address: string, signerOrProvider: Signer | Provider): Bank {
    return new Contract(address, _abi, signerOrProvider) as Bank;
  }
}
